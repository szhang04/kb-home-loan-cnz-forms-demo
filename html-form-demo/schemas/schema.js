schema_string = `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:lx="lixi.org.au/schema/appinfo_elements" xmlns:li="lixi.org.au/schema/appinfo_instructions" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
  <xs:annotation>
    <xs:documentation>IMPORTANT: Copyright in this schema is owned by LIXI Limited and use of the schema is controlled by the LIXI End User Licence Agreement (EULA) which can be downloaded from http://www.lixi.org.au. The EULA does not permit you to extend the schema through the addition of new elements or attributes, or modify the content model or any data values in a manner that would be inconsistent with the Standard. However you are permitted to restrict the schema such that it specifies the structures for capturing only the information you wish to receive. This statement in no way limits or modifies the terms of the EULA, and you should ensure that you are familiar with your rights and obligations under the EULA before using the schema.</xs:documentation>
    <xs:documentation>This schema (LIXI-CNZ-Custom-annotated.xsd) is a customised schema (by restriction) from CNZ 2.1.31, a sub-schema derived from the LIXI Master Schema (LIXI-Master-2_2_58-draft-Annotated.xsd) that includes the annotation documentation.</xs:documentation>
    <xs:appinfo>
      <lx:schemadetail type="Custom" version="dev-wip" annotation="Full" lifecyclestage="Development" timestamp="2023_01_28-15_35" transaction="CNZ" masterschemasource="LIXI-Master-2_2_58-draft-Annotated.xsd" transactionschemasource="CNZ 2.1.31"/>
      <li:schemacustomisation>
        <li:Exclude>
          <li:path>addressType.DataSource</li:path>
          <li:path>addressType.Latitude</li:path>
          <li:path>addressType.LGAName</li:path>
          <li:path>addressType.Longitude</li:path>
          <li:path>addressType.OverseasPostCode</li:path>
          <li:path>addressType.OverseasState</li:path>
          <li:path>addressType.RuralDeliveryNumber</li:path>
          <li:path>addressType.SequenceNumber</li:path>
          <li:path>addressType.Suburb</li:path>
          <li:path>addressType.TBAAddress</li:path>
          <li:path>addressType.DeliveryPoint</li:path>
          <li:path>addressType.Standard.BuildingName</li:path>
          <li:path>addressType.Standard.Level</li:path>
          <li:path>addressType.Standard.StreetSuffix</li:path>
          <li:path>addressType.Standard.Unit</li:path>
          <li:path>financialAccountType.AccountTypeName</li:path>
          <li:path>financialAccountType.OtherFIName</li:path>
          <li:path>financialAccountType.SequenceNumber</li:path>
          <li:path>Package.UniqueID</li:path>
          <li:path>Package.Attachment</li:path>
          <li:path>Package.TransformMetadata</li:path>
          <li:path>Package.Content.NeedsAnalysis</li:path>
          <li:path>Package.Content.StatementOfPosition</li:path>
          <li:path>Package.Content.Application.UniqueID</li:path>
          <li:path>Package.Content.Application.AccountVariation</li:path>
          <li:path>Package.Content.Application.BusinessChannel</li:path>
          <li:path>Package.Content.Application.CompanyFinancials</li:path>
          <li:path>Package.Content.Application.CustomerTransactionAnalysis</li:path>
          <li:path>Package.Content.Application.Declarations</li:path>
          <li:path>Package.Content.Application.DepositAccountDetails</li:path>
          <li:path>Package.Content.Application.DetailedComment</li:path>
          <li:path>Package.Content.Application.Insurance</li:path>
          <li:path>Package.Content.Application.LendingGuarantee</li:path>
          <li:path>Package.Content.Application.MasterAgreement</li:path>
          <li:path>Package.Content.Application.OtherExpense</li:path>
          <li:path>Package.Content.Application.OtherIncome</li:path>
          <li:path>Package.Content.Application.Overview</li:path>
          <li:path>Package.Content.Application.ProductSet</li:path>
          <li:path>Package.Content.Application.SalesChannel</li:path>
          <li:path>Package.Content.Application.VendorTaxInvoice</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.AllowDirectMarketing</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.AllowThirdPartyDisclosure</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ApplicantType</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BusinessName</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BusinessNameSameAsCompanyName</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BusinessStructure</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.CompanyNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.CreditStatus</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.DateRegistered</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ExchangeListedOn</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ExemptStatus</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.GSTRegisteredDate</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IRDNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IsExistingCustomer</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IsHoldingCompany</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.LicenceNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NumberOfDirectors</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NumberOfPartners</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NumberOfShareholders</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NZBNVerified</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.PrimaryApplicant</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.PublicAuthority</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ReasonForObtainingLoan</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.RegisteredForGST</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.RegisteredForLTC</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.RegisteredInCountry</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.SequenceNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.TradingMoreThanTwoYears</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.TypeOfIncorporation</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.x_Accountant</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.x_SoleTrader</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.x_TradeReference</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.AuthorisedSignatory</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BeneficialOwner</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Business</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Contact</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.CreditHistory</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.DeclaredIncome</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Director</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ExistingCustomer</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.FinancialAnalysis</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Income</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomePrevious</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomePrior</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomeRecent</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomeYearToDate</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Partner</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Privacy</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ResponsibleLending</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Shareholder</li:path>
          <li:path>Package.Content.Application.ContributionFunds.Description</li:path>
          <li:path>Package.Content.Application.ContributionFunds.Loan</li:path>
          <li:path>Package.Content.Application.ContributionFunds.SequenceNumber</li:path>
          <li:path>Package.Content.Application.ContributionFunds.UniqueID</li:path>
          <li:path>Package.Content.Application.ContributionFunds.x_AssociatedLoanAccount</li:path>
          <li:path>Package.Content.Application.ContributionFunds.x_FundsHeldInAccount</li:path>
          <li:path>Package.Content.Application.Funder.Amount</li:path>
          <li:path>Package.Content.Application.Funder.LicenceNumber</li:path>
          <li:path>Package.Content.Application.Funder.OtherIdentifier</li:path>
          <li:path>Package.Content.Application.Funder.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Funder.x_LoanDetails</li:path>
          <li:path>Package.Content.Application.Funder.Contact</li:path>
          <li:path>Package.Content.Application.Household.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.EducationExpenses</li:path>
          <li:path>Package.Content.Application.Household.Dependant.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.BrokerVerifiedExpense</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.BrokerVerifiedExpenseDetails</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.StatedLessThanCalculatedLivingExpensesDetails</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.TotalSystemCalculatedLivingExpenses</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.TotalUserStatedLivingExpenses</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.Description</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.EndDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.StartDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.PercentResponsible</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.Description</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.EndDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.StartDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.PercentResponsible</li:path>
          <li:path>Package.Content.Application.Liability.BuyNowPayLater</li:path>
          <li:path>Package.Content.Application.Liability.ClearingFromOtherSourceAmount</li:path>
          <li:path>Package.Content.Application.Liability.ClearingFromThisLoanAmount</li:path>
          <li:path>Package.Content.Application.Liability.CreditCardType</li:path>
          <li:path>Package.Content.Application.Liability.CreditLimit</li:path>
          <li:path>Package.Content.Application.Liability.CreditRiskGrade</li:path>
          <li:path>Package.Content.Application.Liability.Description</li:path>
          <li:path>Package.Content.Application.Liability.FastRefinance</li:path>
          <li:path>Package.Content.Application.Liability.HasArrears</li:path>
          <li:path>Package.Content.Application.Liability.HasPreviousArrears</li:path>
          <li:path>Package.Content.Application.Liability.HasUndrawnFunds</li:path>
          <li:path>Package.Content.Application.Liability.LimitExceededCurrently</li:path>
          <li:path>Package.Content.Application.Liability.LimitExceededPreviously</li:path>
          <li:path>Package.Content.Application.Liability.LVR</li:path>
          <li:path>Package.Content.Application.Liability.NegativelyGeared</li:path>
          <li:path>Package.Content.Application.Liability.NegativelyGearedPercentage</li:path>
          <li:path>Package.Content.Application.Liability.NewLimit</li:path>
          <li:path>Package.Content.Application.Liability.OriginalLoanPurpose</li:path>
          <li:path>Package.Content.Application.Liability.OriginationDate</li:path>
          <li:path>Package.Content.Application.Liability.OriginatorReferenceID</li:path>
          <li:path>Package.Content.Application.Liability.Overdrawn</li:path>
          <li:path>Package.Content.Application.Liability.ProductCode</li:path>
          <li:path>Package.Content.Application.Liability.RefinanceAmount</li:path>
          <li:path>Package.Content.Application.Liability.RefinanceCosts</li:path>
          <li:path>Package.Content.Application.Liability.RepaidDate</li:path>
          <li:path>Package.Content.Application.Liability.RevertInterestRate</li:path>
          <li:path>Package.Content.Application.Liability.Suspended</li:path>
          <li:path>Package.Content.Application.Liability.Arrears</li:path>
          <li:path>Package.Content.Application.Liability.ContinuingRepayment</li:path>
          <li:path>Package.Content.Application.Liability.DiscountMargin</li:path>
          <li:path>Package.Content.Application.Liability.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.Liability.Package</li:path>
          <li:path>Package.Content.Application.Liability.PublicAuthorityOwed</li:path>
          <li:path>Package.Content.Application.Liability.RateComposition</li:path>
          <li:path>Package.Content.Application.Liability.Software</li:path>
          <li:path>Package.Content.Application.Liability.PercentOwned.Owner.OwnerType</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.LoanPaymentScheduleType</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.PaymentTiming</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.PaymentType</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.Regular</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.RemainingRepayments</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.TaxDeductible</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.UniqueID</li:path>
          <li:path>Package.Content.Application.Liability.Security.MortgageNumber</li:path>
          <li:path>Package.Content.Application.Liability.Security.Priority</li:path>
          <li:path>Package.Content.Application.Liability.Security.PriorityAmount</li:path>
          <li:path>Package.Content.Application.Liability.Security.MortgagorDetails</li:path>
          <li:path>Package.Content.Application.Liability.Security.SecurityAgreement</li:path>
          <li:path>Package.Content.Application.LoanDetails.BalloonRepaymentAmount</li:path>
          <li:path>Package.Content.Application.LoanDetails.BalloonRepaymentDate</li:path>
          <li:path>Package.Content.Application.LoanDetails.BuyNowPayLater</li:path>
          <li:path>Package.Content.Application.LoanDetails.Funder</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanType</li:path>
          <li:path>Package.Content.Application.LoanDetails.LVR</li:path>
          <li:path>Package.Content.Application.LoanDetails.MainProduct</li:path>
          <li:path>Package.Content.Application.LoanDetails.NegativelyGeared</li:path>
          <li:path>Package.Content.Application.LoanDetails.NominateBalloonRepayment</li:path>
          <li:path>Package.Content.Application.LoanDetails.OriginatorReferenceID</li:path>
          <li:path>Package.Content.Application.LoanDetails.ProposedAnnualInterestRate</li:path>
          <li:path>Package.Content.Application.LoanDetails.RevertInterestRate</li:path>
          <li:path>Package.Content.Application.LoanDetails.Secured</li:path>
          <li:path>Package.Content.Application.LoanDetails.SequenceNumber</li:path>
          <li:path>Package.Content.Application.LoanDetails.SpecialConcessionCode</li:path>
          <li:path>Package.Content.Application.LoanDetails.StatementCycle</li:path>
          <li:path>Package.Content.Application.LoanDetails.TaxDeductible</li:path>
          <li:path>Package.Content.Application.LoanDetails.TemplateID</li:path>
          <li:path>Package.Content.Application.LoanDetails.x_MasterAgreement</li:path>
          <li:path>Package.Content.Application.LoanDetails.AuthorityToOperate</li:path>
          <li:path>Package.Content.Application.LoanDetails.Borrowers</li:path>
          <li:path>Package.Content.Application.LoanDetails.BulkReduction</li:path>
          <li:path>Package.Content.Application.LoanDetails.Commission</li:path>
          <li:path>Package.Content.Application.LoanDetails.DiscountMargin</li:path>
          <li:path>Package.Content.Application.LoanDetails.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.LoanDetails.DSH</li:path>
          <li:path>Package.Content.Application.LoanDetails.EquityRelease</li:path>
          <li:path>Package.Content.Application.LoanDetails.FeaturesSelected</li:path>
          <li:path>Package.Content.Application.LoanDetails.FundsDisbursement</li:path>
          <li:path>Package.Content.Application.LoanDetails.Guarantor</li:path>
          <li:path>Package.Content.Application.LoanDetails.Package</li:path>
          <li:path>Package.Content.Application.LoanDetails.ProposedRepayment</li:path>
          <li:path>Package.Content.Application.LoanDetails.RateComposition</li:path>
          <li:path>Package.Content.Application.LoanDetails.Software</li:path>
          <li:path>Package.Content.Application.LoanDetails.SupplementaryCardholder</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.ABSLendingPurpose</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.Description</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.IncludesRefinancing</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.LenderCode</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.PurposeOfFunds</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.RefinancingReason</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.UniqueID</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanPurpose.NCCPStatus</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanPurpose.Occupancy</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanPurpose.OwnerBuilderApplication</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.Priority</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.SequenceNumber</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.UniqueID</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.SecurityAgreement</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.LoanReviewDate</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.InterestOnlyReason</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.LoanReviewPeriod</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ContractOfSale</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Encumbered</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialTransactionType</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.PrimarySecurity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ToBeSold</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ToBeUsedAsSecurity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Transaction</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.x_VendorTaxInvoice</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.AgriculturalAsset</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Aircraft</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Business</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.CleaningEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ContractDetails</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Encumbrance</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Insurance</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Licence</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MedicalEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MobileComputing</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.OfficeEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.OtherAsset</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.PPSR</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ToolsOfTrade</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Watercraft</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.WaterRights</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVAmount</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVInputPattern</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVPercent</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.EstimatedCGTLiability</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.MinimumResidualValue</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.TaxDepreciationMethod</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.TaxDepreciationRate</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Description</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.TransferOwnershipToSMSF</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.ClassOfShare</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.AdditionalIDType</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.AdditionalIDValue</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Age</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Badge</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Body</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Colour</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Condition</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.ConditionDescription</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Cylinders</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Description</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Doors</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EffectiveLife</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineCapacity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineHoursTotal</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineID</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.ExcessUsageCalculationMethod</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.FuelType</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.IncludedUsage</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Kilometres</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Options</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.OtherInformation</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Quantity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.RegistrationExpiryDate</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.SerialNumber</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Series</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Subtype</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Transmission</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Type</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.UsageAtStart</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.UsageUnitOfMeasurement</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Variant</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.x_GoodToBeUsedAddress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Citizenship</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CompanyDirector</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CountryOfBirth</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CreditStatus</li:path>
          <li:path>Package.Content.Application.PersonApplicant.DateOfCitizenship</li:path>
          <li:path>Package.Content.Application.PersonApplicant.DiscussedWithBeneficiaries</li:path>
          <li:path>Package.Content.Application.PersonApplicant.EligibleForFHOG</li:path>
          <li:path>Package.Content.Application.PersonApplicant.EligibleForKaingaOra</li:path>
          <li:path>Package.Content.Application.PersonApplicant.FirstHomeBuyer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Gender</li:path>
          <li:path>Package.Content.Application.PersonApplicant.HasAWill</li:path>
          <li:path>Package.Content.Application.PersonApplicant.HasPreviousName</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Immigrant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ImmigrationDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IndependentFinancialAdvice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IndependentLegalAdvice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IRDNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IsExistingCustomer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IsLenderStaff</li:path>
          <li:path>Package.Content.Application.PersonApplicant.JointNomination</li:path>
          <li:path>Package.Content.Application.PersonApplicant.JointStatementOfPosition</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MonthsInCurrentProfession</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MothersMaidenName</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PlaceOfBirth</li:path>
          <li:path>Package.Content.Application.PersonApplicant.POAGranted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PrimaryApplicant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PrincipalForeignResidence</li:path>
          <li:path>Package.Content.Application.PersonApplicant.UnderDuress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.UnderstandApplication</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_Household</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_PersonalReference</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_Solicitor</li:path>
          <li:path>Package.Content.Application.PersonApplicant.YearsInCurrentProfession</li:path>
          <li:path>Package.Content.Application.PersonApplicant.AdditionalCitizenship</li:path>
          <li:path>Package.Content.Application.PersonApplicant.AdditionalForeignResidency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CreditHistory</li:path>
          <li:path>Package.Content.Application.PersonApplicant.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ExistingCustomer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Insurance</li:path>
          <li:path>Package.Content.Application.PersonApplicant.NextOfKin</li:path>
          <li:path>Package.Content.Application.PersonApplicant.NominatedBorrower</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PowerOfAttorney</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PreviousName</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Privacy</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ResponsibleLending</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Will</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreferredContact</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PostSettlementAddress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PriorAddress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.HousingStatus</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.StartDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.x_Landlord</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress.UniqueID</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.EndDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.HousingStatus</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.StartDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.AverageHoursPerWeek</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.CompanyCar</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.CustomIndustryCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.CustomOccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.EmployerType</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.GICSCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Industry</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.MainBusinessActivity</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.OnProbation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.PositionTitle</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.ProbationDateEnds</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.ProbationDateStarts</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.RelatedEmployer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.JobseekerSupportAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.JobseekerSupportFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetGovernmentBenefitsAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetGovernmentBenefitsFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetJobseekerSupportAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetJobseekerSupportFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetOtherIncomeAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetOtherIncomeFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetPrivatePensionAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetPrivatePensionFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetSuperannuationAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetSuperannuationFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.ProofCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.ProofSighted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.SMSF</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.ANZSCOOccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.AverageHoursPerWeek</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.CompanyCar</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.CustomIndustryCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.EmployerType</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.GICSCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Industry</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.IndustryCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.KiwiSaver</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.KiwiSaverPercentage</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.MainBusinessActivity</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.NewZealandBICCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.OccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.OnProbation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.PositionTitle</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.ProbationDateEnds</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.RelatedEmployer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.BonusAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.BonusFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossRegularOvertimeAmountConditionOfEmployment</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetBonusAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetBonusFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCarAllowanceAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCarAllowanceFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCommissionAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCommissionFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetRegularOvertimeAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetRegularOvertimeFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetSalaryAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetSalaryFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkAllowanceAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkAllowanceFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkersCompensationAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkersCompensationFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.ProofCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.ProofSighted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkAllowanceAmountConditionOfEmployment</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkersCompensationAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkersCompensationFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.ANZSCOOccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.AverageHoursPerWeek</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Basis</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.OccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Business</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.DeclaredIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.IncomeGreaterThanPreviousYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.TaxOfficeAssessments</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.IncomeGreaterThanPreviousYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.TaxOfficeAssessments</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.IncomeGreaterThanPreviousYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProofCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProofSighted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.TaxOfficeAssessments</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.AmortisationOfGoodwill</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.CarryForwardLosses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Depreciation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.HomeOffice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.NonCashBenefits</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.NonRecurringExpenses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.SuperannuationExcess</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.AmortisationOfGoodwill</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.CarryForwardLosses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Depreciation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.HomeOffice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.NonCashBenefits</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.NonRecurringExpenses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.SuperannuationExcess</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.MaritalStatusChangeDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.SpouseEarnsIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.SpouseGrossIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.AustralianStateOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.CardNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.CertifiedCopy</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.CountryOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DateDocumentVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DateOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DOBVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DocumentCategory</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ExpiryDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ExpiryMonth</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ExpiryYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.IsPreviousNameIdentification</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.IssuingOrganisation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.MiddleNameOnDocument</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.NameOnDocument</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.NameVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.Original</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.OtherDescription</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.PhotographVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.PlaceOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ResidentialAddressVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.SignatureVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.UniqueID</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.x_AddressOnDocument</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.x_LocationDocumentVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.Attachment</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ApprovalInPrinciple</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Construction</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractOfSale</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.DataSource</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbered</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.GSTToBeClaimed</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Holding</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.InvestmentPropertyLetter</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.LegalRepresentation</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.MultipleDwellings</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.NRASConsortium</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.NRASProperty</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Occupancy</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.OnMarketTransaction</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PrimaryLandUse</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PrimarySecurity</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PrimaryUsage</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyID</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PurchaseUnderAOCWrap</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ToBeSold</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ToBeUsedAsSecurity</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ValuationProgram</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.x_PropertyAgent</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Commercial</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ConstructionDetails</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Industrial</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Insurance</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyExpense</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertySearchValidation</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyType</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.RentalIncome</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Residential</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Rural</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.VisitContact</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Zoning</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.ArmsLengthTransaction</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.ContractDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.DepositAmount</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.DepositPercentageRequested</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.EstimatedSettlementDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.FinanceApprovalDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.LicencedRealEstateAgentContract</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.TransferOfLandAmount</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.x_Vendor</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbrance.Description</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbrance.RegisteredNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbrance.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.EstimatedCGTLiability</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.EstimateMethodology</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.ValuedDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.x_Valuer</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.AllPropertyFeatures</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.FloorArea</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.LandArea</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.LandAreaUnits</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfDwellings</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PoolType</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PropertyDescription</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PropertyID</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PropertyImage</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.RoofMaterial</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.UniqueID</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Representation.x_VendorConveyancer</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.County</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.DuplicateTitleIssued</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Folio</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Lot</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.LotPlan</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.OtherDetails</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Parish</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Plan</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.TenureType</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.TitleReference</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.TitleSystem</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.UnregisteredLand</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.UnregisteredPlan</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Volume</li:path>
          <li:path>Package.Content.Application.RelatedCompany.BusinessNameSameAsCompanyName</li:path>
          <li:path>Package.Content.Application.RelatedCompany.BusinessStructure</li:path>
          <li:path>Package.Content.Application.RelatedCompany.CompanyNumber</li:path>
          <li:path>Package.Content.Application.RelatedCompany.DateRegistered</li:path>
          <li:path>Package.Content.Application.RelatedCompany.GSTRegisteredDate</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NumberOfDirectors</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NumberOfPartners</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NumberOfShareholders</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NZBNVerified</li:path>
          <li:path>Package.Content.Application.RelatedCompany.RegisteredForGST</li:path>
          <li:path>Package.Content.Application.RelatedCompany.RegisteredInCountry</li:path>
          <li:path>Package.Content.Application.RelatedCompany.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RelatedCompany.BeneficialOwner</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Director</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Partner</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Shareholder</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.WebAddress</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.x_RegisteredAddress</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.ContactPerson</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.OfficeFax</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.OfficeMobile</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.TradingAddress</li:path>
          <li:path>Package.Content.Application.RelatedPerson.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.EmailType</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.PreferredContact</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.x_Address</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.x_MailingAddress</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.WorkPhone</li:path>
          <li:path>Package.Content.Application.Summary.FeesDisclosureDate</li:path>
          <li:path>Package.Content.Application.Summary.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.Summary.LoanToValuationRatio</li:path>
          <li:path>Package.Content.Application.Summary.RolledUpAmounts</li:path>
          <li:path>Package.Content.Application.Summary.ServiceabilityResults</li:path>
          <li:path>Package.Content.Application.Summary.Fee.CapitaliseFee</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Category</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Description</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Frequency</li:path>
          <li:path>Package.Content.Application.Summary.Fee.IsEstimated</li:path>
          <li:path>Package.Content.Application.Summary.Fee.NumberOfRepeats</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Paid</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PayableTo</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PayFeesFrom</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PaymentTiming</li:path>
          <li:path>Package.Content.Application.Summary.Fee.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Summary.Fee.StartDate</li:path>
          <li:path>Package.Content.Application.Summary.Fee.UniqueID</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_Account</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_FinancialProduct</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_ProductSet</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_Security</li:path>
          <li:path>Package.Content.Application.Summary.Fee.AccountNumber</li:path>
          <li:path>Package.Content.Application.Summary.Fee.ApplicableDuration</li:path>
          <li:path>Package.Content.Application.Summary.Fee.CreditCard</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PayableToAccount</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Percentage</li:path>
          <li:path>Package.Content.Application.TrustApplicant.ApplicantType</li:path>
          <li:path>Package.Content.Application.TrustApplicant.BusinessName</li:path>
          <li:path>Package.Content.Application.TrustApplicant.BusinessNameSameAsTrustName</li:path>
          <li:path>Package.Content.Application.TrustApplicant.CountryEstablished</li:path>
          <li:path>Package.Content.Application.TrustApplicant.DocumentationType</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Established</li:path>
          <li:path>Package.Content.Application.TrustApplicant.EstablishmentDate</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IRDNumber</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IsExistingCustomer</li:path>
          <li:path>Package.Content.Application.TrustApplicant.NumberOfBeneficiaries</li:path>
          <li:path>Package.Content.Application.TrustApplicant.NumberOfTrustees</li:path>
          <li:path>Package.Content.Application.TrustApplicant.SequenceNumber</li:path>
          <li:path>Package.Content.Application.TrustApplicant.SettlorName</li:path>
          <li:path>Package.Content.Application.TrustApplicant.TrustPurpose</li:path>
          <li:path>Package.Content.Application.TrustApplicant.TrustStructure</li:path>
          <li:path>Package.Content.Application.TrustApplicant.VestingDate</li:path>
          <li:path>Package.Content.Application.TrustApplicant.x_Accountant</li:path>
          <li:path>Package.Content.Application.TrustApplicant.BeneficialOwner</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Beneficiary</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Business</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Contact</li:path>
          <li:path>Package.Content.Application.TrustApplicant.DealingNumber</li:path>
          <li:path>Package.Content.Application.TrustApplicant.DeclaredIncome</li:path>
          <li:path>Package.Content.Application.TrustApplicant.ExistingCustomer</li:path>
          <li:path>Package.Content.Application.TrustApplicant.FinancialAnalysis</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Income</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomePrevious</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomePrior</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomeRecent</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomeYearToDate</li:path>
          <li:path>Package.Content.Application.TrustApplicant.TrustDeedVariation</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Trustee</li:path>
          <li:path>Package.Instructions.ErrorInstructions</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Update</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Submit.IsSubmissionDocuments</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Submit.IsSupportingDocuments</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Submit.Condition</li:path>
          <li:path>Package.Publisher.CompanyName</li:path>
          <li:path>Package.Publisher.ContactName</li:path>
          <li:path>Package.Publisher.Email</li:path>
          <li:path>Package.Publisher.PhoneNumber</li:path>
          <li:path>Package.Publisher.RelatedSoftware</li:path>
          <li:path>Package.Publisher.Software.Description</li:path>
          <li:path>Package.Publisher.Software.Environment</li:path>
          <li:path>Package.Publisher.Software.TechnicalEmail</li:path>
          <li:path>Package.Publisher.Software.Version</li:path>
          <li:path>Package.Recipient.Description</li:path>
          <li:path>Package.Recipient.RoutingCode</li:path>
          <li:path>Package.Recipient.SequenceNumber</li:path>
          <li:path>Package.Recipient.Software</li:path>
          <li:path>Package.SchemaVersion.GuidebookCode</li:path>
          <li:path>Package.SchemaVersion.GuidebookName</li:path>
          <li:path>Package.SchemaVersion.GuidebookVersion</li:path>
          <li:path>personNameType.KnownAs</li:path>
          <li:path>personNameType.OtherNameTitle</li:path>
          <li:path>phoneType.CountryCode</li:path>
          <li:path>phoneType.OverseasDialingCode</li:path>
          <li:path>dealingNumberType</li:path>
          <li:path>documentationInstructionsType</li:path>
          <li:path>fundsDisbursementType</li:path>
          <li:path>responsibleLendingType</li:path>
          <li:path>securityAgreementType</li:path>
          <li:path>vendorTaxInvoiceType</li:path>
          <li:path>absOccupationCodeList</li:path>
          <li:path>agriculturalAssetTypeList</li:path>
          <li:path>aircraftTypeList</li:path>
          <li:path>annotationTypeList</li:path>
          <li:path>anzscoOccupationCodeList</li:path>
          <li:path>anzsicIndustryCodeList</li:path>
          <li:path>applicationDocTypeList</li:path>
          <li:path>applicationTypeList</li:path>
          <li:path>attachmentTypeList</li:path>
          <li:path>auStateList</li:path>
          <li:path>balloonRVInputPatternList</li:path>
          <li:path>basisForAmountRequestedList</li:path>
          <li:path>benefitEnquiriesList</li:path>
          <li:path>builderTypeList</li:path>
          <li:path>businessChannelTypeList</li:path>
          <li:path>businessStructureExcludingTrustList</li:path>
          <li:path>businessStructureFullList</li:path>
          <li:path>calculationBasisList</li:path>
          <li:path>cleaningEquipmentTypeList</li:path>
          <li:path>coApplicantBenefitList</li:path>
          <li:path>collateralTypeList</li:path>
          <li:path>commercialTypeList</li:path>
          <li:path>commissionBeneficiaryList</li:path>
          <li:path>commissionStructureList</li:path>
          <li:path>conditionList</li:path>
          <li:path>conditionOwnerApplicationInstructionsList</li:path>
          <li:path>conditionResponseStatusList</li:path>
          <li:path>conditionStatusApplicationInstructionsList</li:path>
          <li:path>constructionTypeList</li:path>
          <li:path>creditCardTypeList</li:path>
          <li:path>creditHistoryIssueList</li:path>
          <li:path>creditReportingBodyList</li:path>
          <li:path>creditStatusList</li:path>
          <li:path>currencyCodeList</li:path>
          <li:path>dataSourceList</li:path>
          <li:path>dayOfWeekList</li:path>
          <li:path>declinedReasonApplicationInstructionsList</li:path>
          <li:path>depositAccountTypeList</li:path>
          <li:path>depositInsuranceTypeList</li:path>
          <li:path>depositInterestPaymentTypeList</li:path>
          <li:path>depositMaturityInstructionTypeList</li:path>
          <li:path>documentCategoryList</li:path>
          <li:path>earthMovingMiningAndConstructionSubtypeList</li:path>
          <li:path>earthMovingMiningAndConstructionTypeList</li:path>
          <li:path>employerTypeList</li:path>
          <li:path>employmentStatusList</li:path>
          <li:path>errorInstructionsTypeList</li:path>
          <li:path>errorSourceList</li:path>
          <li:path>estimateMethodologyList</li:path>
          <li:path>eventNameApplicationInstructionsList</li:path>
          <li:path>excessUsageCalculationMethodList</li:path>
          <li:path>exemptStatusList</li:path>
          <li:path>feeCategoryList</li:path>
          <li:path>feePaymentTimingList</li:path>
          <li:path>financialTransactionTypeList</li:path>
          <li:path>funderList</li:path>
          <li:path>fundsAccessTypeList</li:path>
          <li:path>genderList</li:path>
          <li:path>goodToBeUsedLocationList</li:path>
          <li:path>governmentBenefitsTypeList</li:path>
          <li:path>guarantorAccessList</li:path>
          <li:path>holdingList</li:path>
          <li:path>hospitalityAndLeisureTypeList</li:path>
          <li:path>housingStatusList</li:path>
          <li:path>importanceList</li:path>
          <li:path>incomeVerificationList</li:path>
          <li:path>industrialTypeList</li:path>
          <li:path>instalmentsFrequencyList</li:path>
          <li:path>insuranceTypeList</li:path>
          <li:path>insurerList</li:path>
          <li:path>interestOnlyReasonList</li:path>
          <li:path>interestRateTypeList</li:path>
          <li:path>itAndAVEquipmentTypeList</li:path>
          <li:path>kinRelationshipList</li:path>
          <li:path>landAreaUnitsList</li:path>
          <li:path>landValueEstimateBasisList</li:path>
          <li:path>lendingGuaranteeTypeList</li:path>
          <li:path>levelOfGovernmentList</li:path>
          <li:path>licenceAssetTypeList</li:path>
          <li:path>loanPaymentScheduleTypeList</li:path>
          <li:path>loanTypeList</li:path>
          <li:path>masterAgreementStatusList</li:path>
          <li:path>masterAgreementTypeList</li:path>
          <li:path>materialsHandlingAndLiftingSubtypeList</li:path>
          <li:path>materialsHandlingAndLiftingTypeList</li:path>
          <li:path>medicalEquipmentTypeList</li:path>
          <li:path>methodOfOperationList</li:path>
          <li:path>mmMonthList</li:path>
          <li:path>mobileComputingTypeList</li:path>
          <li:path>nccpStatusList</li:path>
          <li:path>nrasConsortiumList</li:path>
          <li:path>occupancyList</li:path>
          <li:path>officeEquipmentTypeList</li:path>
          <li:path>otherAssetTypeList</li:path>
          <li:path>otherExpenseCategoryList</li:path>
          <li:path>otherExpenseTypeList</li:path>
          <li:path>otherIncomeTypeList</li:path>
          <li:path>partnerTypeList</li:path>
          <li:path>payFeesFromList</li:path>
          <li:path>paymentTimingList</li:path>
          <li:path>plantEquipmentAndIndustrialTypeList</li:path>
          <li:path>poolTypeList</li:path>
          <li:path>powerOfAttorneyTypeList</li:path>
          <li:path>preConditionToStageApplicationInstructionsList</li:path>
          <li:path>preferredContactCompanyList</li:path>
          <li:path>preferredContactPersonList</li:path>
          <li:path>primaryUsageList</li:path>
          <li:path>principalRefinancingReasonList</li:path>
          <li:path>proofCodeCompanyList</li:path>
          <li:path>proofCodeNotEmployedList</li:path>
          <li:path>proofCodeOtherList</li:path>
          <li:path>proofCodePAYEList</li:path>
          <li:path>proofCodeSelfEmployedList</li:path>
          <li:path>proofCodeTrustList</li:path>
          <li:path>propertyExpenseCategoryList</li:path>
          <li:path>propertySearchValidationResultList</li:path>
          <li:path>proposedRepaymentMethodList</li:path>
          <li:path>purposeOfApplicationList</li:path>
          <li:path>purposeOfFundsList</li:path>
          <li:path>releaseSecurityReasonList</li:path>
          <li:path>residentialTypeList</li:path>
          <li:path>ruralTypeList</li:path>
          <li:path>ruralUsageList</li:path>
          <li:path>salesChannelTypeList</li:path>
          <li:path>securityPriorityList</li:path>
          <li:path>selfEmployedBasisList</li:path>
          <li:path>sendDocumentsToPersonList</li:path>
          <li:path>statementCycleList</li:path>
          <li:path>statusNameApplicationInstructionsList</li:path>
          <li:path>streetSuffixList</li:path>
          <li:path>supplierTypeList</li:path>
          <li:path>taxDepreciationMethodList</li:path>
          <li:path>tenureTypeList</li:path>
          <li:path>titleSystemList</li:path>
          <li:path>toolsOfTradeTypeList</li:path>
          <li:path>trustPurposeList</li:path>
          <li:path>trustStructureList</li:path>
          <li:path>typeOfIncorporationList</li:path>
          <li:path>usageUnitOfMeasurementList</li:path>
          <li:path>valuationProgramList</li:path>
          <li:path>variationTypeList</li:path>
          <li:path>varyOnValuationList</li:path>
          <li:path>vehicleSubtypeList</li:path>
          <li:path>vehicleTypeList</li:path>
          <li:path>visitContactTypeList</li:path>
          <li:path>weekList</li:path>
          <li:path>yesNoIntentList</li:path>
          <li:path>yyYearList</li:path>
          <li:path>dayOfMonthPattern</li:path>
          <li:path>gicsCodePattern</li:path>
          <li:path>irdNumberPattern</li:path>
          <li:path>mediaTypePattern</li:path>
          <li:path>nzbicPattern</li:path>
          <li:path>urlPattern</li:path>
          <li:path>base64BinaryType</li:path>
          <li:path>decimalType</li:path>
        </li:Exclude>
        <li:OptionalToMandatory/>
        <li:StringToList/>
        <li:StringToPattern/>
        <li:CustomMaxOccurs/>
        <li:CustomMinOccurs/>
        <li:CustomCurrencyRange/>
        <li:CustomDateTimeRange/>
        <li:CustomDateRange/>
        <li:CustomDecimalRange/>
        <li:CustomYearRange/>
        <li:CustomIntegerRange/>
        <li:CustomPercentageRange/>
      </li:schemacustomisation>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Package">
    <xs:annotation>
      <xs:documentation>The root element that contains a message for exchange between two end-points involved in the workflow related to the processing of an application for a new financial product or change management of an existing financial product. The message contains instructions to the recipient requesting some workflow activity along with data related to: the applicant and the financial product involved; the publisher; one or more recipients; schema version information; and any related attachments.</xs:documentation>
      <xs:appinfo>
        <lx:path>Package</lx:path>
        <lx:label>Package</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Content" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>The content of the message.</xs:documentation>
            <xs:appinfo>
              <lx:path>Package.Content</lx:path>
              <lx:label>Content</lx:label>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Application" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation>The set of borrower- and broker-provided data for a single loan application.</xs:documentation>
                  <xs:appinfo>
                    <lx:path>Package.Content.Application</lx:path>
                    <lx:label>Application</lx:label>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Address" type="addressType" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Any real or postal address, used by reference</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.Address</lx:path>
                          <lx:label>Address</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="CompanyApplicant" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Contains applicant details for business enterprises (including company, sole trader, partnership or government department) being either a borrower or a guarantor, and may be acting for a Trust.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.CompanyApplicant</lx:path>
                          <lx:label>Company Applicant</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="CompanyName" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The legal name of the company should be captured.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.CompanyApplicant.CompanyName</lx:path>
                              <lx:label>Company Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="NZBN" type="nzbnPattern" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the NZBN of the company applicant</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.CompanyApplicant.NZBN</lx:path>
                              <lx:label>NZBN</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.CompanyApplicant.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ContributionFunds" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Details the amounts and sources of funds that will be contributed by the applicant to complete the contemplated transaction, generally a property purchase but may also be a refinance or other purchase. There may be 0 or more contributions.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.ContributionFunds</lx:path>
                          <lx:label>Contribution Funds</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:attribute name="Amount" type="currencyType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The amount of the particular contribution.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.ContributionFunds.Amount</lx:path>
                              <lx:label>Amount</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Type" type="contributionFundsTypeList" use="optional">
                          <xs:annotation>
                            <xs:documentation>The type of the particular contribution.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.ContributionFunds.Type</lx:path>
                              <lx:label>Type</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Funder" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Captures information about the organisation that provides funding.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.Funder</lx:path>
                          <lx:label>Funder</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="CompanyName" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The company name of the funder.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Funder.CompanyName</lx:path>
                              <lx:label>Company Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Funder.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Household" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>A household to which one or more person applicants belong, used in relation to the calculation of household living expenses</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.Household</lx:path>
                          <lx:label>Household</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Dependant" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>A person who depends on the applicant(s) for financial or other support</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Household.Dependant</lx:path>
                                <lx:label>Dependant</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="Age" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The age of the dependant at the time of submitting the application</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Household.Dependant.Age</lx:path>
                                    <lx:label>Age</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="DateOfBirth" type="dateType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The dependant's date of birth</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Household.Dependant.DateOfBirth</lx:path>
                                    <lx:label>Date Of Birth</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Name" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The name of the dependant.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Household.Dependant.Name</lx:path>
                                    <lx:label>Dependant Name</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The order of this dependant within the sequence.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Household.Dependant.SequenceNumber</lx:path>
                                    <lx:label>Sequence Number</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ExpenseDetails" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>The set of expenses declared for the household, including Living Expenses and Other Commitments.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Household.ExpenseDetails</lx:path>
                                <lx:label>Living Expenses</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="LivingExpense" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>Contains the details of a single line item that forms part of the household's declared living expenses.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense</lx:path>
                                      <lx:label>Living Expense</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence/>
                                    <xs:attribute name="Amount" type="currencyType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The dollar amount of this particular living expense for the household as declared by the applicant.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.Amount</lx:path>
                                          <lx:label>Amount</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Category" type="livingExpenseCategoryList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The category that this declared living expense falls under.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.Category</lx:path>
                                          <lx:label>Living Expense Category</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Frequency" type="frequencyFullList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The frequency that corresponds to the declared amount for this particular Living Expense.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.Frequency</lx:path>
                                          <lx:label>Frequency</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="OtherCommitment" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>Contains the details of a single line item that forms part of the household's commitments other than living expenses.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment</lx:path>
                                      <lx:label>Other Commitment Line Item</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence/>
                                    <xs:attribute name="Amount" type="currencyType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The dollar amount of this particular commitment for the household as declared by the applicant.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.Amount</lx:path>
                                          <lx:label>Amount</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Category" type="otherCommitmentCategoryList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The category that this declared other commitment falls under.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.Category</lx:path>
                                          <lx:label>Category</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Frequency" type="frequencyFullList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The frequency that corresponds to the declared amount for this particular commitment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.Frequency</lx:path>
                                          <lx:label>Frequency</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Name" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>A descriptive name for the household</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Household.Name</lx:path>
                              <lx:label>Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="NumberOfAdults" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The number of adults in the household</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Household.NumberOfAdults</lx:path>
                              <lx:label>Number Of Adults</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="NumberOfDependants" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The number of dependants in this applicant household.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Household.NumberOfDependants</lx:path>
                              <lx:label>Number Of Dependants</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The order of this household within the sequence.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Household.SequenceNumber</lx:path>
                              <lx:label>Sequence Number</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Liability" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>A liability item is a debt owed to a creditor or lender - such as a loan, line of credit, or tax bill.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.Liability</lx:path>
                          <lx:label>Liability</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccountNumber" type="financialAccountType" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Account details of the liability</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Liability.AccountNumber</lx:path>
                                <lx:label>Account Number</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="OriginalTerm" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Details of the original term of the credit product and any introductory terms, such as an interest only term or a fixed rate term that applies for an initial period at the start of the product.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Liability.OriginalTerm</lx:path>
                                <lx:label>Original Term</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="DistinctLoanPeriod" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>A distinct loan period, where each period may have a different payment type, interest type, rate composition.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod</lx:path>
                                      <lx:label>Distinct Loan Period</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>The duration of the distinct loan period.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                      <xs:element name="Repayment" minOccurs="0" maxOccurs="unbounded">
                                        <xs:annotation>
                                          <xs:documentation>A repayment that is made during this period.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment</lx:path>
                                            <lx:label>Repayment</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The order of this repayment within the sequence.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment.SequenceNumber</lx:path>
                                                <lx:label>Sequence Number</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="x_ContinuingRepayment" type="referenceType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>A cross reference to the continuing repayment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment.x_ContinuingRepayment</lx:path>
                                                <lx:label>Continuing Repayment</lx:label>
                                                <lx:references>
                                                  <lx:target>Package.Content.Application.Liability.ContinuingRepayment</lx:target>
                                                </lx:references>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="x_Repayment" type="referenceType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>A cross reference to the repayment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment.x_Repayment</lx:path>
                                                <lx:label>Repayment</lx:label>
                                                <lx:references>
                                                  <lx:target>Package.Content.Application.Liability.Repayment</lx:target>
                                                </lx:references>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="EndDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The end date of the distinct loan period.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.EndDate</lx:path>
                                          <lx:label>End Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="InterestType" type="interestTypeList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The type of interest that is to be paid during the distinct loan period.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.InterestType</lx:path>
                                          <lx:label>Interest Type</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="PaymentType" type="paymentTypeList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The type of repayment that is to be made during the distinct loan period.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.PaymentType</lx:path>
                                          <lx:label>Payment Type</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The order of this distinct loan period within the sequence.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.SequenceNumber</lx:path>
                                          <lx:label>Sequence Number</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="StartDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The start date of the distinct loan period.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.StartDate</lx:path>
                                          <lx:label>Start Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>System assigned unique identifier.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.UniqueID</lx:path>
                                          <lx:label>Unique ID</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="x_RateComposition" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>A cross reference to the rate composition for this distinct loan period.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.x_RateComposition</lx:path>
                                          <lx:label>Rate Composition</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.Liability.RateComposition</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="InterestOnlyEndDate" type="dateType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The date when the applicant will stop/stopped making Interest Only repayments on this liability.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.InterestOnlyEndDate</lx:path>
                                    <lx:label>Interest Only End Date</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="InterestType" type="interestTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the original type of interest of the liability.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.InterestType</lx:path>
                                    <lx:label>Interest Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="InterestTypeDuration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The original duration of the fixed interest rate period, as a whole number multiple of the Units.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.InterestTypeDuration</lx:path>
                                    <lx:label>Interest Type Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="InterestTypeUnits" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The units of time that are used to define the duration of the fixed interest rate period.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.InterestTypeUnits</lx:path>
                                    <lx:label>Interest Type Units</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PaymentType" type="paymentTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the original type of repayment of the liability.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.PaymentType</lx:path>
                                    <lx:label>Payment Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PaymentTypeDuration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The original duration of the interest only period, as a whole number multiple of the Units.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.PaymentTypeDuration</lx:path>
                                    <lx:label>Payment Type Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PaymentTypeUnits" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The units of time that are used to define the duration of the interest only period.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.PaymentTypeUnits</lx:path>
                                    <lx:label>Payment Type Units</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="TotalTermDuration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the original duration of the total term, as a multiple of the units.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.TotalTermDuration</lx:path>
                                    <lx:label>Total Term Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="TotalTermUnits" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The units of time that are used to define the duration of the total term.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.OriginalTerm.TotalTermUnits</lx:path>
                                    <lx:label>Total Term Units</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PercentOwned" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Identifies the party/s that are responsible for the liability and the amount they are responsible for, either as a borrower or guarantor.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Liability.PercentOwned</lx:path>
                                <lx:label>Percent Owned</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Owner" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>The details of the ownership of this liability, either as borrower or guarantor.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.Liability.PercentOwned.Owner</lx:path>
                                      <lx:label>Owner</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:attribute name="Percent" type="percentType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Captures the percentage of the liability that the linked party is responsible for.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.PercentOwned.Owner.Percent</lx:path>
                                          <lx:label>Percent</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The order of this owner within the sequence.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.PercentOwned.Owner.SequenceNumber</lx:path>
                                          <lx:label>Sequence Number</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="x_Party" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>A reference to a party that is an responsible for the liability.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.Liability.PercentOwned.Owner.x_Party</lx:path>
                                          <lx:label>Party</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.CompanyApplicant</lx:target>
                                            <lx:target>Package.Content.Application.PersonApplicant</lx:target>
                                            <lx:target>Package.Content.Application.RelatedCompany</lx:target>
                                            <lx:target>Package.Content.Application.TrustApplicant</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Proportions" type="proportionsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Flag to indicate whether the ownership proportions are equal across all owners, specified individually for each one, or not specified.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.PercentOwned.Proportions</lx:path>
                                    <lx:label>Proportions</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RemainingTerm" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Container element for capturing the remaining term of liabilities not being refinanced.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Liability.RemainingTerm</lx:path>
                                <lx:label>Remaining Term</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="Duration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The duration of the remaining term.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.RemainingTerm.Duration</lx:path>
                                    <lx:label>Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Units" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The units used to define the duration of the remaining term.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.RemainingTerm.Units</lx:path>
                                    <lx:label>Units of Remaining Term Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Repayment" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Details of the repayment expense associated with this loan</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Liability.Repayment</lx:path>
                                <lx:label>Repayment</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="RepaymentAmount" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The repayment expense amount associated with repaying this loan</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.Repayment.RepaymentAmount</lx:path>
                                    <lx:label>Repayment Amount</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="RepaymentFrequency" type="repaymentFrequencyList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The payment frequency of the repayment associated with this loan</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.Repayment.RepaymentFrequency</lx:path>
                                    <lx:label>Repayment Frequency</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Security" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Details to identify the security property for the loan</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Liability.Security</lx:path>
                                <lx:label>Security</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The order of this security within the sequence.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.Security.SequenceNumber</lx:path>
                                    <lx:label>Sequence Number</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>System assigned unique identifier.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.Security.UniqueID</lx:path>
                                    <lx:label>Unique ID</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="x_Security" type="referenceType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Contains a reference link to the security (real estate or non real estate asset)</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Liability.Security.x_Security</lx:path>
                                    <lx:label>Security</lx:label>
                                    <lx:references>
                                      <lx:target>Package.Content.Application.NonRealEstateAsset</lx:target>
                                      <lx:target>Package.Content.Application.RealEstateAsset</lx:target>
                                    </lx:references>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AnnualInterestRate" type="percentType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the annual interest rate that applies to the liability</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.AnnualInterestRate</lx:path>
                              <lx:label>Annual Interest Rate</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ClearingFromOtherSource" type="clearingFromOtherSourceList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates whether the existing liability will be cleared, in whole or in part, using funds from a third party institution.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.ClearingFromOtherSource</lx:path>
                              <lx:label>Clearing From Other Source</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ClearingFromThisLoan" type="clearingFromThisLoanList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates whether the existing loan will be cleared, in whole or in part, using funds from the loan being applied for.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.ClearingFromThisLoan</lx:path>
                              <lx:label>Clearing From This Loan</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="OriginalAmount" type="currencyType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the original loan amount, being the credit limit for a line of credit, or the fully drawn principal amount for an amortising loan.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.OriginalAmount</lx:path>
                              <lx:label>Original Amount</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="OutstandingBalance" type="currencyType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the outstanding, current or unpaid balance of the liability.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.OutstandingBalance</lx:path>
                              <lx:label>Outstanding Balance</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The order of this liability within the sequence.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.SequenceNumber</lx:path>
                              <lx:label>Sequence Number</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Type" type="liabilityTypeList" use="optional">
                          <xs:annotation>
                            <xs:documentation>The type of liability. Types include credit card limits, HECS debt, existing loans, etc.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.Type</lx:path>
                              <lx:label>Type</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.Liability.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="LoanDetails" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Information about an individual credit facility that is being applied for including but not limited to: term loans; revolving credit facilities; overdrafts; credit cards; equipment finance; commercial bills; margin loans; personal loans; and reverse mortgages.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.LoanDetails</lx:path>
                          <lx:label>Loan Details</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccountNumber" type="financialAccountType" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Account details of this loan account.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.LoanDetails.AccountNumber</lx:path>
                                <lx:label>Account Number</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="LendingPurpose" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Details of the purpose for which the applicant intends to use the loan funds.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.LoanDetails.LendingPurpose</lx:path>
                                <lx:label>Lending Purpose</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="ABSLendingPurposeCode" type="absLendingPurposeCodeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the ABS code for this purpose for which the loan funds will be used by the applicant.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.LendingPurpose.ABSLendingPurposeCode</lx:path>
                                    <lx:label>ABS Lending Purpose Code</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PurposeAmount" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The amount of the loan funds that will be used for the specified purpose.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.LendingPurpose.PurposeAmount</lx:path>
                                    <lx:label>Purpose Amount</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The order of this lending purpose within the sequence.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.LendingPurpose.SequenceNumber</lx:path>
                                    <lx:label>Sequence Number</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="LoanPurpose" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Contains information about the main purpose for which the applicant intends to use the loan funds.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.LoanDetails.LoanPurpose</lx:path>
                                <lx:label>Loan Purpose</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="PrimaryPurpose" type="primaryPurposeLoanPurposeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the primary purpose for which the loan funds will be used by the applicant. Categories reflect the categories used in classifying a loan as regulated or unregulated under the NCCP.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.LoanPurpose.PrimaryPurpose</lx:path>
                                    <lx:label>Primary Purpose</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Security" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Contains a reference to a security property that is submitted with the loan application, and information about the relationship between the subject loan account and that security property.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.LoanDetails.Security</lx:path>
                                <lx:label>Security</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="x_Security" type="referenceType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Contains a reference to a security (real estate or non real estate asset) that is submitted with the loan application, and information about the relationship between the subject loan account and that security.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Security.x_Security</lx:path>
                                    <lx:label>Security</lx:label>
                                    <lx:references>
                                      <lx:target>Package.Content.Application.NonRealEstateAsset</lx:target>
                                      <lx:target>Package.Content.Application.RealEstateAsset</lx:target>
                                    </lx:references>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Term" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Details of the total term of the credit product and any introductory terms, such as an interest only term (including interest only reasons) or a fixed rate term that applies for an initial period at the start of the product.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.LoanDetails.Term</lx:path>
                                <lx:label>Term</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="InterestType" type="interestTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the type of interest that is to be paid during the specified term.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.InterestType</lx:path>
                                    <lx:label>Interest Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="InterestTypeDuration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The duration of the fixed interest rate period, as a whole number multiple of the Units.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.InterestTypeDuration</lx:path>
                                    <lx:label>Interest Type Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="InterestTypeUnits" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The units of time that are used to define the duration of the fixed interest rate period.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.InterestTypeUnits</lx:path>
                                    <lx:label>Interest Type Units</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PaymentType" type="paymentTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the type of repayment that is to be made during the specified term</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.PaymentType</lx:path>
                                    <lx:label>Payment Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PaymentTypeDuration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The duration of the interest only period, as a whole number multiple of the Units.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.PaymentTypeDuration</lx:path>
                                    <lx:label>Payment Type Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="PaymentTypeUnits" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The units of time that are used to define the duration of the interest only period.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.PaymentTypeUnits</lx:path>
                                    <lx:label>Payment Type Units</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="TotalTermDuration" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The Duration of the specified loan term, as a multiple of the Units</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.TotalTermDuration</lx:path>
                                    <lx:label>Total Term Duration</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="TotalTermType" type="totalTermTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The type of loan term should indicate that the loan term is either the total length of the term or the amortised term as required by the lender.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.TotalTermType</lx:path>
                                    <lx:label>Total Term Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="TotalTermUnits" type="loanTermUnitsList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the period described by the number specified for term.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.LoanDetails.Term.TotalTermUnits</lx:path>
                                    <lx:label>Total Term Units</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AmountRequested" type="currencyType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the loan amount as requested by the applicant for this loan account, exclusive of to-be-capitalised fees and/or LMI.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.LoanDetails.AmountRequested</lx:path>
                              <lx:label>Amount Requested</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="EstimatedSettlementDate" type="dateType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the date that the applicant estimates that the application will settle.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.LoanDetails.EstimatedSettlementDate</lx:path>
                              <lx:label>Estimated Settlement Date</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ProductCode" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures an identifying code for the loan product applied for. This code is typically issued by the lender and enables the lender's systems to uniquely identify the product.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.LoanDetails.ProductCode</lx:path>
                              <lx:label>Product Code</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ProductName" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the name of the loan product applied for.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.LoanDetails.ProductName</lx:path>
                              <lx:label>Product Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.LoanDetails.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="NonRealEstateAsset" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Contains details about an asset item that is not real estate, such as a term deposit account.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.NonRealEstateAsset</lx:path>
                          <lx:label>Non Real Estate Asset</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="EstimatedValue" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>The estimated value of the asset</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue</lx:path>
                                <lx:label>Estimated Value</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="EstimateBasis" type="estimateBasisNonRealEstateAssetList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Indicates whether the estimate was based on the valuation of the applicant or a certified valuer.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.EstimateBasis</lx:path>
                                    <lx:label>Estimate Basis</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Value" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The estimated current market value of the non real estate asset.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.Value</lx:path>
                                    <lx:label>Value</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FinancialAsset" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Captures the details of a financial account asset or security - e.g. Cash, cash equivalents, and accounts at financial institutions</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset</lx:path>
                                <lx:label>Financial Asset</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AccountNumber" type="financialAccountType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Account details for the financial account asset</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.AccountNumber</lx:path>
                                      <lx:label>Account Number</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="Shares" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Container element for financial assets that are shares</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares</lx:path>
                                      <lx:label>Shares</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:attribute name="HolderIdentificationNumber" type="stringType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Holder Identification Number (HIN) uniquely identifies an individual as the holder of shares on the CHESS subregister.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.HolderIdentificationNumber</lx:path>
                                          <lx:label>Holder Identification Number</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="IssuingCompany" type="stringType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The company which has issued the shares.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.IssuingCompany</lx:path>
                                          <lx:label>Issuing Company</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="QuantityOfShares" type="integerType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Number of shares owned by the individual.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.QuantityOfShares</lx:path>
                                          <lx:label>Quantity Of Shares</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Type" type="shareTypeList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>When the Financial Asset Type = "Shares and Debentures", indicates the type of shares.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.Type</lx:path>
                                          <lx:label>Type</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Type" type="financialAssetTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The type of financial asset</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Type</lx:path>
                                    <lx:label>Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MotorVehicle" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Contains information about an asset that is a motor vehicle.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle</lx:path>
                                <lx:label>Motor Vehicle</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="Make" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the make of the vehicle, such as Holden</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Make</lx:path>
                                    <lx:label>Make</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Model" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the model of the vehicle</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Model</lx:path>
                                    <lx:label>Model</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="RegistrationNumber" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Registration identifier for the asset e.g. license plate number.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.RegistrationNumber</lx:path>
                                    <lx:label>Registration Number</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Year" type="gYearType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the year in which the vehicle was first registered or the model year.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Year</lx:path>
                                    <lx:label>Year</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PercentOwned" type="percentOwnedType" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>An asset may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An asset may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the asset may be assigned. If the asset is to be purchased, then this indicates the expected ownership arrangement post-settlement</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.NonRealEstateAsset.PercentOwned</lx:path>
                                <lx:label>Percent Owned</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The order of this non-real estate asset within the sequence.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.NonRealEstateAsset.SequenceNumber</lx:path>
                              <lx:label>Sequence Number</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Type" type="nonRealEstateAssetTypeList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates what the type of non real estate asset being described.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.NonRealEstateAsset.Type</lx:path>
                              <lx:label>Type</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Unique identification assigned to the Asset</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.NonRealEstateAsset.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PersonApplicant" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Contains applicant details where the applicant is a person, being either a borrower or a guarantor, and may be acting for a Trust.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.PersonApplicant</lx:path>
                          <lx:label>Person Applicant</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Contact" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Container element for the applicant contact details</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.PersonApplicant.Contact</lx:path>
                                <lx:label>Contact</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CurrentAddress" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>The current address details for the applicant</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress</lx:path>
                                      <lx:label>Current Address</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Container element for capturing the duration at the current address.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="x_MailingAddress" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Reference to the applicant's current address for mailing documents</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.x_MailingAddress</lx:path>
                                          <lx:label>Mailing Address</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.Address</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="x_ResidentialAddress" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Reference to the applicant's current residential address</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.x_ResidentialAddress</lx:path>
                                          <lx:label>Residential Address</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.Address</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="EmailAddress" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>Email address of the applicant.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress</lx:path>
                                      <lx:label>Email Address</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:attribute name="Email" type="emailPattern" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>An email address for the person</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress.Email</lx:path>
                                          <lx:label>Email</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="EmailType" type="contactEmailTypeList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Specify whether the applicant email address is personal or from work</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress.EmailType</lx:path>
                                          <lx:label>Email Type</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="HomePhone" type="phoneType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Home phone captures the phone number used predominantly while this person is at home.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Contact.HomePhone</lx:path>
                                      <lx:label>Home Phone</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="Mobile" type="phoneType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Applicant mobile number.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Contact.Mobile</lx:path>
                                      <lx:label>Mobile</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="PreviousAddress" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Container element for an address previous to the current address</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress</lx:path>
                                      <lx:label>Previous Address</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Container element for capturing the duration at the previous address.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="x_ResidentialAddress" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Reference to the applicant's previous residential address</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.x_ResidentialAddress</lx:path>
                                          <lx:label>Residential Address</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.Address</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="WorkPhone" type="phoneType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Where an applicant has a work number.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Contact.WorkPhone</lx:path>
                                      <lx:label>Work Phone</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Employment" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Contains information about the persons current or previous employment.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.PersonApplicant.Employment</lx:path>
                                <lx:label>Employment</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ForeignEmployed" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Indicates that the employment is foreign employment.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed</lx:path>
                                      <lx:label>Foreign Employed</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Container element for capturing the duration of employment.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Basis" type="foreignEmployedBasisList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicant should indicate whether the employment type is fulltime, part-time, contract, temporary, casual, commission only or seasonal.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Basis</lx:path>
                                          <lx:label>Basis</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="EndDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The end date indicates when the applicant finalised their employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.EndDate</lx:path>
                                          <lx:label>End Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Occupation" type="stringType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Text description of the person's role or occupation for this employment</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Occupation</lx:path>
                                          <lx:label>Occupation</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="StartDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The start date indicates when the applicant commenced their employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.StartDate</lx:path>
                                          <lx:label>Start Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>System assigned unique identifier</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.UniqueID</lx:path>
                                          <lx:label>Unique ID</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="x_Employer" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The employer details for this instance of ForeignEmployed employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.x_Employer</lx:path>
                                          <lx:label>Employer</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.CompanyApplicant</lx:target>
                                            <lx:target>Package.Content.Application.PersonApplicant</lx:target>
                                            <lx:target>Package.Content.Application.RelatedCompany</lx:target>
                                            <lx:target>Package.Content.Application.RelatedPerson</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NotEmployed" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Where the applicant is unemployed, the details should be submitted, if relevant to this instance of employment.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed</lx:path>
                                      <lx:label>Not Employed</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Container element for capturing the duration of employment.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                      <xs:element name="Income" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Income details for this period without employment.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income</lx:path>
                                            <lx:label>Income</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:attribute name="GovernmentBenefitsAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the government benefits income gross amount received by the applicant, excluding Jobseeker Support (New Zealand) and Newstart Allowance (Australia) which are captured separately.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.GovernmentBenefitsAmount</lx:path>
                                                <lx:label>Gross Government Benefits Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="GovernmentBenefitsFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the frequency at which the applicant is receiving government benefits income gross amount.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.GovernmentBenefitsFrequency</lx:path>
                                                <lx:label>Gross Government Benefits Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="OtherIncomeAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures a gross income amount received by the applicant, that is not captured elsewhere.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.OtherIncomeAmount</lx:path>
                                                <lx:label>Gross Other Income Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="OtherIncomeDescription" type="stringType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>A description of the other income.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.OtherIncomeDescription</lx:path>
                                                <lx:label>Other Income Description</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="OtherIncomeFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the frequency at which the applicant is receiving other income gross amount.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.OtherIncomeFrequency</lx:path>
                                                <lx:label>Gross Other Income Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="PrivatePensionAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the gross pension income amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.PrivatePensionAmount</lx:path>
                                                <lx:label>Gross Private Pension Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="PrivatePensionFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the frequency at which the applicant is receiving private pension income gross amount</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.PrivatePensionFrequency</lx:path>
                                                <lx:label>Gross Private Pension Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="SuperannuationAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the gross superannuation amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.SuperannuationAmount</lx:path>
                                                <lx:label>Gross Superannuation Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="SuperannuationFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>Captures the frequency at which the applicant is receiving superannuation income gross amount.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.SuperannuationFrequency</lx:path>
                                                <lx:label>Gross Superannuation Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="EndDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The end date indicates when the applicant finished being not employed.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.EndDate</lx:path>
                                          <lx:label>End Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="HomeDuties" type="yesNoList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicants should indicate whether they perform home duties.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.HomeDuties</lx:path>
                                          <lx:label>Home Duties</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="OnBenefits" type="yesNoList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicants should indicate whether they are receiving unemployment benefits.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.OnBenefits</lx:path>
                                          <lx:label>On Benefits</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Retired" type="yesNoList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicants should indicate whether they are retired</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Retired</lx:path>
                                          <lx:label>Retired</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="StartDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The start date indicates when the applicant commenced being not employed.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.StartDate</lx:path>
                                          <lx:label>Start Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Student" type="yesNoList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicants should indicate whether they are currently a student.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Student</lx:path>
                                          <lx:label>Student</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>System assigned unique identifier</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.UniqueID</lx:path>
                                          <lx:label>Unique ID</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PAYE" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Wrapper to contain details regarding PAYE employment.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE</lx:path>
                                      <lx:label>PAYE</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Container element for capturing the duration of employment.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                      <xs:element name="Income" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Details of the income or income-related amounts.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income</lx:path>
                                            <lx:label>Income</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:attribute name="CarAllowanceAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The gross car allowance amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.CarAllowanceAmount</lx:path>
                                                <lx:label>Gross Car Allowance Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="CarAllowanceFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The frequency of the gross car allowance income payment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.CarAllowanceFrequency</lx:path>
                                                <lx:label>Gross Car Allowance Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="CommissionAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The gross commission income amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.CommissionAmount</lx:path>
                                                <lx:label>Gross Commission Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="CommissionFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The frequency of the gross commission income payment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.CommissionFrequency</lx:path>
                                                <lx:label>Gross Commission Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="GrossRegularOvertimeAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The gross regular overtime income amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossRegularOvertimeAmount</lx:path>
                                                <lx:label>Gross Regular Overtime Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="GrossRegularOvertimeFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The frequency of the gross regular overtime income payment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossRegularOvertimeFrequency</lx:path>
                                                <lx:label>Gross Regular Overtime Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="GrossSalaryAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The gross salary income amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossSalaryAmount</lx:path>
                                                <lx:label>Gross Salary Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="GrossSalaryFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The frequency of the gross salary income payment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossSalaryFrequency</lx:path>
                                                <lx:label>Gross Salary Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="WorkAllowanceAmount" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The gross work allowance amount received by the applicant.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkAllowanceAmount</lx:path>
                                                <lx:label>Gross Work Allowance Amount</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="WorkAllowanceFrequency" type="frequencyShortList" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>The frequency of the gross work allowance income payment.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkAllowanceFrequency</lx:path>
                                                <lx:label>Gross Work Allowance Frequency</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Basis" type="payeBasisList" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicant should indicate whether the employment type is fulltime, part-time, contract, temporary, casual, commission only or seasonal.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Basis</lx:path>
                                          <lx:label>Basis</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="EndDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The end date indicates when the applicant finalised their employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.EndDate</lx:path>
                                          <lx:label>End Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Occupation" type="stringType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Text description of the person's role or occupation for this employment</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Occupation</lx:path>
                                          <lx:label>Occupation</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="StartDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The start date indicates when the applicant commenced their employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.StartDate</lx:path>
                                          <lx:label>Start Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>System assigned unique identifier</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.UniqueID</lx:path>
                                          <lx:label>Unique ID</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="x_Employer" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicant should capture the employer details for this instance of PAYE employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.PAYE.x_Employer</lx:path>
                                          <lx:label>Employer</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.CompanyApplicant</lx:target>
                                            <lx:target>Package.Content.Application.PersonApplicant</lx:target>
                                            <lx:target>Package.Content.Application.RelatedCompany</lx:target>
                                            <lx:target>Package.Content.Application.RelatedPerson</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SelfEmployed" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>Self-employed refers to people who 'work for themselves' in either wholly owned or part-owned organisations, including when operating as a (paid) Director. The organisation may or may not employ other people.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed</lx:path>
                                      <lx:label>Self Employed</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BusinessIncomePrevious" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Details of the share of the income or income-related amounts in the previous financial year (immediately preceding the most recent full financial year), attributable to this applicant (for year = current year -2).</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious</lx:path>
                                            <lx:label>Business Income Previous</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:sequence/>
                                          <xs:attribute name="EndDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The end date for the stated income, generally the end of a financial year</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.EndDate</lx:path>
                                                <lx:label>End Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the profit after tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ProfitAfterTax</lx:path>
                                                <lx:label>Profit After Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the net profit/profit before tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ProfitBeforeTax</lx:path>
                                                <lx:label>Profit Before Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="StartDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The start date for the stated income, generally the start of a financial year</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.StartDate</lx:path>
                                                <lx:label>Start Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BusinessIncomePrior" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Details of the share of the income or income-related amounts in the prior financial year (two years prior to the most recent full financial year), attributable to this applicant (for year = current year -3).</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior</lx:path>
                                            <lx:label>Business Income Prior</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:sequence/>
                                          <xs:attribute name="EndDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The end date for the stated income, generally the end of a financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.EndDate</lx:path>
                                                <lx:label>End Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the profit after tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ProfitAfterTax</lx:path>
                                                <lx:label>Profit After Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the net profit/profit before tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ProfitBeforeTax</lx:path>
                                                <lx:label>Profit Before Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="StartDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The start date for the stated income, generally the start of a financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.StartDate</lx:path>
                                                <lx:label>Start Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BusinessIncomeRecent" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Details of the share of the income or income-related amounts in the most recent full financial year, attributable to this applicant (year = current year -1).</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent</lx:path>
                                            <lx:label>Business Income Recent</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Addback" minOccurs="0" maxOccurs="1">
                                              <xs:annotation>
                                                <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Container element for Recent Business Income Addback</xs:documentation>
                                                <xs:appinfo>
                                                  <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback</lx:path>
                                                  <lx:label>Addback</lx:label>
                                                </xs:appinfo>
                                              </xs:annotation>
                                              <xs:complexType>
                                                <xs:attribute name="Allowances" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Allowances amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Allowances</lx:path>
                                                      <lx:label>Allowances</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Bonus" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Bonus amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Bonus</lx:path>
                                                      <lx:label>Bonus</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="CarExpense" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Car expense amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.CarExpense</lx:path>
                                                      <lx:label>Car Expense</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Interest" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Interest amount that can be an addback to the income</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Interest</lx:path>
                                                      <lx:label>Interest</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Lease" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Lease amount that can be an addback to the income</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Lease</lx:path>
                                                      <lx:label>Lease</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Salary" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Salary amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Salary</lx:path>
                                                      <lx:label>Salary</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="EndDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The end date for the stated income, generally the end of a financial year</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.EndDate</lx:path>
                                                <lx:label>End Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the profit after tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProfitAfterTax</lx:path>
                                                <lx:label>Profit After Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the net profit/profit before tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProfitBeforeTax</lx:path>
                                                <lx:label>Profit Before Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="StartDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The start date for the stated income, generally the start of a financial year</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.StartDate</lx:path>
                                                <lx:label>Start Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BusinessIncomeYearToDate" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Details of the current year to date share of the gross (pre-tax) income or income-related amounts, attributable to this applicant.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate</lx:path>
                                            <lx:label>Business Income Year To Date</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Addback" minOccurs="0" maxOccurs="1">
                                              <xs:annotation>
                                                <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Container element for Year To Date Business Income Addback</xs:documentation>
                                                <xs:appinfo>
                                                  <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback</lx:path>
                                                  <lx:label>Addback</lx:label>
                                                </xs:appinfo>
                                              </xs:annotation>
                                              <xs:complexType>
                                                <xs:attribute name="Allowances" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Allowances amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Allowances</lx:path>
                                                      <lx:label>Allowances</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Bonus" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Bonus amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Bonus</lx:path>
                                                      <lx:label>Bonus</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="CarExpense" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Car expense amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.CarExpense</lx:path>
                                                      <lx:label>Car Expense</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Interest" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Interest amount that can be an addback to the income</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Interest</lx:path>
                                                      <lx:label>Interest</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Lease" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Lease amount that can be an addback to the income</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Lease</lx:path>
                                                      <lx:label>Lease</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="Salary" type="currencyType" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Salary amount that can be an addback to the income.</xs:documentation>
                                                    <xs:appinfo>
                                                      <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Salary</lx:path>
                                                      <lx:label>Salary</lx:label>
                                                    </xs:appinfo>
                                                  </xs:annotation>
                                                </xs:attribute>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="EndDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The end date for the stated income, generally the end of a financial year</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.EndDate</lx:path>
                                                <lx:label>End Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the profit after tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ProfitAfterTax</lx:path>
                                                <lx:label>Profit After Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. Captures the net profit/profit before tax for the specified financial year.</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ProfitBeforeTax</lx:path>
                                                <lx:label>Profit Before Tax</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="StartDate" type="dateType" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>This item is now deprecated and will be deleted in a future release. BusinessIncome element must be used instead. The start date for the stated income, generally the start of a financial year</xs:documentation>
                                              <xs:appinfo>
                                                <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.StartDate</lx:path>
                                                <lx:label>Start Date</lx:label>
                                              </xs:appinfo>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                          <xs:documentation>Container element for capturing the duration of employment.</xs:documentation>
                                          <xs:appinfo>
                                            <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Duration</lx:path>
                                            <lx:label>Duration</lx:label>
                                          </xs:appinfo>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="EndDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The end date indicates when the applicant finalised their employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.EndDate</lx:path>
                                          <lx:label>End Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="Occupation" type="stringType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Text description of the person's role or occupation for this employment</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Occupation</lx:path>
                                          <lx:label>Occupation</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="StartDate" type="dateType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The start date indicates when the applicant commenced their employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.StartDate</lx:path>
                                          <lx:label>Start Date</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>System assigned unique identifier</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.UniqueID</lx:path>
                                          <lx:label>Unique ID</lx:label>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="x_Employer" type="referenceType" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>The applicant should capture their company details for this instance of self-employment.</xs:documentation>
                                        <xs:appinfo>
                                          <lx:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.x_Employer</lx:path>
                                          <lx:label>Employer</lx:label>
                                          <lx:references>
                                            <lx:target>Package.Content.Application.CompanyApplicant</lx:target>
                                            <lx:target>Package.Content.Application.PersonApplicant</lx:target>
                                            <lx:target>Package.Content.Application.RelatedCompany</lx:target>
                                            <lx:target>Package.Content.Application.RelatedPerson</lx:target>
                                          </lx:references>
                                        </xs:appinfo>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The order of this employment within the sequence.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.PersonApplicant.Employment.SequenceNumber</lx:path>
                                    <lx:label>Sequence Number</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MaritalStatusDetails" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Container for details related to the applicants marital status</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails</lx:path>
                                <lx:label>Marital Status Details</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="x_Spouse" type="referenceType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Link to the spouse of this applicant, generally either a co-applicant or a Related Party.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.x_Spouse</lx:path>
                                    <lx:label>Spouse</lx:label>
                                    <lx:references>
                                      <lx:target>Package.Content.Application.RelatedPerson</lx:target>
                                      <lx:target>Package.Content.Application.PersonApplicant</lx:target>
                                    </lx:references>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" type="personNameType" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>The name of the person applicant.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.PersonApplicant.PersonName</lx:path>
                                <lx:label>Person Name</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="ProofOfIdentity" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Contains details of a document used to verify identity.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.PersonApplicant.ProofOfIdentity</lx:path>
                                <lx:label>Proof Of Identity</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="DocumentNumber" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The identifying number of the document</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DocumentNumber</lx:path>
                                    <lx:label>Document Number</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="DocumentType" type="documentTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The type of supporting document provided to verify the Party's identity.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DocumentType</lx:path>
                                    <lx:label>Document Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="ApplicantType" type="applicantTypeList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Whether the loan party is an borrower or guarantor</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.PersonApplicant.ApplicantType</lx:path>
                              <lx:label>Applicant Type</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="DateOfBirth" type="dateType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the date of birth for the applicant.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.PersonApplicant.DateOfBirth</lx:path>
                              <lx:label>Date Of Birth</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="MaritalStatus" type="maritalStatusList" use="optional">
                          <xs:annotation>
                            <xs:documentation>The marital status of the applicant should be indicated</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.PersonApplicant.MaritalStatus</lx:path>
                              <lx:label>Marital Status</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ResidencyStatus" type="residencyStatusList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates the applicant's residency status as either a permanent resident, temporary resident or non-resident.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.PersonApplicant.ResidencyStatus</lx:path>
                              <lx:label>Residency Status</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The order of this person applicant within the sequence.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.PersonApplicant.SequenceNumber</lx:path>
                              <lx:label>Sequence Number</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.PersonApplicant.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RealEstateAsset" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Contains information about an asset which is real property.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.RealEstateAsset</lx:path>
                          <lx:label>Real Estate Asset</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ContractDetails" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Details of the purchase/sale price as specified in the Contract of Sale</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.ContractDetails</lx:path>
                                <lx:label>Contract Details</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="ContractPriceAmount" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the total purchase/sale price as specified in the Contract of Sale.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.ContractDetails.ContractPriceAmount</lx:path>
                                    <lx:label>Contract Price Amount</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="DepositPaid" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the amount of the purchase deposit that has been paid by the applicants as at the date the application is submitted.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.ContractDetails.DepositPaid</lx:path>
                                    <lx:label>Deposit Paid</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Encumbrance" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>An encumbrance is a burden, impairment or third party right over property, that often makes it less valuable or easy for the owner to deal with. There may be multiple encumbrances over a single piece of real property.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.Encumbrance</lx:path>
                                <lx:label>Encumbrance</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Unique Identifier for this Encumbrance Element</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.Encumbrance.UniqueID</lx:path>
                                    <lx:label>Unique ID</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="EstimatedValue" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Contains details about the estimated value of the property</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.EstimatedValue</lx:path>
                                <lx:label>Estimated Value</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="EstimateBasis" type="estimateBasisRealEstateAssetList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Indicates whether the estimate was based on the valuation of the applicant or a certified valuer.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.EstimatedValue.EstimateBasis</lx:path>
                                    <lx:label>Estimate Basis</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Value" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The estimated value of the real estate.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.EstimatedValue.Value</lx:path>
                                    <lx:label>Value</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PercentOwned" type="percentOwnedType" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>An asset may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An asset may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the asset may be assigned. If the asset is to be purchased, then this indicates the expected ownership arrangement post-settlement. If the percentage ownership is not shown, then ownership is assumed to be in equal parts.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.PercentOwned</lx:path>
                                <lx:label>Percent Owned</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="PropertyFeatures" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Container for information about the property's features.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures</lx:path>
                                <lx:label>Property Features</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="BuiltYear" type="gYearType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The year the property was built.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.BuiltYear</lx:path>
                                    <lx:label>Built Year</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="NumberOfBathrooms" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the number of bathrooms in the dwelling.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfBathrooms</lx:path>
                                    <lx:label>Number Of Bathrooms</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="NumberOfBedrooms" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the number of bedrooms in the dwelling.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfBedrooms</lx:path>
                                    <lx:label>Number Of Bedrooms</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="NumberOfCarSpaces" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Captures the number of car spaces in the dwelling.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfCarSpaces</lx:path>
                                    <lx:label>Number Of Car Spaces</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="NumberOfFloors" type="integerType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The number of floors in the property.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfFloors</lx:path>
                                    <lx:label>Number Of Floors</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="WallMaterial" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The type of walls of the property.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.WallMaterial</lx:path>
                                    <lx:label>Wall Material</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Representation" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Details regarding the specification of an agent (solicitor or conveyancer) to act for the borrowers or vendors at settlement</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.Representation</lx:path>
                                <lx:label>Representation</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="x_Conveyancer" type="referenceType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Identifies who will be representing the applicant(s) at settlement. Points to the Related Party acting as representative.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.Representation.x_Conveyancer</lx:path>
                                    <lx:label>Conveyancer</lx:label>
                                    <lx:references>
                                      <lx:target>Package.Content.Application.RelatedCompany</lx:target>
                                    </lx:references>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Title" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Contains information relating to the title details for the real property.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RealEstateAsset.Title</lx:path>
                                <lx:label>Title</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="PlanType" type="planTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Plan Type for a torrens title</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.Title.PlanType</lx:path>
                                    <lx:label>Plan Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="RealPropertyDescriptor" type="stringType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Contains the Real Property Descriptor</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RealEstateAsset.Title.RealPropertyDescriptor</lx:path>
                                    <lx:label>Real Property Descriptor</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="PrimaryPurpose" type="primaryPurposeRealEstateAssetList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates the primary or predominant purpose for which the owners hold the property.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RealEstateAsset.PrimaryPurpose</lx:path>
                              <lx:label>Primary Purpose</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The order of this realestate asset within the sequence.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RealEstateAsset.SequenceNumber</lx:path>
                              <lx:label>Sequence Number</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Status" type="realEstateAssetStatusList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates the state of any current dwelling on the property</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RealEstateAsset.Status</lx:path>
                              <lx:label>Status</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Transaction" type="assetTransactionList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates the current status of the applicants' ownership of the property, or the transaction that is proposed by them in relation to the property.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RealEstateAsset.Transaction</lx:path>
                              <lx:label>Transaction</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RealEstateAsset.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="x_Address" type="referenceType" use="optional">
                          <xs:annotation>
                            <xs:documentation>Address should capture the location details of real estate asset.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RealEstateAsset.x_Address</lx:path>
                              <lx:label>Address</lx:label>
                              <lx:references>
                                <lx:target>Package.Content.Application.Address</lx:target>
                              </lx:references>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RelatedCompany" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>A business enterprise (including company, sole trader, partnership, trust, or government department) that is not an applicant but has a role in some aspect of the application.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.RelatedCompany</lx:path>
                          <lx:label>Related Company</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Contact" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Container element for the related company contact details</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RelatedCompany.Contact</lx:path>
                                <lx:label>Contact</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="OfficePhone" type="phoneType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>An office phone number for the related company</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.RelatedCompany.Contact.OfficePhone</lx:path>
                                      <lx:label>Office Phone</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Email" type="emailPattern" use="optional">
                                <xs:annotation>
                                  <xs:documentation>An email address for the related company</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RelatedCompany.Contact.Email</lx:path>
                                    <lx:label>Email</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="x_Address" type="referenceType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The mailing address of the company.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RelatedCompany.Contact.x_Address</lx:path>
                                    <lx:label>Address</lx:label>
                                    <lx:references>
                                      <lx:target>Package.Content.Application.Address</lx:target>
                                    </lx:references>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="BusinessName" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The business name or trading name of the company</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RelatedCompany.BusinessName</lx:path>
                              <lx:label>Business Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="CompanyName" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The registered name of the company</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RelatedCompany.CompanyName</lx:path>
                              <lx:label>Company Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="NZBN" type="nzbnPattern" use="optional">
                          <xs:annotation>
                            <xs:documentation>The NZBN of the related company</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RelatedCompany.NZBN</lx:path>
                              <lx:label>NZBN</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RelatedCompany.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RelatedPerson" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>A person that is not an applicant but has a role in some aspect of the application.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.RelatedPerson</lx:path>
                          <lx:label>Related Person</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Contact" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>Container element for the related person contact details</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RelatedPerson.Contact</lx:path>
                                <lx:label>Contact</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="HomePhone" type="phoneType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>A home phone number for the related party.</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.RelatedPerson.Contact.HomePhone</lx:path>
                                      <lx:label>Home Phone</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="Mobile" type="phoneType" minOccurs="0" maxOccurs="1">
                                  <xs:annotation>
                                    <xs:documentation>A mobile number for the related party</xs:documentation>
                                    <xs:appinfo>
                                      <lx:path>Package.Content.Application.RelatedPerson.Contact.Mobile</lx:path>
                                      <lx:label>Mobile</lx:label>
                                    </xs:appinfo>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Email" type="emailPattern" use="optional">
                                <xs:annotation>
                                  <xs:documentation>An email address for the related person</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.RelatedPerson.Contact.Email</lx:path>
                                    <lx:label>Email</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" type="personNameType" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                              <xs:documentation>The name of the related person.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.RelatedPerson.PersonName</lx:path>
                                <lx:label>Person Name</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="DateOfBirth" type="dateType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The related person's date of birth.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RelatedPerson.DateOfBirth</lx:path>
                              <lx:label>Date Of Birth</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.RelatedPerson.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Summary" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>Application summary data.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.Summary</lx:path>
                          <lx:label>Summary</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Fee" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Contains information about a fee that is payable in connection with the loan application.</xs:documentation>
                              <xs:appinfo>
                                <lx:path>Package.Content.Application.Summary.Fee</lx:path>
                                <lx:label>Fee</lx:label>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="Amount" type="currencyType" use="optional">
                                <xs:annotation>
                                  <xs:documentation>The estimated or approximate amount of the fee.</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Summary.Fee.Amount</lx:path>
                                    <lx:label>Amount</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="Type" type="feeTypeList" use="optional">
                                <xs:annotation>
                                  <xs:documentation>Indicates the type of fee being described</xs:documentation>
                                  <xs:appinfo>
                                    <lx:path>Package.Content.Application.Summary.Fee.Type</lx:path>
                                    <lx:label>Type</lx:label>
                                  </xs:appinfo>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="TrustApplicant" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Contains information about an applicant who is applying in their capacity as trustee of a trust. A trustee may be either a person or a company.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Content.Application.TrustApplicant</lx:path>
                          <lx:label>Trust Applicant</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="NZBN" type="nzbnPattern" use="optional">
                          <xs:annotation>
                            <xs:documentation>Captures the NZBN of the trust applicant</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.TrustApplicant.NZBN</lx:path>
                              <lx:label>NZBN</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="TrustName" type="stringType" use="optional">
                          <xs:annotation>
                            <xs:documentation>The legal name of the Trust.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.TrustApplicant.TrustName</lx:path>
                              <lx:label>Trust Name</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
                          <xs:annotation>
                            <xs:documentation>System assigned unique identifier</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Content.Application.TrustApplicant.UniqueID</lx:path>
                              <lx:label>Unique ID</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ProductionData" type="yesNoList" use="optional">
                    <xs:annotation>
                      <xs:documentation>Indicates whether this file contains production or test data.</xs:documentation>
                      <xs:appinfo>
                        <lx:path>Package.Content.Application.ProductionData</lx:path>
                        <lx:label>Production Data</lx:label>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Instructions" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>Determines the scope of the message. The message can be about the Application, Valuation, Mortgage Insurance, Loan Documents or an Error.</xs:documentation>
            <xs:appinfo>
              <lx:path>Package.Instructions</lx:path>
              <lx:label>Instructions</lx:label>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:choice>
              <xs:element name="ApplicationInstructions" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation>Submission information or application status updates.</xs:documentation>
                  <xs:appinfo>
                    <lx:path>Package.Instructions.ApplicationInstructions</lx:path>
                    <lx:label>Application Instructions</lx:label>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:choice>
                    <xs:element name="Submit" minOccurs="1" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>Submission information related to the application process.</xs:documentation>
                        <xs:appinfo>
                          <lx:path>Package.Instructions.ApplicationInstructions.Submit</lx:path>
                          <lx:label>Submit</lx:label>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="AssessmentType" type="assessmentTypeApplicationInstructionsList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates the type of assessment.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Instructions.ApplicationInstructions.Submit.AssessmentType</lx:path>
                              <lx:label>Assessment Type</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="IsAccountVariation" type="yesNoList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Flag to indicate whether the application being submitted is an account variation.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Instructions.ApplicationInstructions.Submit.IsAccountVariation</lx:path>
                              <lx:label>Is Account Variation</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="IsResubmission" type="yesNoList" use="optional">
                          <xs:annotation>
                            <xs:documentation>Flag to indicate whether the application being submitted is a resubmission.</xs:documentation>
                            <xs:appinfo>
                              <lx:path>Package.Instructions.ApplicationInstructions.Submit.IsResubmission</lx:path>
                              <lx:label>Is Resubmission</lx:label>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:choice>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name="Publisher" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>The publisher of the specific XML file, being the party responsible for the content of the file as well as the work instruction, and to whom the response message would be delivered. For a mortgage broker sending an application to a lender, this would likely be the aggregator if they are providing the software, or perhaps the broker company or broker otherwise. For a lender requesting LMI, the lender is the publisher. For the LMI response, the LMI provider is the publisher.</xs:documentation>
            <xs:appinfo>
              <lx:path>Package.Publisher</lx:path>
              <lx:label>Publisher</lx:label>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Software" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation>The software details of the message publisher.</xs:documentation>
                  <xs:appinfo>
                    <lx:path>Package.Publisher.Software</lx:path>
                    <lx:label>Software</lx:label>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="LIXICode" type="stringType" use="required">
                    <xs:annotation>
                      <xs:documentation>The LIXI-specified code of the licensee that provides the Software.</xs:documentation>
                      <xs:appinfo>
                        <lx:path>Package.Publisher.Software.LIXICode</lx:path>
                        <lx:label>LIXI Code</lx:label>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Name" type="stringType" use="optional">
                    <xs:annotation>
                      <xs:documentation>The name of the software application used by the message publisher.</xs:documentation>
                      <xs:appinfo>
                        <lx:path>Package.Publisher.Software.Name</lx:path>
                        <lx:label>Name</lx:label>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="LIXICode" type="stringType" use="required">
              <xs:annotation>
                <xs:documentation>The LIXI-specified code of the sender/publisher of the Package.</xs:documentation>
                <xs:appinfo>
                  <lx:path>Package.Publisher.LIXICode</lx:path>
                  <lx:label>LIXI Code</lx:label>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="PublishedDateTime" type="dateTimeType" use="optional">
              <xs:annotation>
                <xs:documentation>The date and time that the XML file was generated.</xs:documentation>
                <xs:appinfo>
                  <lx:path>Package.Publisher.PublishedDateTime</lx:path>
                  <lx:label>Published Date Time</lx:label>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="Recipient" minOccurs="1" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>The intended recipients (company or company-specified routing) for the Package from the Publisher.</xs:documentation>
            <xs:appinfo>
              <lx:path>Package.Recipient</lx:path>
              <lx:label>Recipient</lx:label>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence/>
            <xs:attribute name="LIXICode" type="stringType" use="required">
              <xs:annotation>
                <xs:documentation>The LIXI-specified code for the licensee that is the intended recipient for the Package.</xs:documentation>
                <xs:appinfo>
                  <lx:path>Package.Recipient.LIXICode</lx:path>
                  <lx:label>LIXI Code</lx:label>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="SchemaVersion" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>Contains information about the package schema version</xs:documentation>
            <xs:appinfo>
              <lx:path>Package.SchemaVersion</lx:path>
              <lx:label>Schema Version</lx:label>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="LIXICustomVersion" type="stringType" use="required" fixed="dev-wip">
              <xs:annotation>
                <xs:documentation>Each LIXI Schema that is customised by restriction is allocated a Custom Version Identifier. If the XML instance is created from a LIXI Transaction Schema the LIXICustomVersion is optional and should remain empty. If the XML instance is created from a schema that has been Customised by Restriction, this attribute is mandatory and holds the composite identifier constructed from: the LIXI Code of the author organisation; the Customisation Code (jointly defined by LIXI and the customisation author); and the datetimestamp of when the Customised Schema was created.</xs:documentation>
                <xs:appinfo>
                  <lx:path>Package.SchemaVersion.LIXICustomVersion</lx:path>
                  <lx:label>LIXI Custom Version</lx:label>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="LIXITransactionType" type="stringType" use="required" fixed="CNZ">
              <xs:annotation>
                <xs:documentation>Identifies the transaction type of the schema, for example CAL (for a Credit Application) or DAS (for Documents Preparation and Settlement).</xs:documentation>
                <xs:appinfo>
                  <lx:path>Package.SchemaVersion.LIXITransactionType</lx:path>
                  <lx:label>LIXI Transaction Type</lx:label>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="LIXIVersion" type="stringType" use="required" fixed="2.1.31">
              <xs:annotation>
                <xs:documentation>Captures the LIXI version number that the application XML was written to conform with.</xs:documentation>
                <xs:appinfo>
                  <lx:path>Package.SchemaVersion.LIXIVersion</lx:path>
                  <lx:label>LIXI Version</lx:label>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ProductionData" type="yesNoList" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates whether this file contains production or test data.</xs:documentation>
          <xs:appinfo>
            <lx:path>Package.ProductionData</lx:path>
            <lx:label>Production Data</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="addressType">
    <xs:annotation>
      <xs:documentation>addressType</xs:documentation>
      <xs:appinfo>
        <lx:path>addressType</lx:path>
        <lx:label>Address Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DXBox" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>The DX Box address.</xs:documentation>
          <xs:appinfo>
            <lx:path>addressType.DXBox</lx:path>
            <lx:label>DX Box</lx:label>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Exchange" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>An exchange box in an authorised DX system</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.DXBox.Exchange</lx:path>
                <lx:label>Exchange</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Number" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>An identification number, used for tracking the documents from the moment they're collected to the time they arrive at their destination.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.DXBox.Number</lx:path>
                <lx:label>Number</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Provider" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>The name of the company providing DX mailing services</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.DXBox.Provider</lx:path>
                <lx:label>Provider</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="NonStandard" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>The non standard address.</xs:documentation>
          <xs:appinfo>
            <lx:path>addressType.NonStandard</lx:path>
            <lx:label>Non Standard</lx:label>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Line1" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>Line 1 of the address.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.NonStandard.Line1</lx:path>
                <lx:label>Line 1</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Line2" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>Line 2 of the address.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.NonStandard.Line2</lx:path>
                <lx:label>Line 2</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="POBox" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>The standard PO Box address.</xs:documentation>
          <xs:appinfo>
            <lx:path>addressType.POBox</lx:path>
            <lx:label>PO Box</lx:label>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Exchange" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>An exchange box in an authorised PO system</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.POBox.Exchange</lx:path>
                <lx:label>Exchange</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Number" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>An identification number, forming part of an address, for the channel of postal delivery.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.POBox.Number</lx:path>
                <lx:label>Number</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Type" type="poBoxTypeList" use="optional">
            <xs:annotation>
              <xs:documentation>The specification of the identification of a postal delivery service such as General Post Office Box, Community Mail Bag, etc. to clearly distinguish it from another when applicable.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.POBox.Type</lx:path>
                <lx:label>Type</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="Standard" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>The standard address.</xs:documentation>
          <xs:appinfo>
            <lx:path>addressType.Standard</lx:path>
            <lx:label>Standard</lx:label>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="StreetName" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>The full street name used to identify the street location of the property.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.Standard.StreetName</lx:path>
                <lx:label>Street Name</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="StreetNumber" type="stringType" use="optional">
            <xs:annotation>
              <xs:documentation>To record the numeric or numeric/alpha reference number of a house or property.</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.Standard.StreetNumber</lx:path>
                <lx:label>Street Number</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="StreetType" type="streetTypeList" use="optional">
            <xs:annotation>
              <xs:documentation>Used to identify the thoroughfare type</xs:documentation>
              <xs:appinfo>
                <lx:path>addressType.Standard.StreetType</lx:path>
                <lx:label>Street Type</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="City" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>The name of the town, city or island the delivery point is located in or associated with. Australian addresses do not have a City as per Australia Post guidelines. According to New Zealand Post Address Standards, the Town/City is a mandatory element of all addresses, i.e. urban, rural and delivery service addresses.</xs:documentation>
        <xs:appinfo>
          <lx:path>addressType.City</lx:path>
          <lx:label>Town/City</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Country" type="countryCodeList" use="optional">
      <xs:annotation>
        <xs:documentation>The destination country of the address</xs:documentation>
        <xs:appinfo>
          <lx:path>addressType.Country</lx:path>
          <lx:label>Country</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="NewZealandPostCode" type="nzPostCodePattern" use="optional">
      <xs:annotation>
        <xs:documentation>A four digit numeric descriptor for a postal delivery area, aligned with placename, suburb or locality and in some circumstances a unique Postal Delivery Type.</xs:documentation>
        <xs:appinfo>
          <lx:path>addressType.NewZealandPostCode</lx:path>
          <lx:label>New Zealand Post Code</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" type="addressTypeList" use="optional">
      <xs:annotation>
        <xs:documentation>Determines if the address is Standard, Non Standard, a DX Box or a PO BOX</xs:documentation>
        <xs:appinfo>
          <lx:path>addressType.Type</lx:path>
          <lx:label>Type</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional">
      <xs:annotation>
        <xs:documentation>Unique identification assigned to this address.</xs:documentation>
        <xs:appinfo>
          <lx:path>addressType.UniqueID</lx:path>
          <lx:label>Unique ID</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="durationType">
    <xs:annotation>
      <xs:documentation>A complex type used for defining durations in terms of units and length of time (as a multiple of the units).</xs:documentation>
      <xs:appinfo>
        <lx:path>durationType</lx:path>
        <lx:label>Duration Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="Length" type="integerType" use="optional">
      <xs:annotation>
        <xs:documentation>The length of the duration as a multiple of the units.</xs:documentation>
        <xs:appinfo>
          <lx:path>durationType.Length</lx:path>
          <lx:label>Length</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Units" type="durationUnitsList" use="optional">
      <xs:annotation>
        <xs:documentation>The units used to define the duration.</xs:documentation>
        <xs:appinfo>
          <lx:path>durationType.Units</lx:path>
          <lx:label>Units</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="financialAccountType">
    <xs:annotation>
      <xs:documentation>financialAccountType</xs:documentation>
      <xs:appinfo>
        <lx:path>financialAccountType</lx:path>
        <lx:label>Financial Account Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="AccountName" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>The free form name assigned to the account.</xs:documentation>
        <xs:appinfo>
          <lx:path>financialAccountType.AccountName</lx:path>
          <lx:label>Account Name</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AccountNumber" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>The unique number assigned to this account. (typically by the financial institution)</xs:documentation>
        <xs:appinfo>
          <lx:path>financialAccountType.AccountNumber</lx:path>
          <lx:label>Account Number</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="BSB" type="bsbPattern" use="optional">
      <xs:annotation>
        <xs:documentation>The BSB number identifying where this account is held.</xs:documentation>
        <xs:appinfo>
          <lx:path>financialAccountType.BSB</lx:path>
          <lx:label>BSB</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FinancialInstitution" type="financialInstitutionList" use="optional">
      <xs:annotation>
        <xs:documentation>The financial institution where the account is held.</xs:documentation>
        <xs:appinfo>
          <lx:path>financialAccountType.FinancialInstitution</lx:path>
          <lx:label>Financial Institution</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="percentOwnedType">
    <xs:annotation>
      <xs:documentation>percentOwnedType</xs:documentation>
      <xs:appinfo>
        <lx:path>percentOwnedType</lx:path>
        <lx:label>Percent Owned Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Owner" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Container that associates a reference to an owner or other responsible party with the percentage of the item that they own or are responsible for.</xs:documentation>
          <xs:appinfo>
            <lx:path>percentOwnedType.Owner</lx:path>
            <lx:label>Owner</lx:label>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Percent" type="percentType" use="optional">
            <xs:annotation>
              <xs:documentation>Captures the percentage of the item that referenced party owns or is responsible for.</xs:documentation>
              <xs:appinfo>
                <lx:path>percentOwnedType.Owner.Percent</lx:path>
                <lx:label>Percent</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SequenceNumber" type="integerType" use="optional">
            <xs:annotation>
              <xs:documentation>The order of this owner within the sequence.</xs:documentation>
              <xs:appinfo>
                <lx:path>percentOwnedType.Owner.SequenceNumber</lx:path>
                <lx:label>Sequence Number</lx:label>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="x_Party" type="referenceType" use="optional">
            <xs:annotation>
              <xs:documentation>Contains a reference to a party that is an owner of the item, or has a similar relationship such as a borrower or beneficiary.</xs:documentation>
              <xs:appinfo>
                <lx:path>percentOwnedType.Owner.x_Party</lx:path>
                <lx:label>Party</lx:label>
                <lx:references>
                  <lx:target>Package.Content.Application.CompanyApplicant</lx:target>
                  <lx:target>Package.Content.Application.PersonApplicant</lx:target>
                  <lx:target>Package.Content.Application.TrustApplicant</lx:target>
                </lx:references>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Proportions" type="proportionsList" use="optional">
      <xs:annotation>
        <xs:documentation>Flag to indicate whether the ownership proportions are equal across all owners, specified individually for each one, or not specified.</xs:documentation>
        <xs:appinfo>
          <lx:path>percentOwnedType.Proportions</lx:path>
          <lx:label>Proportions</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="personNameType">
    <xs:annotation>
      <xs:documentation>personNameType</xs:documentation>
      <xs:appinfo>
        <lx:path>personNameType</lx:path>
        <lx:label>Person Name Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="FirstName" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>A person's first name.</xs:documentation>
        <xs:appinfo>
          <lx:path>personNameType.FirstName</lx:path>
          <lx:label>First Name</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MiddleNames" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>A person's other name. Also referred to as their 'middle name'. For example - where someone's name is Frederick Joseph Gilbert - 'Joseph' would be considered their other name.</xs:documentation>
        <xs:appinfo>
          <lx:path>personNameType.MiddleNames</lx:path>
          <lx:label>Middle Names</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="NameTitle" type="nameTitleList" use="optional">
      <xs:annotation>
        <xs:documentation>The name title this person uses when they are formally addressed.</xs:documentation>
        <xs:appinfo>
          <lx:path>personNameType.NameTitle</lx:path>
          <lx:label>Name Title</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Surname" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>A person's surname.</xs:documentation>
        <xs:appinfo>
          <lx:path>personNameType.Surname</lx:path>
          <lx:label>Surname</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="phoneType">
    <xs:annotation>
      <xs:documentation>phoneType</xs:documentation>
      <xs:appinfo>
        <lx:path>phoneType</lx:path>
        <lx:label>Phone Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="NewZealandDialingCode" type="nzDialingCodeList" use="optional">
      <xs:annotation>
        <xs:documentation>The Area Code prefix for a New Zealand telephone number.</xs:documentation>
        <xs:appinfo>
          <lx:path>phoneType.NewZealandDialingCode</lx:path>
          <lx:label>New Zealand Area Code</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Number" type="stringType" use="optional">
      <xs:annotation>
        <xs:documentation>The local-dial number. For local rate, free call, satellite or similar special non-overseas numbers where the area or dialing code is not otherwise available, the full phone number. Required, allowed once only.</xs:documentation>
        <xs:appinfo>
          <lx:path>phoneType.Number</lx:path>
          <lx:label>Number</lx:label>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="absLendingPurposeCodeList">
    <xs:annotation>
      <xs:documentation>absLendingPurposeCodeList</xs:documentation>
      <xs:appinfo>
        <lx:path>absLendingPurposeCodeList</lx:path>
        <lx:label>ABS Lending Purpose Code List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="ABS-121">
        <xs:annotation>
          <xs:documentation>Construction of dwelling - House</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-121</lx:path>
            <lx:label>Construction of dwelling - House</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-123">
        <xs:annotation>
          <xs:documentation>Construction of dwelling - Other dwelling</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-123</lx:path>
            <lx:label>Construction of dwelling - Other dwelling</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-125">
        <xs:annotation>
          <xs:documentation>Purchase of newly erected dwelling - House</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-125</lx:path>
            <lx:label>Purchase of newly erected dwelling - House</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-127">
        <xs:annotation>
          <xs:documentation>Purchase of newly erected dwelling - Other dwelling</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-127</lx:path>
            <lx:label>Purchase of newly erected dwelling - Other dwelling</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-129">
        <xs:annotation>
          <xs:documentation>Purchase of established dwelling - House</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-129</lx:path>
            <lx:label>Purchase of established dwelling - House</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-131">
        <xs:annotation>
          <xs:documentation>Purchase of established dwelling - Other dwelling</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-131</lx:path>
            <lx:label>Purchase of established dwelling - Other dwelling</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-133">
        <xs:annotation>
          <xs:documentation>Refinance existing home loans - Loans held with other financial institutions</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-133</lx:path>
            <lx:label>Refinance existing home loans - Loans held with other financial institutions</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-143">
        <xs:annotation>
          <xs:documentation>Structural and non-structural alterations and/or additions to dwellings (excluding swimming pools, maintenance, repairs and other home improvements)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-143</lx:path>
            <lx:label>Structural and non-structural alterations and/or additions to dwellings (excluding swimming pools, maintenance, repairs and other home improvements)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-221">
        <xs:annotation>
          <xs:documentation>Purchase of motor cars and station wagons - New</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-221</lx:path>
            <lx:label>Purchase of motor cars and station wagons - New</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-223">
        <xs:annotation>
          <xs:documentation>Purchase of motor cars and station wagons - Used</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-223</lx:path>
            <lx:label>Purchase of motor cars and station wagons - Used</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-225">
        <xs:annotation>
          <xs:documentation>Purchase of other motor vehicles</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-225</lx:path>
            <lx:label>Purchase of other motor vehicles</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-227">
        <xs:annotation>
          <xs:documentation>Purchase of motor cycles, scooters</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-227</lx:path>
            <lx:label>Purchase of motor cycles, scooters</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-229">
        <xs:annotation>
          <xs:documentation>Purchase of boats, caravans and trailers</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-229</lx:path>
            <lx:label>Purchase of boats, caravans and trailers</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-231">
        <xs:annotation>
          <xs:documentation>Purchase of individual residential blocks of land</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-231</lx:path>
            <lx:label>Purchase of individual residential blocks of land</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-233">
        <xs:annotation>
          <xs:documentation>Unsecured loans for alterations and/or additions to dwellings</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-233</lx:path>
            <lx:label>Unsecured loans for alterations and/or additions to dwellings</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-235">
        <xs:annotation>
          <xs:documentation>Unsecured loans to assist in the purchase or construction of housing for owner occupation</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-235</lx:path>
            <lx:label>Unsecured loans to assist in the purchase or construction of housing for owner occupation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-237">
        <xs:annotation>
          <xs:documentation>Purchase of household and personal goods</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-237</lx:path>
            <lx:label>Purchase of household and personal goods</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-239">
        <xs:annotation>
          <xs:documentation>Debt consolidation (excluding refinance of personal loans)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-239</lx:path>
            <lx:label>Debt consolidation (excluding refinance of personal loans)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-241">
        <xs:annotation>
          <xs:documentation>Travel and holidays</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-241</lx:path>
            <lx:label>Travel and holidays</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-243">
        <xs:annotation>
          <xs:documentation>Refinance of personal loans (excluding investment loans)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-243</lx:path>
            <lx:label>Refinance of personal loans (excluding investment loans)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-245">
        <xs:annotation>
          <xs:documentation>Personal investment in dwellings for rent/resale</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-245</lx:path>
            <lx:label>Personal investment in dwellings for rent/resale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-247">
        <xs:annotation>
          <xs:documentation>Other personal investment (including shares and other investment assets)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-247</lx:path>
            <lx:label>Other personal investment (including shares and other investment assets)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-248">
        <xs:annotation>
          <xs:documentation>Refinancing of investment loans (including purchase of dwellings for rent/resale, purchase of shares and other investment assets)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-248</lx:path>
            <lx:label>Refinancing of investment loans (including purchase of dwellings for rent/resale, purchase of shares and other investment assets)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-249">
        <xs:annotation>
          <xs:documentation>Other purposes (including swimming pools and home improvements - other than alterations and additions, motor accessories and any other purpose)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-249</lx:path>
            <lx:label>Other purposes (including swimming pools and home improvements - other than alterations and additions, motor accessories and any other purpose)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-320">
        <xs:annotation>
          <xs:documentation>Construction of dwellings for rent/resale</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-320</lx:path>
            <lx:label>Construction of dwellings for rent/resale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-321">
        <xs:annotation>
          <xs:documentation>Construction of non-residential buildings - Shop</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-321</lx:path>
            <lx:label>Construction of non-residential buildings - Shop</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-322">
        <xs:annotation>
          <xs:documentation>Construction of non-residential buildings - Offices</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-322</lx:path>
            <lx:label>Construction of non-residential buildings - Offices</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-323">
        <xs:annotation>
          <xs:documentation>Construction of non-residential buildings - Industrial buildings</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-323</lx:path>
            <lx:label>Construction of non-residential buildings - Industrial buildings</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-324">
        <xs:annotation>
          <xs:documentation>Construction of non-residential buildings - Other</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-324</lx:path>
            <lx:label>Construction of non-residential buildings - Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-326">
        <xs:annotation>
          <xs:documentation>Construction of non-building structures</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-326</lx:path>
            <lx:label>Construction of non-building structures</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-327">
        <xs:annotation>
          <xs:documentation>Structural and non-structural alterations and/or additions to buildings (excluding maintenance, repairs and other improvements that don't include building work)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-327</lx:path>
            <lx:label>Structural and non-structural alterations and/or additions to buildings (excluding maintenance, repairs and other improvements that don't include building work)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-329">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Dwellings for rent/resale</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-329</lx:path>
            <lx:label>Purchase of land and buildings - Dwellings for rent/resale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-330">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Shops</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-330</lx:path>
            <lx:label>Purchase of land and buildings - Shops</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-331">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Offices</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-331</lx:path>
            <lx:label>Purchase of land and buildings - Offices</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-332">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Industrial buildings (including factories, automotive repair facilities, etc.)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-332</lx:path>
            <lx:label>Purchase of land and buildings - Industrial buildings (including factories, automotive repair facilities, etc.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-333">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Other non-residential buildings (including hotels, buildings for educational, religious, health, entertainment and recreational purposes)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-333</lx:path>
            <lx:label>Purchase of land and buildings - Other non-residential buildings (including hotels, buildings for educational, religious, health, entertainment and recreational purposes)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-335">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Rural property</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-335</lx:path>
            <lx:label>Purchase of land and buildings - Rural property</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-336">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Land for residential block development</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-336</lx:path>
            <lx:label>Purchase of land and buildings - Land for residential block development</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-337">
        <xs:annotation>
          <xs:documentation>Purchase of land and buildings - Other land purchases</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-337</lx:path>
            <lx:label>Purchase of land and buildings - Other land purchases</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-340">
        <xs:annotation>
          <xs:documentation>Wholesale Finance (including purchase of goods by wholesalers or retailers, traders' stocks held under bailment or floor plan schemes or working capital)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-340</lx:path>
            <lx:label>Wholesale Finance (including purchase of goods by wholesalers or retailers, traders' stocks held under bailment or floor plan schemes or working capital)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-341">
        <xs:annotation>
          <xs:documentation>Purchase of plant and equipment - Motor vehicles (excluding motorcycles, trailers, caravans, trains, boats and planes)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-341</lx:path>
            <lx:label>Purchase of plant and equipment - Motor vehicles (excluding motorcycles, trailers, caravans, trains, boats and planes)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-342">
        <xs:annotation>
          <xs:documentation>Purchase of plant and equipment - Other transport equipment (including motorcycles, trailers, caravans, trains, boats and planes)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-342</lx:path>
            <lx:label>Purchase of plant and equipment - Other transport equipment (including motorcycles, trailers, caravans, trains, boats and planes)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-343">
        <xs:annotation>
          <xs:documentation>Purchase of plant and equipment - Other plant equipment (including construction and earthmoving equipment, agricultural machinery and office equipment)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-343</lx:path>
            <lx:label>Purchase of plant and equipment - Other plant equipment (including construction and earthmoving equipment, agricultural machinery and office equipment)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-348">
        <xs:annotation>
          <xs:documentation>Refinance of existing commercial loans</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-348</lx:path>
            <lx:label>Refinance of existing commercial loans</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABS-349">
        <xs:annotation>
          <xs:documentation>Other purpose (including factoring - whether secured by trade debts or to purchase trade debts, maintenance, repairs and other improvements to property not involving building work)</xs:documentation>
          <xs:appinfo>
            <lx:path>absLendingPurposeCodeList.ABS-349</lx:path>
            <lx:label>Other purpose (including factoring - whether secured by trade debts or to purchase trade debts, maintenance, repairs and other improvements to property not involving building work)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="addressTypeList">
    <xs:annotation>
      <xs:documentation>addressTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>addressTypeList</lx:path>
        <lx:label>addressTypeList</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="DX Box">
        <xs:annotation>
          <xs:documentation>DX Box</xs:documentation>
          <xs:appinfo>
            <lx:path>addressTypeList.DX Box</lx:path>
            <lx:label>DX Box</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Non Standard">
        <xs:annotation>
          <xs:documentation>Non Standard</xs:documentation>
          <xs:appinfo>
            <lx:path>addressTypeList.Non Standard</lx:path>
            <lx:label>Non Standard</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PO Box or Bag">
        <xs:annotation>
          <xs:documentation>PO Box or Bag</xs:documentation>
          <xs:appinfo>
            <lx:path>addressTypeList.PO Box or Bag</lx:path>
            <lx:label>PO Box or Bag</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Standard">
        <xs:annotation>
          <xs:documentation>Standard</xs:documentation>
          <xs:appinfo>
            <lx:path>addressTypeList.Standard</lx:path>
            <lx:label>Standard</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="applicantTypeList">
    <xs:annotation>
      <xs:documentation>applicantTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>applicantTypeList</lx:path>
        <lx:label>Applicant Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Borrower">
        <xs:annotation>
          <xs:documentation>The party is applying in the capacity of a borrower on the loan.</xs:documentation>
          <xs:appinfo>
            <lx:path>applicantTypeList.Borrower</lx:path>
            <lx:label>Borrower</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Borrower and Guarantor">
        <xs:annotation>
          <xs:documentation>The party is applying in the capacity of both borrower and guarantor on the loan.</xs:documentation>
          <xs:appinfo>
            <lx:path>applicantTypeList.Borrower and Guarantor</lx:path>
            <lx:label>Borrower and Guarantor</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Guarantor">
        <xs:annotation>
          <xs:documentation>The party is applying in the capacity of a guarantor on the loan.</xs:documentation>
          <xs:appinfo>
            <lx:path>applicantTypeList.Guarantor</lx:path>
            <lx:label>Guarantor</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="assessmentTypeApplicationInstructionsList">
    <xs:annotation>
      <xs:documentation>assessmentTypeApplicationInstructionsList</xs:documentation>
      <xs:appinfo>
        <lx:path>assessmentTypeApplicationInstructionsList</lx:path>
        <lx:label>Assessment Type Application Instructions List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Full">
        <xs:annotation>
          <xs:documentation>Full</xs:documentation>
          <xs:appinfo>
            <lx:path>assessmentTypeApplicationInstructionsList.Full</lx:path>
            <lx:label>Full</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Indicative">
        <xs:annotation>
          <xs:documentation>Indicative</xs:documentation>
          <xs:appinfo>
            <lx:path>assessmentTypeApplicationInstructionsList.Indicative</lx:path>
            <lx:label>Indicative</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Quote">
        <xs:annotation>
          <xs:documentation>Quote</xs:documentation>
          <xs:appinfo>
            <lx:path>assessmentTypeApplicationInstructionsList.Quote</lx:path>
            <lx:label>Quote</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="assetTransactionList">
    <xs:annotation>
      <xs:documentation>assetTransactionList</xs:documentation>
      <xs:appinfo>
        <lx:path>assetTransactionList</lx:path>
        <lx:label>Asset Transaction List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Owns">
        <xs:annotation>
          <xs:documentation>The property is already owned by the parties, without a mortgage.</xs:documentation>
          <xs:appinfo>
            <lx:path>assetTransactionList.Owns</lx:path>
            <lx:label>Owns</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Owns Existing Mortgage">
        <xs:annotation>
          <xs:documentation>The property is already owned by the parties, with a mortgage.</xs:documentation>
          <xs:appinfo>
            <lx:path>assetTransactionList.Owns Existing Mortgage</lx:path>
            <lx:label>Owns Existing Mortgage</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Purchasing">
        <xs:annotation>
          <xs:documentation>The property is being purchased by the parties specified as the owners of the property.</xs:documentation>
          <xs:appinfo>
            <lx:path>assetTransactionList.Purchasing</lx:path>
            <lx:label>Purchasing</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Sold">
        <xs:annotation>
          <xs:documentation>The property has recently been sold.</xs:documentation>
          <xs:appinfo>
            <lx:path>assetTransactionList.Sold</lx:path>
            <lx:label>Sold</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Transfer">
        <xs:annotation>
          <xs:documentation>The property is owned by multiple parties and a party needs to be removed from the title.</xs:documentation>
          <xs:appinfo>
            <lx:path>assetTransactionList.Transfer</lx:path>
            <lx:label>Transfer</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="clearingFromOtherSourceList">
    <xs:annotation>
      <xs:documentation>A list of options available for selecting the source of funds from a third party institution used to clear an existing liability (as opposed to funds from the loan under application).</xs:documentation>
      <xs:appinfo>
        <lx:path>clearingFromOtherSourceList</lx:path>
        <lx:label>Clearing From Other Source List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="No">
        <xs:annotation>
          <xs:documentation>No part of the existing loan will be paid out using loan funds from a third party institution.</xs:documentation>
          <xs:appinfo>
            <lx:path>clearingFromOtherSourceList.No</lx:path>
            <lx:label>No</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Partial">
        <xs:annotation>
          <xs:documentation>The existing loan will be partially paid out using loan funds being applied for.</xs:documentation>
          <xs:appinfo>
            <lx:path>clearingFromOtherSourceList.Partial</lx:path>
            <lx:label>Partial: The existing loan will be partially paid out using funds from a third party institution.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Yes">
        <xs:annotation>
          <xs:documentation>The existing loan will be completely paid out using loan funds from a third party institution.</xs:documentation>
          <xs:appinfo>
            <lx:path>clearingFromOtherSourceList.Yes</lx:path>
            <lx:label>Yes</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="clearingFromThisLoanList">
    <xs:annotation>
      <xs:documentation>clearingFromThisLoanList</xs:documentation>
      <xs:appinfo>
        <lx:path>clearingFromThisLoanList</lx:path>
        <lx:label>Clearing From This Loan List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="No">
        <xs:annotation>
          <xs:documentation>No part of the existing loan will be paid out using loan funds being applied for.</xs:documentation>
          <xs:appinfo>
            <lx:path>clearingFromThisLoanList.No</lx:path>
            <lx:label>No</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Partial">
        <xs:annotation>
          <xs:documentation>The existing loan will be partially paid out using loan funds being applied for.</xs:documentation>
          <xs:appinfo>
            <lx:path>clearingFromThisLoanList.Partial</lx:path>
            <lx:label>Partial</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Yes">
        <xs:annotation>
          <xs:documentation>The existing loan will be completely paid out using loan funds being applied for.</xs:documentation>
          <xs:appinfo>
            <lx:path>clearingFromThisLoanList.Yes</lx:path>
            <lx:label>Yes</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="contactEmailTypeList">
    <xs:annotation>
      <xs:documentation>contactEmailTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>contactEmailTypeList</lx:path>
        <lx:label>Contact Email Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Home">
        <xs:annotation>
          <xs:documentation>Email address is a home or personal address.</xs:documentation>
          <xs:appinfo>
            <lx:path>contactEmailTypeList.Home</lx:path>
            <lx:label>Home</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Work">
        <xs:annotation>
          <xs:documentation>Email address is a work or business address.</xs:documentation>
          <xs:appinfo>
            <lx:path>contactEmailTypeList.Work</lx:path>
            <lx:label>Work</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="contributionFundsTypeList">
    <xs:annotation>
      <xs:documentation>contributionFundsTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>contributionFundsTypeList</lx:path>
        <lx:label>Contribution Funds Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Cash">
        <xs:annotation>
          <xs:documentation>The source of funds is cash or equivalent, other than genuine savings.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Cash</lx:path>
            <lx:label>Cash</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Existing Equity">
        <xs:annotation>
          <xs:documentation>Existing Equity</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Existing Equity</lx:path>
            <lx:label>Existing Equity</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="First Home Owner Grant">
        <xs:annotation>
          <xs:documentation>The source of funds is a First Home Owners Grant program to assist first home buyers to purchase an O/O home.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.First Home Owner Grant</lx:path>
            <lx:label>First Home Owner Grant</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Genuine Savings">
        <xs:annotation>
          <xs:documentation>The source of funds is savings that have been accumulated over time, with a savings institution or a liquidatable investment.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Genuine Savings</lx:path>
            <lx:label>Genuine Savings</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Gift">
        <xs:annotation>
          <xs:documentation>The source of funds is a gift from a third party.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Gift</lx:path>
            <lx:label>Gift</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Inheritance">
        <xs:annotation>
          <xs:documentation>The funds will be provided from an inheritance that the borrower(s) have the right to use.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Inheritance</lx:path>
            <lx:label>Inheritance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Kainga Ora Grant">
        <xs:annotation>
          <xs:documentation>Kainga Ora Grant</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Kainga Ora Grant</lx:path>
            <lx:label>Kainga Ora Grant</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KiwiSaver">
        <xs:annotation>
          <xs:documentation>The source of funds is a KiwiSaver.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.KiwiSaver</lx:path>
            <lx:label>KiwiSaver</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Net Proceeds from Sale of Property">
        <xs:annotation>
          <xs:documentation>The net proceeds of sale of a property, after payment of all costs associated with the sale including agent's fees.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Net Proceeds from Sale of Property</lx:path>
            <lx:label>Net Proceeds from Sale of Property</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>The source of funds is not described by any of the other enumerated values.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Redraw">
        <xs:annotation>
          <xs:documentation>Redraw</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Redraw</lx:path>
            <lx:label>Redraw</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Sale of Non Real Estate Asset">
        <xs:annotation>
          <xs:documentation>Sale of Non Real Estate Asset</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Sale of Non Real Estate Asset</lx:path>
            <lx:label>Sale of Non Real Estate Asset</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Secured VISA">
        <xs:annotation>
          <xs:documentation>Secured VISA</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Secured VISA</lx:path>
            <lx:label>Secured VISA</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Superannuation">
        <xs:annotation>
          <xs:documentation>The funds will be provided from a superannuation fund.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Superannuation</lx:path>
            <lx:label>Superannuation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Term Deposit">
        <xs:annotation>
          <xs:documentation>The funds will be provided from an existing term deposit.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Term Deposit</lx:path>
            <lx:label>Term Deposit</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unsecured Borrowing">
        <xs:annotation>
          <xs:documentation>The funds will be borrowed from a third party.</xs:documentation>
          <xs:appinfo>
            <lx:path>contributionFundsTypeList.Unsecured Borrowing</lx:path>
            <lx:label>Unsecured Borrowing</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="countryCodeList">
    <xs:annotation>
      <xs:documentation>countryCodeList</xs:documentation>
      <xs:appinfo>
        <lx:path>countryCodeList</lx:path>
        <lx:label>Country Code List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="AD">
        <xs:annotation>
          <xs:documentation>Andorra</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AD</lx:path>
            <lx:label>Andorra</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AE">
        <xs:annotation>
          <xs:documentation>United Arab Emirates</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AE</lx:path>
            <lx:label>United Arab Emirates</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AF">
        <xs:annotation>
          <xs:documentation>Afghanistan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AF</lx:path>
            <lx:label>Afghanistan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AG">
        <xs:annotation>
          <xs:documentation>Antigua and Barbuda</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AG</lx:path>
            <lx:label>Antigua and Barbuda</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AI">
        <xs:annotation>
          <xs:documentation>Anguilla</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AI</lx:path>
            <lx:label>Anguilla</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AL">
        <xs:annotation>
          <xs:documentation>Albania</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AL</lx:path>
            <lx:label>Albania</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AM">
        <xs:annotation>
          <xs:documentation>Armenia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AM</lx:path>
            <lx:label>Armenia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AO">
        <xs:annotation>
          <xs:documentation>Angola</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AO</lx:path>
            <lx:label>Angola</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AQ">
        <xs:annotation>
          <xs:documentation>Antarctica</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AQ</lx:path>
            <lx:label>Antarctica</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AR">
        <xs:annotation>
          <xs:documentation>Argentina</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AR</lx:path>
            <lx:label>Argentina</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AS">
        <xs:annotation>
          <xs:documentation>American Samoa</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AS</lx:path>
            <lx:label>American Samoa</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AT">
        <xs:annotation>
          <xs:documentation>Austria</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AT</lx:path>
            <lx:label>Austria</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AU">
        <xs:annotation>
          <xs:documentation>Australia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AU</lx:path>
            <lx:label>Australia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AW">
        <xs:annotation>
          <xs:documentation>Aruba</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AW</lx:path>
            <lx:label>Aruba</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AX">
        <xs:annotation>
          <xs:documentation>Åland Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AX</lx:path>
            <lx:label>Åland Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AZ">
        <xs:annotation>
          <xs:documentation>Azerbaijan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.AZ</lx:path>
            <lx:label>Azerbaijan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BA">
        <xs:annotation>
          <xs:documentation>Bosnia and Herzegovina</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BA</lx:path>
            <lx:label>Bosnia and Herzegovina</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BB">
        <xs:annotation>
          <xs:documentation>Barbados</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BB</lx:path>
            <lx:label>Barbados</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BD">
        <xs:annotation>
          <xs:documentation>Bangladesh</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BD</lx:path>
            <lx:label>Bangladesh</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BE">
        <xs:annotation>
          <xs:documentation>Belgium</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BE</lx:path>
            <lx:label>Belgium</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BF">
        <xs:annotation>
          <xs:documentation>Burkina Faso</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BF</lx:path>
            <lx:label>Burkina Faso</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BG">
        <xs:annotation>
          <xs:documentation>Bulgaria</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BG</lx:path>
            <lx:label>Bulgaria</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BH">
        <xs:annotation>
          <xs:documentation>Bahrain</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BH</lx:path>
            <lx:label>Bahrain</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BI">
        <xs:annotation>
          <xs:documentation>Burundi</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BI</lx:path>
            <lx:label>Burundi</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BJ">
        <xs:annotation>
          <xs:documentation>Benin</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BJ</lx:path>
            <lx:label>Benin</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BL">
        <xs:annotation>
          <xs:documentation>Saint Barthélemy</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BL</lx:path>
            <lx:label>Saint Barthélemy</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BM">
        <xs:annotation>
          <xs:documentation>Bermuda</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BM</lx:path>
            <lx:label>Bermuda</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BN">
        <xs:annotation>
          <xs:documentation>Brunei Darussalam</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BN</lx:path>
            <lx:label>Brunei Darussalam</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BO">
        <xs:annotation>
          <xs:documentation>Bolivia, Plurinational State of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BO</lx:path>
            <lx:label>Bolivia, Plurinational State of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BQ">
        <xs:annotation>
          <xs:documentation>Bonaire, Sint Eustatius and Saba</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BQ</lx:path>
            <lx:label>Bonaire, Sint Eustatius and Saba</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BR">
        <xs:annotation>
          <xs:documentation>Brazil</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BR</lx:path>
            <lx:label>Brazil</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BS">
        <xs:annotation>
          <xs:documentation>Bahamas</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BS</lx:path>
            <lx:label>Bahamas</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BT">
        <xs:annotation>
          <xs:documentation>Bhutan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BT</lx:path>
            <lx:label>Bhutan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BV">
        <xs:annotation>
          <xs:documentation>Bouvet Island</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BV</lx:path>
            <lx:label>Bouvet Island</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BW">
        <xs:annotation>
          <xs:documentation>Botswana</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BW</lx:path>
            <lx:label>Botswana</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BY">
        <xs:annotation>
          <xs:documentation>Belarus</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BY</lx:path>
            <lx:label>Belarus</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BZ">
        <xs:annotation>
          <xs:documentation>Belize</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.BZ</lx:path>
            <lx:label>Belize</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CA">
        <xs:annotation>
          <xs:documentation>Canada</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CA</lx:path>
            <lx:label>Canada</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CC">
        <xs:annotation>
          <xs:documentation>Cocos (Keeling) Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CC</lx:path>
            <lx:label>Cocos (Keeling) Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CD">
        <xs:annotation>
          <xs:documentation>Congo, the Democratic Republic of the</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CD</lx:path>
            <lx:label>Congo, the Democratic Republic of the</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CF">
        <xs:annotation>
          <xs:documentation>Central African Republic</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CF</lx:path>
            <lx:label>Central African Republic</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CG">
        <xs:annotation>
          <xs:documentation>Congo</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CG</lx:path>
            <lx:label>Congo</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CH">
        <xs:annotation>
          <xs:documentation>Switzerland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CH</lx:path>
            <lx:label>Switzerland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CI">
        <xs:annotation>
          <xs:documentation>Côte d'Ivoire</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CI</lx:path>
            <lx:label>Côte d'Ivoire</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CK">
        <xs:annotation>
          <xs:documentation>Cook Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CK</lx:path>
            <lx:label>Cook Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CL">
        <xs:annotation>
          <xs:documentation>Chile</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CL</lx:path>
            <lx:label>Chile</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CM">
        <xs:annotation>
          <xs:documentation>Cameroon</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CM</lx:path>
            <lx:label>Cameroon</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CN">
        <xs:annotation>
          <xs:documentation>China</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CN</lx:path>
            <lx:label>China</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CO">
        <xs:annotation>
          <xs:documentation>Colombia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CO</lx:path>
            <lx:label>Colombia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CR">
        <xs:annotation>
          <xs:documentation>Costa Rica</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CR</lx:path>
            <lx:label>Costa Rica</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CU">
        <xs:annotation>
          <xs:documentation>Cuba</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CU</lx:path>
            <lx:label>Cuba</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CV">
        <xs:annotation>
          <xs:documentation>Cabo Verde</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CV</lx:path>
            <lx:label>Cabo Verde</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CW">
        <xs:annotation>
          <xs:documentation>Curaçao</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CW</lx:path>
            <lx:label>Curaçao</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CX">
        <xs:annotation>
          <xs:documentation>Christmas Island</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CX</lx:path>
            <lx:label>Christmas Island</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CY">
        <xs:annotation>
          <xs:documentation>Cyprus</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CY</lx:path>
            <lx:label>Cyprus</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CZ">
        <xs:annotation>
          <xs:documentation>Czech Republic</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.CZ</lx:path>
            <lx:label>Czech Republic</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DE">
        <xs:annotation>
          <xs:documentation>Germany</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.DE</lx:path>
            <lx:label>Germany</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DJ">
        <xs:annotation>
          <xs:documentation>Djibouti</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.DJ</lx:path>
            <lx:label>Djibouti</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DK">
        <xs:annotation>
          <xs:documentation>Denmark</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.DK</lx:path>
            <lx:label>Denmark</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DM">
        <xs:annotation>
          <xs:documentation>Dominica</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.DM</lx:path>
            <lx:label>Dominica</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DO">
        <xs:annotation>
          <xs:documentation>Dominican Republic</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.DO</lx:path>
            <lx:label>Dominican Republic</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DZ">
        <xs:annotation>
          <xs:documentation>Algeria</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.DZ</lx:path>
            <lx:label>Algeria</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EC">
        <xs:annotation>
          <xs:documentation>Ecuador</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.EC</lx:path>
            <lx:label>Ecuador</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EE">
        <xs:annotation>
          <xs:documentation>Estonia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.EE</lx:path>
            <lx:label>Estonia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EG">
        <xs:annotation>
          <xs:documentation>Egypt</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.EG</lx:path>
            <lx:label>Egypt</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EH">
        <xs:annotation>
          <xs:documentation>Western Sahara</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.EH</lx:path>
            <lx:label>Western Sahara</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ER">
        <xs:annotation>
          <xs:documentation>Eritrea</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ER</lx:path>
            <lx:label>Eritrea</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ES">
        <xs:annotation>
          <xs:documentation>Spain</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ES</lx:path>
            <lx:label>Spain</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ET">
        <xs:annotation>
          <xs:documentation>Ethiopia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ET</lx:path>
            <lx:label>Ethiopia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FI">
        <xs:annotation>
          <xs:documentation>Finland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.FI</lx:path>
            <lx:label>Finland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FJ">
        <xs:annotation>
          <xs:documentation>Fiji</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.FJ</lx:path>
            <lx:label>Fiji</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FK">
        <xs:annotation>
          <xs:documentation>Falkland Islands (Malvinas)</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.FK</lx:path>
            <lx:label>Falkland Islands (Malvinas)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FM">
        <xs:annotation>
          <xs:documentation>Micronesia, Federated States of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.FM</lx:path>
            <lx:label>Micronesia, Federated States of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FO">
        <xs:annotation>
          <xs:documentation>Faroe Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.FO</lx:path>
            <lx:label>Faroe Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FR">
        <xs:annotation>
          <xs:documentation>France</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.FR</lx:path>
            <lx:label>France</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GA">
        <xs:annotation>
          <xs:documentation>Gabon</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GA</lx:path>
            <lx:label>Gabon</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GB">
        <xs:annotation>
          <xs:documentation>United Kingdom</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GB</lx:path>
            <lx:label>United Kingdom</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GD">
        <xs:annotation>
          <xs:documentation>Grenada</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GD</lx:path>
            <lx:label>Grenada</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GE">
        <xs:annotation>
          <xs:documentation>Georgia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GE</lx:path>
            <lx:label>Georgia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GF">
        <xs:annotation>
          <xs:documentation>French Guiana</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GF</lx:path>
            <lx:label>French Guiana</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GG">
        <xs:annotation>
          <xs:documentation>Guernsey</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GG</lx:path>
            <lx:label>Guernsey</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GH">
        <xs:annotation>
          <xs:documentation>Ghana</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GH</lx:path>
            <lx:label>Ghana</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GI">
        <xs:annotation>
          <xs:documentation>Gibraltar</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GI</lx:path>
            <lx:label>Gibraltar</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GL">
        <xs:annotation>
          <xs:documentation>Greenland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GL</lx:path>
            <lx:label>Greenland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GM">
        <xs:annotation>
          <xs:documentation>Gambia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GM</lx:path>
            <lx:label>Gambia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GN">
        <xs:annotation>
          <xs:documentation>Guinea</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GN</lx:path>
            <lx:label>Guinea</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GP">
        <xs:annotation>
          <xs:documentation>Guadeloupe</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GP</lx:path>
            <lx:label>Guadeloupe</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GQ">
        <xs:annotation>
          <xs:documentation>Equatorial Guinea</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GQ</lx:path>
            <lx:label>Equatorial Guinea</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GR">
        <xs:annotation>
          <xs:documentation>Greece</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GR</lx:path>
            <lx:label>Greece</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GS">
        <xs:annotation>
          <xs:documentation>South Georgia and the South Sandwich Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GS</lx:path>
            <lx:label>South Georgia and the South Sandwich Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GT">
        <xs:annotation>
          <xs:documentation>Guatemala</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GT</lx:path>
            <lx:label>Guatemala</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GU">
        <xs:annotation>
          <xs:documentation>Guam</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GU</lx:path>
            <lx:label>Guam</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GW">
        <xs:annotation>
          <xs:documentation>Guinea-Bissau</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GW</lx:path>
            <lx:label>Guinea-Bissau</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GY">
        <xs:annotation>
          <xs:documentation>Guyana</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.GY</lx:path>
            <lx:label>Guyana</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HK">
        <xs:annotation>
          <xs:documentation>Hong Kong</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.HK</lx:path>
            <lx:label>Hong Kong</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HM">
        <xs:annotation>
          <xs:documentation>Heard Island and McDonald Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.HM</lx:path>
            <lx:label>Heard Island and McDonald Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HN">
        <xs:annotation>
          <xs:documentation>Honduras</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.HN</lx:path>
            <lx:label>Honduras</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HR">
        <xs:annotation>
          <xs:documentation>Croatia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.HR</lx:path>
            <lx:label>Croatia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HT">
        <xs:annotation>
          <xs:documentation>Haiti</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.HT</lx:path>
            <lx:label>Haiti</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HU">
        <xs:annotation>
          <xs:documentation>Hungary</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.HU</lx:path>
            <lx:label>Hungary</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ID">
        <xs:annotation>
          <xs:documentation>Indonesia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ID</lx:path>
            <lx:label>Indonesia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IE">
        <xs:annotation>
          <xs:documentation>Ireland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IE</lx:path>
            <lx:label>Ireland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IL">
        <xs:annotation>
          <xs:documentation>Israel</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IL</lx:path>
            <lx:label>Israel</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IM">
        <xs:annotation>
          <xs:documentation>Isle of Man</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IM</lx:path>
            <lx:label>Isle of Man</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IN">
        <xs:annotation>
          <xs:documentation>India</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IN</lx:path>
            <lx:label>India</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IO">
        <xs:annotation>
          <xs:documentation>British Indian Ocean Territory</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IO</lx:path>
            <lx:label>British Indian Ocean Territory</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IQ">
        <xs:annotation>
          <xs:documentation>Iraq</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IQ</lx:path>
            <lx:label>Iraq</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IR">
        <xs:annotation>
          <xs:documentation>Iran, Islamic Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IR</lx:path>
            <lx:label>Iran, Islamic Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IS">
        <xs:annotation>
          <xs:documentation>Iceland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IS</lx:path>
            <lx:label>Iceland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IT">
        <xs:annotation>
          <xs:documentation>Italy</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.IT</lx:path>
            <lx:label>Italy</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JE">
        <xs:annotation>
          <xs:documentation>Jersey</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.JE</lx:path>
            <lx:label>Jersey</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JM">
        <xs:annotation>
          <xs:documentation>Jamaica</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.JM</lx:path>
            <lx:label>Jamaica</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JO">
        <xs:annotation>
          <xs:documentation>Jordan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.JO</lx:path>
            <lx:label>Jordan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JP">
        <xs:annotation>
          <xs:documentation>Japan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.JP</lx:path>
            <lx:label>Japan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KE">
        <xs:annotation>
          <xs:documentation>Kenya</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KE</lx:path>
            <lx:label>Kenya</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KG">
        <xs:annotation>
          <xs:documentation>Kyrgyzstan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KG</lx:path>
            <lx:label>Kyrgyzstan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KH">
        <xs:annotation>
          <xs:documentation>Cambodia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KH</lx:path>
            <lx:label>Cambodia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KI">
        <xs:annotation>
          <xs:documentation>Kiribati</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KI</lx:path>
            <lx:label>Kiribati</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KM">
        <xs:annotation>
          <xs:documentation>Comoros</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KM</lx:path>
            <lx:label>Comoros</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KN">
        <xs:annotation>
          <xs:documentation>Saint Kitts and Nevis</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KN</lx:path>
            <lx:label>Saint Kitts and Nevis</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KP">
        <xs:annotation>
          <xs:documentation>Korea, Democratic People's Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KP</lx:path>
            <lx:label>Korea, Democratic People's Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KR">
        <xs:annotation>
          <xs:documentation>Korea, Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KR</lx:path>
            <lx:label>Korea, Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KW">
        <xs:annotation>
          <xs:documentation>Kuwait</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KW</lx:path>
            <lx:label>Kuwait</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KY">
        <xs:annotation>
          <xs:documentation>Cayman Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KY</lx:path>
            <lx:label>Cayman Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KZ">
        <xs:annotation>
          <xs:documentation>Kazakhstan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.KZ</lx:path>
            <lx:label>Kazakhstan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LA">
        <xs:annotation>
          <xs:documentation>Lao People's Democratic Republic</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LA</lx:path>
            <lx:label>Lao People's Democratic Republic</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LB">
        <xs:annotation>
          <xs:documentation>Lebanon</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LB</lx:path>
            <lx:label>Lebanon</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LC">
        <xs:annotation>
          <xs:documentation>Saint Lucia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LC</lx:path>
            <lx:label>Saint Lucia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LI">
        <xs:annotation>
          <xs:documentation>Liechtenstein</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LI</lx:path>
            <lx:label>Liechtenstein</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LK">
        <xs:annotation>
          <xs:documentation>Sri Lanka</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LK</lx:path>
            <lx:label>Sri Lanka</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LR">
        <xs:annotation>
          <xs:documentation>Liberia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LR</lx:path>
            <lx:label>Liberia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LS">
        <xs:annotation>
          <xs:documentation>Lesotho</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LS</lx:path>
            <lx:label>Lesotho</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LT">
        <xs:annotation>
          <xs:documentation>Lithuania</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LT</lx:path>
            <lx:label>Lithuania</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LU">
        <xs:annotation>
          <xs:documentation>Luxembourg</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LU</lx:path>
            <lx:label>Luxembourg</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LV">
        <xs:annotation>
          <xs:documentation>Latvia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LV</lx:path>
            <lx:label>Latvia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LY">
        <xs:annotation>
          <xs:documentation>Libya</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.LY</lx:path>
            <lx:label>Libya</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MA">
        <xs:annotation>
          <xs:documentation>Morocco</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MA</lx:path>
            <lx:label>Morocco</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MC">
        <xs:annotation>
          <xs:documentation>Monaco</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MC</lx:path>
            <lx:label>Monaco</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MD">
        <xs:annotation>
          <xs:documentation>Moldova, Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MD</lx:path>
            <lx:label>Moldova, Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ME">
        <xs:annotation>
          <xs:documentation>Montenegro</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ME</lx:path>
            <lx:label>Montenegro</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MF">
        <xs:annotation>
          <xs:documentation>Saint Martin (French part)</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MF</lx:path>
            <lx:label>Saint Martin (French part)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MG">
        <xs:annotation>
          <xs:documentation>Madagascar</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MG</lx:path>
            <lx:label>Madagascar</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MH">
        <xs:annotation>
          <xs:documentation>Marshall Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MH</lx:path>
            <lx:label>Marshall Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MK">
        <xs:annotation>
          <xs:documentation>Macedonia, the former Yugoslav Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MK</lx:path>
            <lx:label>Macedonia, the former Yugoslav Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ML">
        <xs:annotation>
          <xs:documentation>Mali</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ML</lx:path>
            <lx:label>Mali</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MM">
        <xs:annotation>
          <xs:documentation>Myanmar</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MM</lx:path>
            <lx:label>Myanmar</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MN">
        <xs:annotation>
          <xs:documentation>Mongolia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MN</lx:path>
            <lx:label>Mongolia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MO">
        <xs:annotation>
          <xs:documentation>Macao</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MO</lx:path>
            <lx:label>Macao</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MP">
        <xs:annotation>
          <xs:documentation>Northern Mariana Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MP</lx:path>
            <lx:label>Northern Mariana Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MQ">
        <xs:annotation>
          <xs:documentation>Martinique</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MQ</lx:path>
            <lx:label>Martinique</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MR">
        <xs:annotation>
          <xs:documentation>Mauritania</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MR</lx:path>
            <lx:label>Mauritania</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MS">
        <xs:annotation>
          <xs:documentation>Montserrat</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MS</lx:path>
            <lx:label>Montserrat</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MT">
        <xs:annotation>
          <xs:documentation>Malta</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MT</lx:path>
            <lx:label>Malta</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MU">
        <xs:annotation>
          <xs:documentation>Mauritius</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MU</lx:path>
            <lx:label>Mauritius</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MV">
        <xs:annotation>
          <xs:documentation>Maldives</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MV</lx:path>
            <lx:label>Maldives</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MW">
        <xs:annotation>
          <xs:documentation>Malawi</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MW</lx:path>
            <lx:label>Malawi</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MX">
        <xs:annotation>
          <xs:documentation>Mexico</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MX</lx:path>
            <lx:label>Mexico</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MY">
        <xs:annotation>
          <xs:documentation>Malaysia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MY</lx:path>
            <lx:label>Malaysia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MZ">
        <xs:annotation>
          <xs:documentation>Mozambique</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.MZ</lx:path>
            <lx:label>Mozambique</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NA">
        <xs:annotation>
          <xs:documentation>Namibia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NA</lx:path>
            <lx:label>Namibia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NC">
        <xs:annotation>
          <xs:documentation>New Caledonia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NC</lx:path>
            <lx:label>New Caledonia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NE">
        <xs:annotation>
          <xs:documentation>Niger</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NE</lx:path>
            <lx:label>Niger</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NF">
        <xs:annotation>
          <xs:documentation>Norfolk Island</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NF</lx:path>
            <lx:label>Norfolk Island</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NG">
        <xs:annotation>
          <xs:documentation>Nigeria</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NG</lx:path>
            <lx:label>Nigeria</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NI">
        <xs:annotation>
          <xs:documentation>Nicaragua</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NI</lx:path>
            <lx:label>Nicaragua</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NL">
        <xs:annotation>
          <xs:documentation>Netherlands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NL</lx:path>
            <lx:label>Netherlands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NO">
        <xs:annotation>
          <xs:documentation>Norway</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NO</lx:path>
            <lx:label>Norway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NP">
        <xs:annotation>
          <xs:documentation>Nepal</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NP</lx:path>
            <lx:label>Nepal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NR">
        <xs:annotation>
          <xs:documentation>Nauru</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NR</lx:path>
            <lx:label>Nauru</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NU">
        <xs:annotation>
          <xs:documentation>Niue</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NU</lx:path>
            <lx:label>Niue</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NZ">
        <xs:annotation>
          <xs:documentation>New Zealand</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.NZ</lx:path>
            <lx:label>New Zealand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="OM">
        <xs:annotation>
          <xs:documentation>Oman</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.OM</lx:path>
            <lx:label>Oman</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PA">
        <xs:annotation>
          <xs:documentation>Panama</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PA</lx:path>
            <lx:label>Panama</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PE">
        <xs:annotation>
          <xs:documentation>Peru</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PE</lx:path>
            <lx:label>Peru</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PF">
        <xs:annotation>
          <xs:documentation>French Polynesia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PF</lx:path>
            <lx:label>French Polynesia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PG">
        <xs:annotation>
          <xs:documentation>Papua New Guinea</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PG</lx:path>
            <lx:label>Papua New Guinea</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PH">
        <xs:annotation>
          <xs:documentation>Philippines</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PH</lx:path>
            <lx:label>Philippines</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PK">
        <xs:annotation>
          <xs:documentation>Pakistan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PK</lx:path>
            <lx:label>Pakistan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PL">
        <xs:annotation>
          <xs:documentation>Poland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PL</lx:path>
            <lx:label>Poland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PM">
        <xs:annotation>
          <xs:documentation>Saint Pierre and Miquelon</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PM</lx:path>
            <lx:label>Saint Pierre and Miquelon</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PN">
        <xs:annotation>
          <xs:documentation>Pitcairn</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PN</lx:path>
            <lx:label>Pitcairn</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PR">
        <xs:annotation>
          <xs:documentation>Puerto Rico</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PR</lx:path>
            <lx:label>Puerto Rico</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PS">
        <xs:annotation>
          <xs:documentation>Palestine, State of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PS</lx:path>
            <lx:label>Palestine, State of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PT">
        <xs:annotation>
          <xs:documentation>Portugal</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PT</lx:path>
            <lx:label>Portugal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PW">
        <xs:annotation>
          <xs:documentation>Palau</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PW</lx:path>
            <lx:label>Palau</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PY">
        <xs:annotation>
          <xs:documentation>Paraguay</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.PY</lx:path>
            <lx:label>Paraguay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="QA">
        <xs:annotation>
          <xs:documentation>Qatar</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.QA</lx:path>
            <lx:label>Qatar</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RE">
        <xs:annotation>
          <xs:documentation>Réunion</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.RE</lx:path>
            <lx:label>Réunion</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RO">
        <xs:annotation>
          <xs:documentation>Romania</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.RO</lx:path>
            <lx:label>Romania</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RS">
        <xs:annotation>
          <xs:documentation>Serbia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.RS</lx:path>
            <lx:label>Serbia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RU">
        <xs:annotation>
          <xs:documentation>Russian Federation</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.RU</lx:path>
            <lx:label>Russian Federation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RW">
        <xs:annotation>
          <xs:documentation>Rwanda</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.RW</lx:path>
            <lx:label>Rwanda</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SA">
        <xs:annotation>
          <xs:documentation>Saudi Arabia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SA</lx:path>
            <lx:label>Saudi Arabia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SB">
        <xs:annotation>
          <xs:documentation>Solomon Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SB</lx:path>
            <lx:label>Solomon Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SC">
        <xs:annotation>
          <xs:documentation>Seychelles</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SC</lx:path>
            <lx:label>Seychelles</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SD">
        <xs:annotation>
          <xs:documentation>Sudan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SD</lx:path>
            <lx:label>Sudan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SE">
        <xs:annotation>
          <xs:documentation>Sweden</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SE</lx:path>
            <lx:label>Sweden</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SG">
        <xs:annotation>
          <xs:documentation>Singapore</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SG</lx:path>
            <lx:label>Singapore</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SH">
        <xs:annotation>
          <xs:documentation>Saint Helena, Ascension and Tristan da Cunha</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SH</lx:path>
            <lx:label>Saint Helena, Ascension and Tristan da Cunha</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SI">
        <xs:annotation>
          <xs:documentation>Slovenia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SI</lx:path>
            <lx:label>Slovenia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SJ">
        <xs:annotation>
          <xs:documentation>Svalbard and Jan Mayen</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SJ</lx:path>
            <lx:label>Svalbard and Jan Mayen</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SK">
        <xs:annotation>
          <xs:documentation>Slovakia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SK</lx:path>
            <lx:label>Slovakia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SL">
        <xs:annotation>
          <xs:documentation>Sierra Leone</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SL</lx:path>
            <lx:label>Sierra Leone</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SM">
        <xs:annotation>
          <xs:documentation>San Marino</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SM</lx:path>
            <lx:label>San Marino</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SN">
        <xs:annotation>
          <xs:documentation>Senegal</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SN</lx:path>
            <lx:label>Senegal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SO">
        <xs:annotation>
          <xs:documentation>Somalia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SO</lx:path>
            <lx:label>Somalia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SR">
        <xs:annotation>
          <xs:documentation>Suriname</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SR</lx:path>
            <lx:label>Suriname</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SS">
        <xs:annotation>
          <xs:documentation>South Sudan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SS</lx:path>
            <lx:label>South Sudan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ST">
        <xs:annotation>
          <xs:documentation>Sao Tome and Principe</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ST</lx:path>
            <lx:label>Sao Tome and Principe</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SV">
        <xs:annotation>
          <xs:documentation>El Salvador</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SV</lx:path>
            <lx:label>El Salvador</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SX">
        <xs:annotation>
          <xs:documentation>Sint Maarten (Dutch part)</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SX</lx:path>
            <lx:label>Sint Maarten (Dutch part)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SY">
        <xs:annotation>
          <xs:documentation>Syrian Arab Republic</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SY</lx:path>
            <lx:label>Syrian Arab Republic</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SZ">
        <xs:annotation>
          <xs:documentation>Swaziland</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.SZ</lx:path>
            <lx:label>Swaziland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TC">
        <xs:annotation>
          <xs:documentation>Turks and Caicos Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TC</lx:path>
            <lx:label>Turks and Caicos Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TD">
        <xs:annotation>
          <xs:documentation>Chad</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TD</lx:path>
            <lx:label>Chad</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TF">
        <xs:annotation>
          <xs:documentation>French Southern Territories</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TF</lx:path>
            <lx:label>French Southern Territories</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TG">
        <xs:annotation>
          <xs:documentation>Togo</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TG</lx:path>
            <lx:label>Togo</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TH">
        <xs:annotation>
          <xs:documentation>Thailand</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TH</lx:path>
            <lx:label>Thailand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TJ">
        <xs:annotation>
          <xs:documentation>Tajikistan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TJ</lx:path>
            <lx:label>Tajikistan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TK">
        <xs:annotation>
          <xs:documentation>Tokelau</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TK</lx:path>
            <lx:label>Tokelau</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TL">
        <xs:annotation>
          <xs:documentation>Timor-Leste</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TL</lx:path>
            <lx:label>Timor-Leste</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TM">
        <xs:annotation>
          <xs:documentation>Turkmenistan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TM</lx:path>
            <lx:label>Turkmenistan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TN">
        <xs:annotation>
          <xs:documentation>Tunisia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TN</lx:path>
            <lx:label>Tunisia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TO">
        <xs:annotation>
          <xs:documentation>Tonga</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TO</lx:path>
            <lx:label>Tonga</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TR">
        <xs:annotation>
          <xs:documentation>Turkey</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TR</lx:path>
            <lx:label>Turkey</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TT">
        <xs:annotation>
          <xs:documentation>Trinidad and Tobago</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TT</lx:path>
            <lx:label>Trinidad and Tobago</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TV">
        <xs:annotation>
          <xs:documentation>Tuvalu</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TV</lx:path>
            <lx:label>Tuvalu</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TW">
        <xs:annotation>
          <xs:documentation>Taiwan, Province of China</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TW</lx:path>
            <lx:label>Taiwan, Province of China</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TZ">
        <xs:annotation>
          <xs:documentation>Tanzania, United Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.TZ</lx:path>
            <lx:label>Tanzania, United Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UA">
        <xs:annotation>
          <xs:documentation>Ukraine</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.UA</lx:path>
            <lx:label>Ukraine</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UG">
        <xs:annotation>
          <xs:documentation>Uganda</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.UG</lx:path>
            <lx:label>Uganda</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UM">
        <xs:annotation>
          <xs:documentation>United States Minor Outlying Islands</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.UM</lx:path>
            <lx:label>United States Minor Outlying Islands</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="US">
        <xs:annotation>
          <xs:documentation>United States</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.US</lx:path>
            <lx:label>United States</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UY">
        <xs:annotation>
          <xs:documentation>Uruguay</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.UY</lx:path>
            <lx:label>Uruguay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UZ">
        <xs:annotation>
          <xs:documentation>Uzbekistan</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.UZ</lx:path>
            <lx:label>Uzbekistan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VA">
        <xs:annotation>
          <xs:documentation>Holy See (Vatican City State)</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VA</lx:path>
            <lx:label>Holy See (Vatican City State)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VC">
        <xs:annotation>
          <xs:documentation>Saint Vincent and the Grenadines</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VC</lx:path>
            <lx:label>Saint Vincent and the Grenadines</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VE">
        <xs:annotation>
          <xs:documentation>Venezuela, Bolivarian Republic of</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VE</lx:path>
            <lx:label>Venezuela, Bolivarian Republic of</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VG">
        <xs:annotation>
          <xs:documentation>Virgin Islands, British</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VG</lx:path>
            <lx:label>Virgin Islands, British</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VI">
        <xs:annotation>
          <xs:documentation>Virgin Islands, U.S.</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VI</lx:path>
            <lx:label>Virgin Islands, U.S.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VN">
        <xs:annotation>
          <xs:documentation>Viet Nam</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VN</lx:path>
            <lx:label>Viet Nam</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VU">
        <xs:annotation>
          <xs:documentation>Vanuatu</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.VU</lx:path>
            <lx:label>Vanuatu</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WF">
        <xs:annotation>
          <xs:documentation>Wallis and Futuna</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.WF</lx:path>
            <lx:label>Wallis and Futuna</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WS">
        <xs:annotation>
          <xs:documentation>Samoa</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.WS</lx:path>
            <lx:label>Samoa</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="XK">
        <xs:annotation>
          <xs:documentation>Kosovo</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.XK</lx:path>
            <lx:label>XK</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YE">
        <xs:annotation>
          <xs:documentation>Yemen</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.YE</lx:path>
            <lx:label>Yemen</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YT">
        <xs:annotation>
          <xs:documentation>Mayotte</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.YT</lx:path>
            <lx:label>Mayotte</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZA">
        <xs:annotation>
          <xs:documentation>South Africa</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ZA</lx:path>
            <lx:label>South Africa</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZM">
        <xs:annotation>
          <xs:documentation>Zambia</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ZM</lx:path>
            <lx:label>Zambia</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZW">
        <xs:annotation>
          <xs:documentation>Zimbabwe</xs:documentation>
          <xs:appinfo>
            <lx:path>countryCodeList.ZW</lx:path>
            <lx:label>Zimbabwe</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="documentTypeList">
    <xs:annotation>
      <xs:documentation>A list of valid document types that can be used to support the verification of a person's identity.</xs:documentation>
      <xs:appinfo>
        <lx:path>documentTypeList</lx:path>
        <lx:label>Document Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="18+ Card">
        <xs:annotation>
          <xs:documentation>18+ Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.18+ Card</lx:path>
            <lx:label>18+ Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank Statement">
        <xs:annotation>
          <xs:documentation>Bank Statement</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Bank Statement</lx:path>
            <lx:label>Bank Statement</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Credit Card">
        <xs:annotation>
          <xs:documentation>Credit Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Credit Card</lx:path>
            <lx:label>Credit Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Debit Card">
        <xs:annotation>
          <xs:documentation>Debit Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Debit Card</lx:path>
            <lx:label>Debit Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Deed Poll">
        <xs:annotation>
          <xs:documentation>Deed Poll</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Deed Poll</lx:path>
            <lx:label>Deed Poll</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Descent Certificate">
        <xs:annotation>
          <xs:documentation>A Certificate of Registration by Descent is issued by the Government of Australia or New Zealand to a person who was born outside the country and at least one of their parents was an Australian or New Zealand citizen at the time of their birth.</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Descent Certificate</lx:path>
            <lx:label>Descent Certificate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Electricity Bill">
        <xs:annotation>
          <xs:documentation>Electricity Bill</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Electricity Bill</lx:path>
            <lx:label>Electricity Bill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Emergency Travel Document">
        <xs:annotation>
          <xs:documentation>Emergency Travel Document</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Emergency Travel Document</lx:path>
            <lx:label>Emergency Travel Document</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Foreign Birth Certificate">
        <xs:annotation>
          <xs:documentation>Foreign Birth Certificate</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Foreign Birth Certificate</lx:path>
            <lx:label>Foreign Birth Certificate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Foreign Citizenship Certificate">
        <xs:annotation>
          <xs:documentation>Foreign Citizenship Certificate</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Foreign Citizenship Certificate</lx:path>
            <lx:label>Foreign Citizenship Certificate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Gas Bill">
        <xs:annotation>
          <xs:documentation>Gas Bill</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Gas Bill</lx:path>
            <lx:label>Gas Bill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Government Benefits Notice">
        <xs:annotation>
          <xs:documentation>Government Benefits Notice</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Government Benefits Notice</lx:path>
            <lx:label>Government Benefits Notice</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Health Care Card">
        <xs:annotation>
          <xs:documentation>Health Care Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Health Care Card</lx:path>
            <lx:label>Health Care Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="International Driver License">
        <xs:annotation>
          <xs:documentation>International Driver License</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.International Driver License</lx:path>
            <lx:label>International Driver License</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="International Passport">
        <xs:annotation>
          <xs:documentation>International Passport</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.International Passport</lx:path>
            <lx:label>International Passport</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Internet Service Provider Bill">
        <xs:annotation>
          <xs:documentation>Internet Service Provider Bill</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Internet Service Provider Bill</lx:path>
            <lx:label>Internet Service Provider Bill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Landline Phone Bill">
        <xs:annotation>
          <xs:documentation>Landline Phone Bill</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Landline Phone Bill</lx:path>
            <lx:label>Landline Phone Bill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Marriage Certificate">
        <xs:annotation>
          <xs:documentation>Marriage Certificate</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Marriage Certificate</lx:path>
            <lx:label>Marriage Certificate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Medicare Card">
        <xs:annotation>
          <xs:documentation>Medicare Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Medicare Card</lx:path>
            <lx:label>Medicare Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="National Identity Card">
        <xs:annotation>
          <xs:documentation>National Identity Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.National Identity Card</lx:path>
            <lx:label>National Identity Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Birth Certificate">
        <xs:annotation>
          <xs:documentation>New Zealand Birth Certificate</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Birth Certificate</lx:path>
            <lx:label>New Zealand Birth Certificate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Certificate of Identity">
        <xs:annotation>
          <xs:documentation>New Zealand Certificate of Identity</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Certificate of Identity</lx:path>
            <lx:label>New Zealand Certificate of Identity</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Citizenship Certificate">
        <xs:annotation>
          <xs:documentation>New Zealand Citizenship Certificate</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Citizenship Certificate</lx:path>
            <lx:label>New Zealand Citizenship Certificate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Driver Licence">
        <xs:annotation>
          <xs:documentation>New Zealand Driver Licence</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Driver Licence</lx:path>
            <lx:label>New Zealand Driver Licence</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Firearms Licence">
        <xs:annotation>
          <xs:documentation>New Zealand Firearms Licence</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Firearms Licence</lx:path>
            <lx:label>New Zealand Firearms Licence</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Passport">
        <xs:annotation>
          <xs:documentation>New Zealand Passport</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Passport</lx:path>
            <lx:label>New Zealand Passport</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Zealand Refugee Travel Document">
        <xs:annotation>
          <xs:documentation>New Zealand Refugee Travel Document</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.New Zealand Refugee Travel Document</lx:path>
            <lx:label>New Zealand Refugee Travel Document</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Other</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Pension Card">
        <xs:annotation>
          <xs:documentation>Pension Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Pension Card</lx:path>
            <lx:label>Pension Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Proof of Age Card">
        <xs:annotation>
          <xs:documentation>Proof of Age Card</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Proof of Age Card</lx:path>
            <lx:label>Proof of Age Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rates Notice">
        <xs:annotation>
          <xs:documentation>Rates Notice</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Rates Notice</lx:path>
            <lx:label>Rates Notice</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Tax Assessment">
        <xs:annotation>
          <xs:documentation>Tax Assessment</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Tax Assessment</lx:path>
            <lx:label>Tax Assessment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Visa">
        <xs:annotation>
          <xs:documentation>An official government document providing evidence of the applicant's visa. Document types accepted include, but are not limited to, a visa grant notice, electronic visa record, or passport visa stamp.</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Visa</lx:path>
            <lx:label>Visa</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Water Utility Bill">
        <xs:annotation>
          <xs:documentation>Water Utility Bill</xs:documentation>
          <xs:appinfo>
            <lx:path>documentTypeList.Water Utility Bill</lx:path>
            <lx:label>Water Utility Bill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="durationUnitsList">
    <xs:annotation>
      <xs:documentation>durationUnitsList</xs:documentation>
      <xs:appinfo>
        <lx:path>durationUnitsList</lx:path>
        <lx:label>Duration Units List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Days">
        <xs:annotation>
          <xs:documentation>Days</xs:documentation>
          <xs:appinfo>
            <lx:path>durationUnitsList.Days</lx:path>
            <lx:label>Days</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Months">
        <xs:annotation>
          <xs:documentation>Months</xs:documentation>
          <xs:appinfo>
            <lx:path>durationUnitsList.Months</lx:path>
            <lx:label>Months</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Weeks">
        <xs:annotation>
          <xs:documentation>Weeks</xs:documentation>
          <xs:appinfo>
            <lx:path>durationUnitsList.Weeks</lx:path>
            <lx:label>Weeks</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Years">
        <xs:annotation>
          <xs:documentation>Years</xs:documentation>
          <xs:appinfo>
            <lx:path>durationUnitsList.Years</lx:path>
            <lx:label>Years</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="estimateBasisNonRealEstateAssetList">
    <xs:annotation>
      <xs:documentation>estimateBasisNonRealEstateAssetList</xs:documentation>
      <xs:appinfo>
        <lx:path>estimateBasisNonRealEstateAssetList</lx:path>
        <lx:label>Estimate Basis Non Real Estate Asset List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Applicant Estimate">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is the applicant's estimate of the value.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisNonRealEstateAssetList.Applicant Estimate</lx:path>
            <lx:label>Applicant Estimate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Certified Valuation">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is a certified valuation provided by a valuer.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisNonRealEstateAssetList.Certified Valuation</lx:path>
            <lx:label>Certified Valuation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Contract of Sale">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is provided by Contract of Sale.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisNonRealEstateAssetList.Contract of Sale</lx:path>
            <lx:label>Contract of Sale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Price Guide">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is a price guide provided by a third party service.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisNonRealEstateAssetList.Price Guide</lx:path>
            <lx:label>Price Guide</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="estimateBasisRealEstateAssetList">
    <xs:annotation>
      <xs:documentation>estimateBasisRealEstateAssetList</xs:documentation>
      <xs:appinfo>
        <lx:path>estimateBasisRealEstateAssetList</lx:path>
        <lx:label>Estimate Basis Real Estate Asset List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Applicant Estimate">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is the applicant's estimate of the value.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Applicant Estimate</lx:path>
            <lx:label>Applicant Estimate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank Assessment">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is the bank's assessment of the value.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Bank Assessment</lx:path>
            <lx:label>Bank Assessment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Certified Valuation">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is a certified valuation provided by a valuer.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Certified Valuation</lx:path>
            <lx:label>Certified Valuation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Contract of Sale">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is provided by Contract of Sale.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Contract of Sale</lx:path>
            <lx:label>Contract of Sale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Electronic Valuation">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value was calculated electronically.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Electronic Valuation</lx:path>
            <lx:label>Electronic Valuation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rates Notice">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value was taken from the rates notice.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Rates Notice</lx:path>
            <lx:label>Rates Notice</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RP Data">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is provided by RP Data property search service.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.RP Data</lx:path>
            <lx:label>RP Data</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Valocity">
        <xs:annotation>
          <xs:documentation>The value specified as the estimated value is provided by Valocity property search service.</xs:documentation>
          <xs:appinfo>
            <lx:path>estimateBasisRealEstateAssetList.Valocity</lx:path>
            <lx:label>Valocity</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="feeTypeList">
    <xs:annotation>
      <xs:documentation>feeTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>feeTypeList</lx:path>
        <lx:label>Fee Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Acceptance Fee">
        <xs:annotation>
          <xs:documentation>A fee charged by the bank for taking the legal obligation of paying a commercial bill on its maturity date. Generally used when taking over a commercial bill.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Acceptance Fee</lx:path>
            <lx:label>Acceptance Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Additional Security Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for adding one or more additional securities after loan settlement.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Additional Security Fee</lx:path>
            <lx:label>Additional Security Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Annual Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for administration and maintenance of credit facilities, usually for revolving credit loans or credit cards.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Annual Fee</lx:path>
            <lx:label>Annual Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Application Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for processing and assessment of the application for the loan.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Application Fee</lx:path>
            <lx:label>Application Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Brokerage Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when a broker has assisted borrowers in finding and obtaining approval for a loan. This fee may be charged to the buyer, seller or both.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Brokerage Fee</lx:path>
            <lx:label>Brokerage Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Cash Benefit Insurance">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out Cash Benefit Insurance. Cash benefit insurance is related to personal loan products (in particular car loans), and covers the owner if their car is written off/destroyed for any costs of replacing the vehicle (above and beyond the payout they would receive from full comprehensive coverage).</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Cash Benefit Insurance</lx:path>
            <lx:label>Cash Benefit Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Construction Progress Inspection Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged each time a property valuer inspects building works during the course of a property being built in order to ensure that building is in accordance with the plans and expectations.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Construction Progress Inspection Fee</lx:path>
            <lx:label>Construction Progress Inspection Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Consumer Credit Insurance">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out Consumer Credit Insurance (CCI). CCI is an optional insurance policy that protects borrowers against changes in circumstances that negatively affect their ability to pay back the loan such as death, injury or illness and involuntary unemployment. The premium can generally be added to the loan as a lump sum or can be paid monthly.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Consumer Credit Insurance</lx:path>
            <lx:label>Consumer Credit Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Documentation Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for preparation of loan documents. The amount varies based on the complexity of the loan application.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Documentation Fee</lx:path>
            <lx:label>Documentation Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Early Repayment Admin Fee">
        <xs:annotation>
          <xs:documentation>Fee charged when customer repays the loan earlier than the end of the loan term.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Early Repayment Admin Fee</lx:path>
            <lx:label>Early Repayment Admin Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Establishment Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for the establishment of the loan facility. For some financial institutions, this is a general term used for fees that one may incur for the bank to set up a loan which may include Application Fee, Settlement Fee, etc. For some financial institutions, this is the same as an Application Fee.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Establishment Fee</lx:path>
            <lx:label>Establishment Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Extended Warranty Insurance">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out Extended Warranty Insurance. This insurance (also called mechanical breakdown insurance or motor breakdown insurance (MBI)) commences after your new car warranty ends and provides some cover for the repair or replacement of specific parts.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Extended Warranty Insurance</lx:path>
            <lx:label>Extended Warranty Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Guarantee Asset Protection Insurance">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out Guaranteed Asset Protection (GAP) Insurance. GAP insurance (also called motor equity insurance or shortfall insurance) covers the lender for the difference between what a borrower owes on the car loan, and what the car is insured for under comprehensive car insurance, if the car is written off.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Guarantee Asset Protection Insurance</lx:path>
            <lx:label>Guarantee Asset Protection Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Inspection Fee">
        <xs:annotation>
          <xs:documentation>A fee charged for the inspection of an asset. An inspection usually occurs to confirm the location of the asset, determine the condition of the asset, and confirm the asset documents match with the physical asset.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Inspection Fee</lx:path>
            <lx:label>Inspection Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Land Titles Office Final Search Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when a final search of the title is ordered to ensure that the property is clear from any interest or restrictions that may have been recorded prior to settlement.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Land Titles Office Final Search Fee</lx:path>
            <lx:label>Land Titles Office Final Search Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Land Titles Office Search Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when title search is ordered to ascertain the ownership of a property and determine whether there are existing encumbrances, covenants or easements that may be recorded on the title.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Land Titles Office Search Fee</lx:path>
            <lx:label>Land Titles Office Search Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Legal Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged to cover legal fees incurred by the lender in arranging the loan.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Legal Fee</lx:path>
            <lx:label>Legal Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Line Fee">
        <xs:annotation>
          <xs:documentation>A fee charged by the bank to keep the credit available for the applicants to use, whether it is a commercial loan, term loan or a credit facility.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Line Fee</lx:path>
            <lx:label>Line Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LMI">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out Lenders Mortgage Insurance. Lenders Mortgage Insurance is charged by home loan lenders, typically required when the amount to be borrowed is more than 80% of the value of the property. It is either a one-off payment at the time of settlement or can be added to the monthly loan repayments.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.LMI</lx:path>
            <lx:label>LMI</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Loan Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for the on-going cost of administration and servicing for the loan. Usually on a monthly basis.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Loan Fee</lx:path>
            <lx:label>Loan Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mortgage Registration">
        <xs:annotation>
          <xs:documentation>Fee is charged by the Title Office to register the lender's mortgage on the title for a security.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Mortgage Registration</lx:path>
            <lx:label>Mortgage Registration</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Motor Vehicle Insurance">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out motor vehicle insurance. Motor vehicle insurance is a type of insurance that provides financial protection against physical damage or bodily injury resulting from traffic collisions and against liability that could also arise from incidents in a vehicle.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Motor Vehicle Insurance</lx:path>
            <lx:label>Motor Vehicle Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Fee charged is not described by one of the enumerated values in the list.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Package Fee">
        <xs:annotation>
          <xs:documentation>A fee charged for packaging a number of products together.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Package Fee</lx:path>
            <lx:label>Package Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PPSR Fee">
        <xs:annotation>
          <xs:documentation>A fee associated with registering a non-real estate asset on the Personal Property Securities Register (PPSR) when it is used as security on a loan.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.PPSR Fee</lx:path>
            <lx:label>PPSR Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Progress Fee">
        <xs:annotation>
          <xs:documentation>A fee that is charged at the time funds are advanced to the borrower after the completion of a predefined stage of construction.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Progress Fee</lx:path>
            <lx:label>Progress Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rate Lock Fee">
        <xs:annotation>
          <xs:documentation>A fee charged for fixing an interest rate prior to the advancement of funds under the credit facility.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Rate Lock Fee</lx:path>
            <lx:label>Rate Lock Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Re-documentation Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when documents such as Loan Agreement or Variation Contract are re-issued prior to settlement due to change requested by either customer or introducer.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Re-documentation Fee</lx:path>
            <lx:label>Re-documentation Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Reduced Equity Fee">
        <xs:annotation>
          <xs:documentation>An alternative name for risk fee.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Reduced Equity Fee</lx:path>
            <lx:label>Reduced Equity Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Risk Fee">
        <xs:annotation>
          <xs:documentation>A fee charged to offset the risk of a high LVR, instead of paying LMI.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Risk Fee</lx:path>
            <lx:label>Risk Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rollover Fee">
        <xs:annotation>
          <xs:documentation>A fee charged when rolling over a commercial bill.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Rollover Fee</lx:path>
            <lx:label>Rollover Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Security Guarantee Fee">
        <xs:annotation>
          <xs:documentation>A fee charged for each security guarantee associated with the credit facility.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Security Guarantee Fee</lx:path>
            <lx:label>Security Guarantee Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Security Release Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when a lender removes their legal charge from the security held against a mortgage or loan. This is sometimes called Discharge Fee.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Security Release Fee</lx:path>
            <lx:label>Security Release Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Service Plan">
        <xs:annotation>
          <xs:documentation>A fee associated with an ongoing plan to service the asset.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Service Plan</lx:path>
            <lx:label>Service Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Settlement Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when borrowers finish paying off the balance on a loan, or refinance with another lender. Also known as Termination Fee or Discharge Fee or Early-exit Fee.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Settlement Fee</lx:path>
            <lx:label>Settlement Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Stamp Duty on Mortgage">
        <xs:annotation>
          <xs:documentation>Fee paid to the State Revenue Office for stamping of mortgage or other security documents.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Stamp Duty on Mortgage</lx:path>
            <lx:label>Stamp Duty on Mortgage</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Stamp Duty on Transfer of Property">
        <xs:annotation>
          <xs:documentation>Fee paid to the State Revenue Office for stamping of transfer or other assignments of ownership document.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Stamp Duty on Transfer of Property</lx:path>
            <lx:label>Stamp Duty on Transfer of Property</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Substitute Security Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when the current property security of a loan is substituted for another property. This usually occurs when the borrower intends to sell the existing property security.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Substitute Security Fee</lx:path>
            <lx:label>Substitute Security Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Switch Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when all or part of an existing loan balance will be converted to another product, another type of interest rate (change between fixed and variable) or repayment type (change between interest only payments and principal and interest payments).</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Switch Fee</lx:path>
            <lx:label>Switch Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Third Party Document Production Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when producing a Certificate of Title or other security documents.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Third Party Document Production Fee</lx:path>
            <lx:label>Third Party Document Production Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Title Transfer Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when there is a transfer of ownership; for example property title transfer or vehicle registration transfer.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Title Transfer Fee</lx:path>
            <lx:label>Title Transfer Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Tyre and Rim Insurance">
        <xs:annotation>
          <xs:documentation>Premium charged for taking out Tyre and Rim Insurance. This insurance covers the damage to the tyres and rims outside of an accident. This covers tyres, rims, towing costs, car rentals or accommodation costs.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Tyre and Rim Insurance</lx:path>
            <lx:label>Tyre and Rim Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unused Facility Fee">
        <xs:annotation>
          <xs:documentation>A fee charged when a customer has unused limit on their facility. Applies to commercial bills only.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Unused Facility Fee</lx:path>
            <lx:label>Unused Facility Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Valuation Fee">
        <xs:annotation>
          <xs:documentation>A fee charged for the assessment of the value of the security.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Valuation Fee</lx:path>
            <lx:label>Valuation Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Withdrawal of Caveat Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged when caveat will be withdrawn/removed and lodged to the corresponding land or property information office.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Withdrawal of Caveat Fee</lx:path>
            <lx:label>Withdrawal of Caveat Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Withdrawal of Writ Fee">
        <xs:annotation>
          <xs:documentation>Fee is charged for the removal of a writ recorded against a title.</xs:documentation>
          <xs:appinfo>
            <lx:path>feeTypeList.Withdrawal of Writ Fee</lx:path>
            <lx:label>Withdrawal of Writ Fee</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="financialAssetTypeList">
    <xs:annotation>
      <xs:documentation>financialAssetTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>financialAssetTypeList</lx:path>
        <lx:label>Financial Asset Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Cash">
        <xs:annotation>
          <xs:documentation>Asset is cash that is not on deposit with a financial institution</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Cash</lx:path>
            <lx:label>Cash</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Investment">
        <xs:annotation>
          <xs:documentation>A financial asset that is purchased with the hope that it will generate income or appreciate in the future.</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Investment</lx:path>
            <lx:label>Investment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KiwiSaver">
        <xs:annotation>
          <xs:documentation>Money available through KiwiSaver a New Zealand voluntary, work-based savings initiative.</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.KiwiSaver</lx:path>
            <lx:label>KiwiSaver</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Managed Funds">
        <xs:annotation>
          <xs:documentation>Shares or units in a managed fund</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Managed Funds</lx:path>
            <lx:label>Managed Funds</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Asset is not described by any of the other enumerated values in the list</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Pension Account">
        <xs:annotation>
          <xs:documentation>Pension Account</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Pension Account</lx:path>
            <lx:label>Pension Account</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Receivables">
        <xs:annotation>
          <xs:documentation>Trade receivables owed by debtors of a business</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Receivables</lx:path>
            <lx:label>Receivables</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Savings Account">
        <xs:annotation>
          <xs:documentation>Savings Account</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Savings Account</lx:path>
            <lx:label>Savings Account</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Shares and Debentures">
        <xs:annotation>
          <xs:documentation>Listed and unlisted shares, business equity, bills, bonds and debentures</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Shares and Debentures</lx:path>
            <lx:label>Shares and Debentures</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Superannuation">
        <xs:annotation>
          <xs:documentation>Value held in a superannuation fund</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Superannuation</lx:path>
            <lx:label>Superannuation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Term Deposit">
        <xs:annotation>
          <xs:documentation>Term deposit accounts, including annuities</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Term Deposit</lx:path>
            <lx:label>Term Deposit</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Transaction Account">
        <xs:annotation>
          <xs:documentation>Includes deposit account, cash management account, and chequing account</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Transaction Account</lx:path>
            <lx:label>Transaction Account</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Trust Beneficial Interest">
        <xs:annotation>
          <xs:documentation>Beneficial ownership of equity within a trust.</xs:documentation>
          <xs:appinfo>
            <lx:path>financialAssetTypeList.Trust Beneficial Interest</lx:path>
            <lx:label>Trust Beneficial Interest</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="financialInstitutionList">
    <xs:annotation>
      <xs:documentation>financialInstitutionList</xs:documentation>
      <xs:appinfo>
        <lx:path>financialInstitutionList</lx:path>
        <lx:label>Financial Institution List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Afterpay">
        <xs:annotation>
          <xs:documentation>Afterpay</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Afterpay</lx:path>
            <lx:label>Afterpay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ANZ Bank">
        <xs:annotation>
          <xs:documentation>ANZ Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.ANZ Bank</lx:path>
            <lx:label>ANZ Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ASB Bank">
        <xs:annotation>
          <xs:documentation>ASB Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.ASB Bank</lx:path>
            <lx:label>ASB Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank of Baroda">
        <xs:annotation>
          <xs:documentation>Bank of Baroda</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Bank of Baroda</lx:path>
            <lx:label>Bank of Baroda</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank of China">
        <xs:annotation>
          <xs:documentation>Bank of China</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Bank of China</lx:path>
            <lx:label>Bank of China</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank of India">
        <xs:annotation>
          <xs:documentation>Bank of India</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Bank of India</lx:path>
            <lx:label>Bank of India</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank of New Zealand">
        <xs:annotation>
          <xs:documentation>Bank of New Zealand</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Bank of New Zealand</lx:path>
            <lx:label>Bank of New Zealand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank of Tokyo-Mitsubishi">
        <xs:annotation>
          <xs:documentation>Bank of Tokyo-Mitsubishi</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Bank of Tokyo-Mitsubishi</lx:path>
            <lx:label>Bank of Tokyo-Mitsubishi</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Brighten Home Loans">
        <xs:annotation>
          <xs:documentation>Brighten Home Loans</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Brighten Home Loans</lx:path>
            <lx:label>Brighten Home Loans</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="China Construction Bank">
        <xs:annotation>
          <xs:documentation>China Construction Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.China Construction Bank</lx:path>
            <lx:label>China Construction Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Citibank">
        <xs:annotation>
          <xs:documentation>Citibank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Citibank</lx:path>
            <lx:label>Citibank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Citywide Home Loans">
        <xs:annotation>
          <xs:documentation>Citywide Home Loans</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Citywide Home Loans</lx:path>
            <lx:label>Citywide Home Loans</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Commonwealth Bank">
        <xs:annotation>
          <xs:documentation>Commonwealth Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Commonwealth Bank</lx:path>
            <lx:label>Commonwealth Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Deutsche Bank">
        <xs:annotation>
          <xs:documentation>Deutsche Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Deutsche Bank</lx:path>
            <lx:label>Deutsche Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Genoapay">
        <xs:annotation>
          <xs:documentation>Genoapay</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Genoapay</lx:path>
            <lx:label>Genoapay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Heartland Bank">
        <xs:annotation>
          <xs:documentation>Heartland Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Heartland Bank</lx:path>
            <lx:label>Heartland Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Humm">
        <xs:annotation>
          <xs:documentation>Humm</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Humm</lx:path>
            <lx:label>Humm</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="International Commercial Bank of China">
        <xs:annotation>
          <xs:documentation>International Commercial Bank of China</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.International Commercial Bank of China</lx:path>
            <lx:label>International Commercial Bank of China</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JPMorgan Chase Bank">
        <xs:annotation>
          <xs:documentation>JPMorgan Chase Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.JPMorgan Chase Bank</lx:path>
            <lx:label>JPMorgan Chase Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Kiwibank">
        <xs:annotation>
          <xs:documentation>Kiwibank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Kiwibank</lx:path>
            <lx:label>Kiwibank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Klarna">
        <xs:annotation>
          <xs:documentation>Klarna</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Klarna</lx:path>
            <lx:label>Klarna</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Kookmin Bank">
        <xs:annotation>
          <xs:documentation>Kookmin Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Kookmin Bank</lx:path>
            <lx:label>Kookmin Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Laybuy">
        <xs:annotation>
          <xs:documentation>Laybuy</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Laybuy</lx:path>
            <lx:label>Laybuy</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Link Financial Group Limited">
        <xs:annotation>
          <xs:documentation>Link Financial Group Limited</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Link Financial Group Limited</lx:path>
            <lx:label>Link Financial Group Limited</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Openpay">
        <xs:annotation>
          <xs:documentation>Openpay</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Openpay</lx:path>
            <lx:label>Openpay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Other</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Oxipay">
        <xs:annotation>
          <xs:documentation>Oxipay</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Oxipay</lx:path>
            <lx:label>Oxipay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PartPay">
        <xs:annotation>
          <xs:documentation>PartPay</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.PartPay</lx:path>
            <lx:label>PartPay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Pepper New Zealand">
        <xs:annotation>
          <xs:documentation>Pepper New Zealand</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Pepper New Zealand</lx:path>
            <lx:label>Pepper New Zealand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rabobank Nederland">
        <xs:annotation>
          <xs:documentation>Rabobank Nederland</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Rabobank Nederland</lx:path>
            <lx:label>Rabobank Nederland</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rabobank New Zealand">
        <xs:annotation>
          <xs:documentation>Rabobank New Zealand</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Rabobank New Zealand</lx:path>
            <lx:label>Rabobank New Zealand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Southland Building Society">
        <xs:annotation>
          <xs:documentation>Southland Building Society</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Southland Building Society</lx:path>
            <lx:label>Southland Building Society</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="The Co-operative Bank">
        <xs:annotation>
          <xs:documentation>The Co-operative Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.The Co-operative Bank</lx:path>
            <lx:label>The Co-operative Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="The Hongkong and Shanghai Banking Corporation">
        <xs:annotation>
          <xs:documentation>The Hongkong and Shanghai Banking Corporation</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.The Hongkong and Shanghai Banking Corporation</lx:path>
            <lx:label>The Hongkong and Shanghai Banking Corporation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TSB Bank">
        <xs:annotation>
          <xs:documentation>TSB Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.TSB Bank</lx:path>
            <lx:label>TSB Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Westpac Bank">
        <xs:annotation>
          <xs:documentation>Westpac Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Westpac Bank</lx:path>
            <lx:label>Westpac Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Zip Co">
        <xs:annotation>
          <xs:documentation>Zip Co</xs:documentation>
          <xs:appinfo>
            <lx:path>financialInstitutionList.Zip Co</lx:path>
            <lx:label>Zip Co</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="foreignEmployedBasisList">
    <xs:annotation>
      <xs:documentation>foreignEmployedBasisList</xs:documentation>
      <xs:appinfo>
        <lx:path>foreignEmployedBasisList</lx:path>
        <lx:label>Foreign Employed Basis List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Casual">
        <xs:annotation>
          <xs:documentation>The employment described is under a casual contract of employment.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Casual</lx:path>
            <lx:label>Casual</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Commission Only">
        <xs:annotation>
          <xs:documentation>The employment described is remunerated by commission only, there is no base or retainer paid.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Commission Only</lx:path>
            <lx:label>Commission Only</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Contract">
        <xs:annotation>
          <xs:documentation>The employment described is under a contract for services.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Contract</lx:path>
            <lx:label>Contract</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Full Time">
        <xs:annotation>
          <xs:documentation>The employment described is under full time employment contract.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Full Time</lx:path>
            <lx:label>Full Time</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Part Time">
        <xs:annotation>
          <xs:documentation>The employment described is under part time employment contract.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Part Time</lx:path>
            <lx:label>Part Time</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Seasonal">
        <xs:annotation>
          <xs:documentation>The employment described is seasonal in nature, for example fruit picking.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Seasonal</lx:path>
            <lx:label>Seasonal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Temporary">
        <xs:annotation>
          <xs:documentation>The employment described is under contract with an employment agency, also known as temping.</xs:documentation>
          <xs:appinfo>
            <lx:path>foreignEmployedBasisList.Temporary</lx:path>
            <lx:label>Temporary</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frequencyFullList">
    <xs:annotation>
      <xs:documentation>frequencyFullList</xs:documentation>
      <xs:appinfo>
        <lx:path>frequencyFullList</lx:path>
        <lx:label>Frequency Full List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Daily">
        <xs:annotation>
          <xs:documentation>Daily</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Daily</lx:path>
            <lx:label>Daily</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fortnightly">
        <xs:annotation>
          <xs:documentation>Fortnightly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Fortnightly</lx:path>
            <lx:label>Fortnightly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Half Yearly">
        <xs:annotation>
          <xs:documentation>Half Yearly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Half Yearly</lx:path>
            <lx:label>Half Yearly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Monthly">
        <xs:annotation>
          <xs:documentation>Monthly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Monthly</lx:path>
            <lx:label>Monthly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="One Off">
        <xs:annotation>
          <xs:documentation>One Off</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.One Off</lx:path>
            <lx:label>One Off</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Quarterly">
        <xs:annotation>
          <xs:documentation>Quarterly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Quarterly</lx:path>
            <lx:label>Quarterly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Seasonal">
        <xs:annotation>
          <xs:documentation>Seasonal</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Seasonal</lx:path>
            <lx:label>Seasonal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Weekly">
        <xs:annotation>
          <xs:documentation>Weekly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Weekly</lx:path>
            <lx:label>Weekly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Yearly">
        <xs:annotation>
          <xs:documentation>Yearly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyFullList.Yearly</lx:path>
            <lx:label>Yearly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frequencyShortList">
    <xs:annotation>
      <xs:documentation>frequencyShortList</xs:documentation>
      <xs:appinfo>
        <lx:path>frequencyShortList</lx:path>
        <lx:label>Frequency Short List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Fortnightly">
        <xs:annotation>
          <xs:documentation>Fortnightly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyShortList.Fortnightly</lx:path>
            <lx:label>Fortnightly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Monthly">
        <xs:annotation>
          <xs:documentation>Monthly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyShortList.Monthly</lx:path>
            <lx:label>Monthly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Weekly">
        <xs:annotation>
          <xs:documentation>Weekly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyShortList.Weekly</lx:path>
            <lx:label>Weekly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Yearly">
        <xs:annotation>
          <xs:documentation>Yearly</xs:documentation>
          <xs:appinfo>
            <lx:path>frequencyShortList.Yearly</lx:path>
            <lx:label>Yearly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="interestTypeList">
    <xs:annotation>
      <xs:documentation>interestTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>interestTypeList</lx:path>
        <lx:label>Interest Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Fixed Rate">
        <xs:annotation>
          <xs:documentation>The term specified is the fixed rate term of the loan, being the period during which a fixed interest rate applies.</xs:documentation>
          <xs:appinfo>
            <lx:path>interestTypeList.Fixed Rate</lx:path>
            <lx:label>Fixed Rate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Variable">
        <xs:annotation>
          <xs:documentation>The term specified is the variable rate term of the loan, being the period during which a variable interest rate applies.</xs:documentation>
          <xs:appinfo>
            <lx:path>interestTypeList.Variable</lx:path>
            <lx:label>Variable</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="liabilityTypeList">
    <xs:annotation>
      <xs:documentation>liabilityTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>liabilityTypeList</lx:path>
        <lx:label>Liability Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Amortising Home Loan">
        <xs:annotation>
          <xs:documentation>Liability is an amortising home loan. A loan that requires the borrower to make scheduled, periodic payments that are applied to both the principal and interest.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Amortising Home Loan</lx:path>
            <lx:label>Amortising Home Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bridging Finance">
        <xs:annotation>
          <xs:documentation>Liability is a bridging loan. A short term loan designed to allow a borrower to finance the purchase of a new property before selling an existing property. An assessment for a bridging loan involves calculation of peak debt and end debt.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Bridging Finance</lx:path>
            <lx:label>Bridging Finance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Buy Now Pay Later">
        <xs:annotation>
          <xs:documentation>The liability is a buy now pay later facility according to the lender's policy.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Buy Now Pay Later</lx:path>
            <lx:label>Buy Now Pay Later</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Car Loan">
        <xs:annotation>
          <xs:documentation>Liability is a car loan</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Car Loan</lx:path>
            <lx:label>Car Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Commercial Bill">
        <xs:annotation>
          <xs:documentation>Liability is a commercial bill, typically associated with business lending or high-end investment lending</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Commercial Bill</lx:path>
            <lx:label>Commercial Bill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Contingent Liability">
        <xs:annotation>
          <xs:documentation>Liability is has not yet crystallised but may arise in future on the happening of certain events or contingencies</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Contingent Liability</lx:path>
            <lx:label>Contingent Liability</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Credit Card">
        <xs:annotation>
          <xs:documentation>Liability is a credit card</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Credit Card</lx:path>
            <lx:label>Credit Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Government Benefits Debt">
        <xs:annotation>
          <xs:documentation>Liability is a debt owed to the government.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Government Benefits Debt</lx:path>
            <lx:label>Government Benefits Debt</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HECS-HELP">
        <xs:annotation>
          <xs:documentation>Liability is a debt under the Commonwealth Higher Education Contribution Scheme</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.HECS-HELP</lx:path>
            <lx:label>HECS-HELP</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hire Purchase">
        <xs:annotation>
          <xs:documentation>Liability is owed under a hire purchase agreement</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Hire Purchase</lx:path>
            <lx:label>Hire Purchase</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Invoice Financing Loan">
        <xs:annotation>
          <xs:documentation>An invoice financing loan secured by one or more outstanding sales invoices owed to the borrower.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Invoice Financing Loan</lx:path>
            <lx:label>Invoice Financing Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Lease">
        <xs:annotation>
          <xs:documentation>Liability is owed under a finance lease, including for a motor vehicle or equipment</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Lease</lx:path>
            <lx:label>Lease</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Line of Credit">
        <xs:annotation>
          <xs:documentation>Liability has a limit up to which the borrower may draw, but which has no regular principal repayment obligations; as opposed to a Term Loan</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Line of Credit</lx:path>
            <lx:label>Line of Credit</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Line of Credit Home Loan">
        <xs:annotation>
          <xs:documentation>Liability is a line of credit home loan. A revolving credit facility for a product that is secured by a residential property.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Line of Credit Home Loan</lx:path>
            <lx:label>Line of Credit Home Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Loan as Guarantor">
        <xs:annotation>
          <xs:documentation>Liability is the contingent liability of a guarantor for guaranteed obligations of a third party to a lender</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Loan as Guarantor</lx:path>
            <lx:label>Loan as Guarantor</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Margin Loan">
        <xs:annotation>
          <xs:documentation>Liability which lets you borrow money to invest and uses your shares or managed funds as security.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Margin Loan</lx:path>
            <lx:label>Margin Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mortgage Loan">
        <xs:annotation>
          <xs:documentation>DEPRECATED and to be deleted in a breaking release on or after May 1 2017. Liability is a loan secured by real property</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Mortgage Loan</lx:path>
            <lx:label>Mortgage Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Liability is not described by one of the other enumerated values in the list</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other Loan">
        <xs:annotation>
          <xs:documentation>Liability is loan that is not described by the loan types Mortgage Loan, Personal Loan, Term Loan</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Other Loan</lx:path>
            <lx:label>Other Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Outstanding Taxation">
        <xs:annotation>
          <xs:documentation>Liability is a debt owed to a public authority for unpaid taxes, including BAS and PAYGW</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Outstanding Taxation</lx:path>
            <lx:label>Outstanding Taxation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Overdraft">
        <xs:annotation>
          <xs:documentation>Liability is a credit buffer on a deposit account, unsecured, or an extra buffer above the approved limit of a credit facility</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Overdraft</lx:path>
            <lx:label>Overdraft</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Personal Loan">
        <xs:annotation>
          <xs:documentation>Liability is a personal loan, typically unsecured and for personal purposes such as funding travel or the purchase of a car</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Personal Loan</lx:path>
            <lx:label>Personal Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Store Card">
        <xs:annotation>
          <xs:documentation>Liability is a store card</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Store Card</lx:path>
            <lx:label>Store Card</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Student Loan">
        <xs:annotation>
          <xs:documentation>Liability is a student loan</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Student Loan</lx:path>
            <lx:label>Student Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Term Loan">
        <xs:annotation>
          <xs:documentation>Liability is a loan that has a term, as opposed to a Line Of Credit</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Term Loan</lx:path>
            <lx:label>Term Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Trade Finance Loan">
        <xs:annotation>
          <xs:documentation>A trade finance loan for financing domestic and international trade.</xs:documentation>
          <xs:appinfo>
            <lx:path>liabilityTypeList.Trade Finance Loan</lx:path>
            <lx:label>Trade Finance Loan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="livingExpenseCategoryList">
    <xs:annotation>
      <xs:documentation>List of living expense categories, as agreed by the Living Expenses Working Group.</xs:documentation>
      <xs:appinfo>
        <lx:path>livingExpenseCategoryList</lx:path>
        <lx:label>Living Expense Category List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Body Corporate Fees, Strata Fees and Land Tax on Owner Occupied Principal Place of Residence">
        <xs:annotation>
          <xs:documentation>Body corporate fees, strata fees and land tax on owner occupied principal place of residence. Excludes investment properties, secondary residences, and properties maintained for other purposes such as holiday properties or residences maintained for parents or children.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Body Corporate Fees, Strata Fees and Land Tax on Owner Occupied Principal Place of Residence</lx:path>
            <lx:label>Body Corporate Fees, Strata Fees and Land Tax on Owner Occupied Principal Place of Residence</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Childcare">
        <xs:annotation>
          <xs:documentation>Childcare including nannies and non-compulsory pre-school.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Childcare</lx:path>
            <lx:label>Childcare</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Clothing and personal care">
        <xs:annotation>
          <xs:documentation>Clothing, footwear, personal care products, cosmetics, hair services and accessories (including travel goods, handbags, umbrellas, wallets, and baby-goods) for men, women, children and infants, including purchases, repairs and alterations.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Clothing and personal care</lx:path>
            <lx:label>Clothing and personal care</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Education">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Public and private education fees and associated costs (preschool, primary, secondary and tertiary) including books and uniforms etc.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Education</lx:path>
            <lx:label>Public and private education fees and associated costs (preschool, primary, secondary and tertiary) including books and uniforms etc.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="General Basic Insurances">
        <xs:annotation>
          <xs:documentation>General basic insurances include ambulance, car (not recreation vehicles), travel, and personal belongings insurance. Excludes property (house and contents), health, sickness and personal accident, life, income protection and pet insurance.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.General Basic Insurances</lx:path>
            <lx:label>General Basic Insurances</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Groceries">
        <xs:annotation>
          <xs:documentation>Groceries (food and non-alcoholic beverages), toiletries and cleaning products.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Groceries</lx:path>
            <lx:label>Groceries</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Health Insurance">
        <xs:annotation>
          <xs:documentation>Health insurance including hospital, medical and dental insurance (excludes separate ambulance insurance).</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Health Insurance</lx:path>
            <lx:label>Health Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Higher Education, Vocational Training and Professional Fees">
        <xs:annotation>
          <xs:documentation>Higher education and vocational training fees (including TAFE, business college, drama, music, dance) excluding HECS, and professional fees (union dues, professional association subscriptions, legal, accountant and tax agent fees).</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Higher Education, Vocational Training and Professional Fees</lx:path>
            <lx:label>Higher Education, Vocational Training and Professional Fees</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Insurance">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. All insurance including health, home and contents, motor vehicle, life, income protection.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Insurance</lx:path>
            <lx:label>Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Investment Property Running Costs">
        <xs:annotation>
          <xs:documentation>Costs associated with any property owned for investment purposes. Includes body corporate fees, strata fees, land tax, property management fees, rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, landlords insurance, home insurance, contents insurance and appliance insurance.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Investment Property Running Costs</lx:path>
            <lx:label>Investment Property Running Costs</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Investment property utilities, rates and related costs">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Housing and property expenses on investment property including rates, taxes, levies, body corporate and strata fees, repairs and maintenance, other household items and utilities (excluding insurance, telephone, internet and pay TV as they are categorised separately).</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Investment property utilities, rates and related costs</lx:path>
            <lx:label>Investment property utilities, rates and related costs (excluding insurance)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Medical and health">
        <xs:annotation>
          <xs:documentation>Medical and health care services including GPs, specialists, physiotherapists, chiropractors, and opticians. Medicines, pharmaceuticals, prescriptions, glasses, purchase or hire of therapeutic appliances and equipment, hospital charges, nursing home charges. Excludes health insurance and ambulance insurance.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Medical and health</lx:path>
            <lx:label>Medical and health</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Other ongoing or recurring items not included within the other categories including, but not limited to pet insurance, insurance not elsewhere classified, registration, insurance and operation of recreational vehicles (such as caravans, trailers, motorcycles, boats and aircraft), overseas holidays, gifts, jewellery, household services including cleaning, gardening, housekeeping, security and pest control services.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Owner occupied property utilities, rates and related costs">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Housing and property expenses on owner occupied property including rates, taxes, levies, body corporate and strata fees, repairs and maintenance, other household items and utilities (excluding insurance, telephone, internet and pay TV as they are categorised separately).</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Owner occupied property utilities, rates and related costs</lx:path>
            <lx:label>Owner occupied property utilities, rates and related costs (excluding insurance)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Pet Care">
        <xs:annotation>
          <xs:documentation>Pet food, grooming, minding services, care products, health products, veterinarian fees.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Pet Care</lx:path>
            <lx:label>Pet Care</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Primary Residence Running Costs">
        <xs:annotation>
          <xs:documentation>Costs associated with the primary residence, either owned or rented. Includes rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, home insurance, contents insurance and appliance insurance. Excludes body corporate fees, strata fees and land tax.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Primary Residence Running Costs</lx:path>
            <lx:label>Primary Residence Running Costs</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Private Schooling and Tuition">
        <xs:annotation>
          <xs:documentation>Tuition fees, school fees and sports fees for private schooling, including independent schools (Catholic or non-Catholic) and private tuition including compulsory age kindergarten/reception/pre-primary/prep.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Private Schooling and Tuition</lx:path>
            <lx:label>Private Schooling and Tuition</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Public or Government Primary and Secondary Education">
        <xs:annotation>
          <xs:documentation>Public or government, primary and secondary school tuition, school and sports fees including compulsory kindergarten/reception/pre-primary/prep.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Public or Government Primary and Secondary Education</lx:path>
            <lx:label>Public or Government Primary and Secondary Education</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Recreation and entertainment">
        <xs:annotation>
          <xs:documentation>Meals in restaurants, hotels and clubs, fast food and takeaway including coffee. Alcoholic beverages and tobacco products. Purchase, hire, repair of recreational personal belongings including electronics, computers, games consoles, AV equipment, cameras. Toys, hobbies, stationery, arts, crafts, sports, camping, fishing and recreation equipment including musical instruments, accessories and lessons. Non-subscription TV, video, games, and audio content, books, newspapers, magazines (including physical material and digital content). Recreation, gym, and health and fitness studios fees, court hire, sports lessons, admission fees and tickets (sports, theatre, gallery, museum, music events). Domestic holidays (fares, fuel, accommodation, theme parks, zoos tours). Recreational gambling, including lottery-type games, scratch cards, poker machines, club and casino gaming, and sports betting. Excludes travel insurance.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Recreation and entertainment</lx:path>
            <lx:label>Recreation and entertainment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Secondary Residence Running Costs">
        <xs:annotation>
          <xs:documentation>Costs associated with any secondary residence, either rented or owned for non-investment purposes, such as a holiday property that is not rented to generate income, or a property that family members (parents or children) are allowed to live in rent-free. Includes body corporate fees, strata fees, land tax, property management fees, rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, landlords insurance, home insurance, contents insurance and appliance insurance.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Secondary Residence Running Costs</lx:path>
            <lx:label>Secondary Residence Running Costs</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Sickness and Personal Accident Insurance, Life Insurance">
        <xs:annotation>
          <xs:documentation>Sickness and personal accident insurance, life insurance</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Sickness and Personal Accident Insurance, Life Insurance</lx:path>
            <lx:label>Sickness and Personal Accident Insurance, Life Insurance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Telephone, internet, pay TV and media streaming subscriptions">
        <xs:annotation>
          <xs:documentation>Telephone accounts (home and mobile), internet, pay TV and media streaming subscriptions (such as Netflix and Spotify).</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Telephone, internet, pay TV and media streaming subscriptions</lx:path>
            <lx:label>Telephone, internet, pay TV and media streaming subscriptions</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Transport">
        <xs:annotation>
          <xs:documentation>Public transport, taxis, ride-sharing and non-holiday domestic airfares (excludes overseas airfares). Running costs for essential vehicles including fuel, servicing, repairs, parking, tolls (excludes insurance) and registration of motor vehicles (excludes recreational vehicles such as caravans, trailers, motorcycles, boats and aircraft).</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Transport</lx:path>
            <lx:label>Transport</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Voluntary Superannuation Contributions">
        <xs:annotation>
          <xs:documentation>Superannuation contributions that the applicants choose to make into their own Superannuation schemes.</xs:documentation>
          <xs:appinfo>
            <lx:path>livingExpenseCategoryList.Voluntary Superannuation Contributions</lx:path>
            <lx:label>Voluntary Superannuation Contributions</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="loanTermUnitsList">
    <xs:annotation>
      <xs:documentation>loanTermUnitsList</xs:documentation>
      <xs:appinfo>
        <lx:path>loanTermUnitsList</lx:path>
        <lx:label>Loan Term Units List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Days">
        <xs:annotation>
          <xs:documentation>The loan term specified is in days.</xs:documentation>
          <xs:appinfo>
            <lx:path>loanTermUnitsList.Days</lx:path>
            <lx:label>Days</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Months">
        <xs:annotation>
          <xs:documentation>The loan term specified is in months.</xs:documentation>
          <xs:appinfo>
            <lx:path>loanTermUnitsList.Months</lx:path>
            <lx:label>Months</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Weeks">
        <xs:annotation>
          <xs:documentation>The loan term specified is in weeks.</xs:documentation>
          <xs:appinfo>
            <lx:path>loanTermUnitsList.Weeks</lx:path>
            <lx:label>Weeks</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Years">
        <xs:annotation>
          <xs:documentation>The loan term specified is in years.</xs:documentation>
          <xs:appinfo>
            <lx:path>loanTermUnitsList.Years</lx:path>
            <lx:label>Years</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="maritalStatusList">
    <xs:annotation>
      <xs:documentation>maritalStatusList</xs:documentation>
      <xs:appinfo>
        <lx:path>maritalStatusList</lx:path>
        <lx:label>Marital Status List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="De Facto">
        <xs:annotation>
          <xs:documentation>The person is in a de facto relationship.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.De Facto</lx:path>
            <lx:label>De Facto</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Divorced">
        <xs:annotation>
          <xs:documentation>The person is a divorcee.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.Divorced</lx:path>
            <lx:label>Divorced</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Married">
        <xs:annotation>
          <xs:documentation>The person is married.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.Married</lx:path>
            <lx:label>Married</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Separated">
        <xs:annotation>
          <xs:documentation>The person is separated from their husband/wife.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.Separated</lx:path>
            <lx:label>Separated</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Single">
        <xs:annotation>
          <xs:documentation>The person is single with no financial dependency for or from a previous spouse.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.Single</lx:path>
            <lx:label>Single</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>The person's marital status is unknown.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.Unknown</lx:path>
            <lx:label>Unknown</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Widowed">
        <xs:annotation>
          <xs:documentation>The person's husband/wife is deceased.</xs:documentation>
          <xs:appinfo>
            <lx:path>maritalStatusList.Widowed</lx:path>
            <lx:label>Widowed</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nameTitleList">
    <xs:annotation>
      <xs:documentation>A list of commonly used formal name titles.</xs:documentation>
      <xs:appinfo>
        <lx:path>nameTitleList</lx:path>
        <lx:label>Name Title List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Dr">
        <xs:annotation>
          <xs:documentation>Dr</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Dr</lx:path>
            <lx:label>Dr</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hon">
        <xs:annotation>
          <xs:documentation>Hon</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Hon</lx:path>
            <lx:label>Hon</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Lady">
        <xs:annotation>
          <xs:documentation>Lady</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Lady</lx:path>
            <lx:label>Lady</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Miss">
        <xs:annotation>
          <xs:documentation>Miss</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Miss</lx:path>
            <lx:label>Miss</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mr">
        <xs:annotation>
          <xs:documentation>Mr</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Mr</lx:path>
            <lx:label>Mr</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mrs">
        <xs:annotation>
          <xs:documentation>Mrs</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Mrs</lx:path>
            <lx:label>Mrs</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Ms">
        <xs:annotation>
          <xs:documentation>Ms</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Ms</lx:path>
            <lx:label>Ms</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mx">
        <xs:annotation>
          <xs:documentation>This refers to non-binary people and those who do not wish to be referred to by their gender.</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Mx</lx:path>
            <lx:label>Mx</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>The name title is not included in this list and may be provided in the corresponding OtherNameTitle field if available.</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Prof">
        <xs:annotation>
          <xs:documentation>Prof</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Prof</lx:path>
            <lx:label>Prof</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="R Hon">
        <xs:annotation>
          <xs:documentation>R Hon</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.R Hon</lx:path>
            <lx:label>R Hon</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rev">
        <xs:annotation>
          <xs:documentation>Rev</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Rev</lx:path>
            <lx:label>Rev</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Sir">
        <xs:annotation>
          <xs:documentation>Sir</xs:documentation>
          <xs:appinfo>
            <lx:path>nameTitleList.Sir</lx:path>
            <lx:label>Sir</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nonRealEstateAssetTypeList">
    <xs:annotation>
      <xs:documentation>nonRealEstateAssetTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>nonRealEstateAssetTypeList</lx:path>
        <lx:label>Non Real Estate Asset Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Agricultural">
        <xs:annotation>
          <xs:documentation>Agricultural equipment, crops and livestock</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Agricultural</lx:path>
            <lx:label>Agricultural</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Aircraft">
        <xs:annotation>
          <xs:documentation>Fixed and rotary wing aircraft and aircraft engines</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Aircraft</lx:path>
            <lx:label>Aircraft</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Business">
        <xs:annotation>
          <xs:documentation>Business</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Business</lx:path>
            <lx:label>Business</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Cleaning">
        <xs:annotation>
          <xs:documentation>Cleaning</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Cleaning</lx:path>
            <lx:label>Cleaning</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Earth Moving, Mining and Construction">
        <xs:annotation>
          <xs:documentation>Earth Moving, Mining and Construction</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Earth Moving, Mining and Construction</lx:path>
            <lx:label>Earth Moving, Mining and Construction</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Financial Asset">
        <xs:annotation>
          <xs:documentation>Cash and accounts at financial institutions</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Financial Asset</lx:path>
            <lx:label>Financial Asset</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hospitality and Leisure">
        <xs:annotation>
          <xs:documentation>Hospitality and Leisure</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Hospitality and Leisure</lx:path>
            <lx:label>Hospitality and Leisure</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IT and AV Equipment">
        <xs:annotation>
          <xs:documentation>IT and AV Equipment</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.IT and AV Equipment</lx:path>
            <lx:label>IT and AV Equipment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Licence">
        <xs:annotation>
          <xs:documentation>Licence</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Licence</lx:path>
            <lx:label>Licence</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Materials Handling and Lifting">
        <xs:annotation>
          <xs:documentation>Materials Handling and Lifting</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Materials Handling and Lifting</lx:path>
            <lx:label>Materials Handling and Lifting</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Medical">
        <xs:annotation>
          <xs:documentation>Medical</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Medical</lx:path>
            <lx:label>Medical</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mobile Computing">
        <xs:annotation>
          <xs:documentation>Mobile Computing</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Mobile Computing</lx:path>
            <lx:label>Mobile Computing</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Motor Vehicle and Transport">
        <xs:annotation>
          <xs:documentation>Including cars, commercial vehicles and watercraft</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Motor Vehicle and Transport</lx:path>
            <lx:label>Motor Vehicle and Transport</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Office Equipment">
        <xs:annotation>
          <xs:documentation>Office Equipment</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Office Equipment</lx:path>
            <lx:label>Office Equipment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Asset is not described by any of the other enumerated values in the list</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Plant, Equipment and Industrial">
        <xs:annotation>
          <xs:documentation>Plant, Equipment and Industrial</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Plant, Equipment and Industrial</lx:path>
            <lx:label>Plant, Equipment and Industrial</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Tools of Trade">
        <xs:annotation>
          <xs:documentation>Portable Tradesman tools</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Tools of Trade</lx:path>
            <lx:label>Tools of Trade</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Water Rights">
        <xs:annotation>
          <xs:documentation>Water Rights</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Water Rights</lx:path>
            <lx:label>Water Rights</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Watercraft">
        <xs:annotation>
          <xs:documentation>A boat or other vessel that travels on water.</xs:documentation>
          <xs:appinfo>
            <lx:path>nonRealEstateAssetTypeList.Watercraft</lx:path>
            <lx:label>Watercraft</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nzDialingCodeList">
    <xs:annotation>
      <xs:documentation>A list of valid Area Codes for New Zealand telephone numbers.</xs:documentation>
      <xs:appinfo>
        <lx:path>nzDialingCodeList</lx:path>
        <lx:label>NZ Dialing Code List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="01">
        <xs:annotation>
          <xs:documentation>Special Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.01</lx:path>
            <lx:label>Special Service Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="011">
        <xs:annotation>
          <xs:documentation>Hand-Off Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.011</lx:path>
            <lx:label>Hand-Off Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="020">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.020</lx:path>
            <lx:label>020 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="021">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.021</lx:path>
            <lx:label>021 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="022">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.022</lx:path>
            <lx:label>022 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="023">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.023</lx:path>
            <lx:label>023 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="024">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.024</lx:path>
            <lx:label>024 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="025">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.025</lx:path>
            <lx:label>025 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="026">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.026</lx:path>
            <lx:label>026 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="027">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.027</lx:path>
            <lx:label>027 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="028">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.028</lx:path>
            <lx:label>028 (Non-Geographic Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="029">
        <xs:annotation>
          <xs:documentation>Non-Geographic Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.029</lx:path>
            <lx:label>Non-Geographic Service Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="03">
        <xs:annotation>
          <xs:documentation>Geographic Service Code for Nelson, West Coast, Southland, Marlborough, Christchurch, Oamaru, and Otago.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.03</lx:path>
            <lx:label>Geographic Service Code for Nelson, West Coast, Southland, Marlborough, Christchurch, Oamaru, and Otago.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="04">
        <xs:annotation>
          <xs:documentation>Geographic Service Code for the Wellington Region.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.04</lx:path>
            <lx:label>Geographic Service Code for the Wellington Region.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="05">
        <xs:annotation>
          <xs:documentation>Service Provider Prefixes.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.05</lx:path>
            <lx:label>Service Provider Prefixes.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="050">
        <xs:annotation>
          <xs:documentation>Free-Phone Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.050</lx:path>
            <lx:label>050 (Free-Phone Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="0508">
        <xs:annotation>
          <xs:documentation>Free-Phone Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.0508</lx:path>
            <lx:label>0508 (Free-Phone Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="06">
        <xs:annotation>
          <xs:documentation>Geographic Service Code for Taranaki, Wanganui, Manawatu, Gisborne, Hawke's Bay, and Wairarapa.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.06</lx:path>
            <lx:label>Geographic Service Code for Taranaki, Wanganui, Manawatu, Gisborne, Hawke's Bay, and Wairarapa.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="07">
        <xs:annotation>
          <xs:documentation>Geographic Service Code for Waikato and Bay of Plenty.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.07</lx:path>
            <lx:label>Geographic Service Code for Waikato and Bay of Plenty.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="070">
        <xs:annotation>
          <xs:documentation>Personal Number Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.070</lx:path>
            <lx:label>Personal Number Service Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="08">
        <xs:annotation>
          <xs:documentation>Value-Added Service Codes.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.08</lx:path>
            <lx:label>Value-Added Service Codes.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="080">
        <xs:annotation>
          <xs:documentation>Free-Phone Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.080</lx:path>
            <lx:label>080 (Free-Phone Service Code.)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="0800">
        <xs:annotation>
          <xs:documentation>Free-Phone Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.0800</lx:path>
            <lx:label>Free-Phone Service Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="09">
        <xs:annotation>
          <xs:documentation>Geographic Service Code for Northland and Auckland.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.09</lx:path>
            <lx:label>Geographic Service Code for Northland and Auckland.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="090">
        <xs:annotation>
          <xs:documentation>Premium-Rate Services Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.090</lx:path>
            <lx:label>Premium-Rate Services Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="1">
        <xs:annotation>
          <xs:documentation>Special Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.1</lx:path>
            <lx:label>(1)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="50">
        <xs:annotation>
          <xs:documentation>Nation-Wide Number Service Code.</xs:documentation>
          <xs:appinfo>
            <lx:path>nzDialingCodeList.50</lx:path>
            <lx:label>Nation-Wide Number Service Code.</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="otherCommitmentCategoryList">
    <xs:annotation>
      <xs:documentation>Category of the other commitment.</xs:documentation>
      <xs:appinfo>
        <lx:path>otherCommitmentCategoryList</lx:path>
        <lx:label>Other Commitment Category List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Board">
        <xs:annotation>
          <xs:documentation>Board paid.</xs:documentation>
          <xs:appinfo>
            <lx:path>otherCommitmentCategoryList.Board</lx:path>
            <lx:label>Board</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Child and Spousal Maintenance">
        <xs:annotation>
          <xs:documentation>Maintenance for either dependent or non-dependent children, and spousal or de facto partner maintenance.</xs:documentation>
          <xs:appinfo>
            <lx:path>otherCommitmentCategoryList.Child and Spousal Maintenance</lx:path>
            <lx:label>Child and Spousal Maintenance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Child Maintenance">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Maintenance expenses for nondependent children.</xs:documentation>
          <xs:appinfo>
            <lx:path>otherCommitmentCategoryList.Child Maintenance</lx:path>
            <lx:label>Child Maintenance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Other Commitment.</xs:documentation>
          <xs:appinfo>
            <lx:path>otherCommitmentCategoryList.Other</lx:path>
            <lx:label>Other</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rent">
        <xs:annotation>
          <xs:documentation>Rent on primary residence.</xs:documentation>
          <xs:appinfo>
            <lx:path>otherCommitmentCategoryList.Rent</lx:path>
            <lx:label>Rent</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="payeBasisList">
    <xs:annotation>
      <xs:documentation>A list of employment basis types that are valid for New Zealand.</xs:documentation>
      <xs:appinfo>
        <lx:path>payeBasisList</lx:path>
        <lx:label>PAYE Basis List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Casual">
        <xs:annotation>
          <xs:documentation>The employment described is under a casual contract of employment.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Casual</lx:path>
            <lx:label>Casual</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Commission Only">
        <xs:annotation>
          <xs:documentation>The employment described is remunerated by commission only, there is no base or retainer paid.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Commission Only</lx:path>
            <lx:label>Commission Only</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Contract">
        <xs:annotation>
          <xs:documentation>The employment described is under a contract for services.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Contract</lx:path>
            <lx:label>Contract</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Full Time">
        <xs:annotation>
          <xs:documentation>The employment described is under full time employment contract.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Full Time</lx:path>
            <lx:label>Full Time</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Part Time">
        <xs:annotation>
          <xs:documentation>The employment described is under part time employment contract.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Part Time</lx:path>
            <lx:label>Part Time</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Seasonal">
        <xs:annotation>
          <xs:documentation>The employment described is seasonal in nature, for example fruit picking.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Seasonal</lx:path>
            <lx:label>Seasonal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Temporary">
        <xs:annotation>
          <xs:documentation>The employment described is under contract with an employment agency, also known as temping.</xs:documentation>
          <xs:appinfo>
            <lx:path>payeBasisList.Temporary</lx:path>
            <lx:label>Temporary</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="paymentTypeList">
    <xs:annotation>
      <xs:documentation>paymentTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>paymentTypeList</lx:path>
        <lx:label>Payment Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Interest Capitalised">
        <xs:annotation>
          <xs:documentation>There is no repayment during the specified term, interest is capitalised to the loan balance.</xs:documentation>
          <xs:appinfo>
            <lx:path>paymentTypeList.Interest Capitalised</lx:path>
            <lx:label>Interest Capitalised</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Interest Only">
        <xs:annotation>
          <xs:documentation>The repayment during the specified term consists only of interest, calculated in arrears.</xs:documentation>
          <xs:appinfo>
            <lx:path>paymentTypeList.Interest Only</lx:path>
            <lx:label>Interest Only</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Interest Partially Capitalised">
        <xs:annotation>
          <xs:documentation>The repayment during the specified term consists only of interest, calculated in arrears, some of which is capitalised to the loan balance.</xs:documentation>
          <xs:appinfo>
            <lx:path>paymentTypeList.Interest Partially Capitalised</lx:path>
            <lx:label>Interest Partially Capitalised</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Prepaid Interest">
        <xs:annotation>
          <xs:documentation>The repayment during the specified term consists of an interest only payment made in advance.</xs:documentation>
          <xs:appinfo>
            <lx:path>paymentTypeList.Prepaid Interest</lx:path>
            <lx:label>Prepaid Interest</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Principal and Interest">
        <xs:annotation>
          <xs:documentation>The repayment during the specified term consists of both principal and interest.</xs:documentation>
          <xs:appinfo>
            <lx:path>paymentTypeList.Principal and Interest</lx:path>
            <lx:label>Principal and Interest</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Principal Interest Fees">
        <xs:annotation>
          <xs:documentation>The repayment during the specified term consists of both principal and interest plus a servicing fee.</xs:documentation>
          <xs:appinfo>
            <lx:path>paymentTypeList.Principal Interest Fees</lx:path>
            <lx:label>Principal Interest Fees</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="planTypeList">
    <xs:annotation>
      <xs:documentation>planTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>planTypeList</lx:path>
        <lx:label>Plan Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Building Unit Plan">
        <xs:annotation>
          <xs:documentation>Building Unit Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Building Unit Plan</lx:path>
            <lx:label>Building Unit Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Building Unit Plan of Amalgamation">
        <xs:annotation>
          <xs:documentation>Building Unit Plan of Amalgamation (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Building Unit Plan of Amalgamation</lx:path>
            <lx:label>Building Unit Plan of Amalgamation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Building Unit Plan of Resubdivision">
        <xs:annotation>
          <xs:documentation>Building Unit Plan of Resubdivision (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Building Unit Plan of Resubdivision</lx:path>
            <lx:label>Building Unit Plan of Resubdivision</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Cluster Plan">
        <xs:annotation>
          <xs:documentation>Cluster Plan (VIC)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Cluster Plan</lx:path>
            <lx:label>Cluster Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Community Plan">
        <xs:annotation>
          <xs:documentation>Community Plan (NSW, SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Community Plan</lx:path>
            <lx:label>Community Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Crown Plan">
        <xs:annotation>
          <xs:documentation>Crown Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Crown Plan</lx:path>
            <lx:label>Crown Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Deposited Plan">
        <xs:annotation>
          <xs:documentation>Deposited Plan (NSW,SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Deposited Plan</lx:path>
            <lx:label>Deposited Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Diagram">
        <xs:annotation>
          <xs:documentation>Diagram (WA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Diagram</lx:path>
            <lx:label>Diagram</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Filed Plan">
        <xs:annotation>
          <xs:documentation>Filed Plan (SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Filed Plan</lx:path>
            <lx:label>Filed Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GRO Plan">
        <xs:annotation>
          <xs:documentation>GRO Plan (SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.GRO Plan</lx:path>
            <lx:label>GRO Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Group Title Plan">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Group Titles Plan must be used instead.</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Group Title Plan</lx:path>
            <lx:label>Group Title Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Group Title Plan of Amalgamation">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Group Titles Plan of Amalgamation must be used instead.</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Group Title Plan of Amalgamation</lx:path>
            <lx:label>Group Title Plan of Amalgamation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Group Title Plan of Resubdivision">
        <xs:annotation>
          <xs:documentation>This item is now deprecated and will be deleted in a future release. Group Titles Plan of Resubdivision must be used instead.</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Group Title Plan of Resubdivision</lx:path>
            <lx:label>Group Title Plan of Resubdivision</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Group Titles Plan">
        <xs:annotation>
          <xs:documentation>Group Titles Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Group Titles Plan</lx:path>
            <lx:label>Group Titles Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Group Titles Plan of Amalgamation">
        <xs:annotation>
          <xs:documentation>Group Titles Plan of Amalgamation (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Group Titles Plan of Amalgamation</lx:path>
            <lx:label>Group Titles Plan of Amalgamation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Group Titles Plan of Resubdivision">
        <xs:annotation>
          <xs:documentation>Group Titles Plan of Resubdivision (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Group Titles Plan of Resubdivision</lx:path>
            <lx:label>Group Titles Plan of Resubdivision</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hundred Plan">
        <xs:annotation>
          <xs:documentation>Hundred Plan (SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Hundred Plan</lx:path>
            <lx:label>Hundred Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Leasehold Building Unit Plan (South Bank)">
        <xs:annotation>
          <xs:documentation>Leasehold Building Unit Plan (South Bank) (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Leasehold Building Unit Plan (South Bank)</lx:path>
            <lx:label>Leasehold Building Unit Plan (South Bank)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Lodged Plan">
        <xs:annotation>
          <xs:documentation>Lodged Plan (VIC)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Lodged Plan</lx:path>
            <lx:label>Lodged Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Lower Building Unit Plan">
        <xs:annotation>
          <xs:documentation>Lower Building Unit Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Lower Building Unit Plan</lx:path>
            <lx:label>Lower Building Unit Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mixed Community Plan">
        <xs:annotation>
          <xs:documentation>Mixed Community Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Mixed Community Plan</lx:path>
            <lx:label>Mixed Community Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mixed Precinct Plan">
        <xs:annotation>
          <xs:documentation>Mixed Precinct Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Mixed Precinct Plan</lx:path>
            <lx:label>Mixed Precinct Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mixed Stratum Plan">
        <xs:annotation>
          <xs:documentation>Mixed Stratum Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Mixed Stratum Plan</lx:path>
            <lx:label>Mixed Stratum Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Out of Hundred Plan">
        <xs:annotation>
          <xs:documentation>Out of Hundred Plan(SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Out of Hundred Plan</lx:path>
            <lx:label>Out of Hundred Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Plan">
        <xs:annotation>
          <xs:documentation>Plan (WA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Plan</lx:path>
            <lx:label>Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Plan of Consolidation">
        <xs:annotation>
          <xs:documentation>Plan of Consolidation (VIC)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Plan of Consolidation</lx:path>
            <lx:label>Plan of Consolidation</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Plan of Subdivision">
        <xs:annotation>
          <xs:documentation>Plan of Subdivision (VIC)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Plan of Subdivision</lx:path>
            <lx:label>Plan of Subdivision</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Registered Plan">
        <xs:annotation>
          <xs:documentation>Registered Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Registered Plan</lx:path>
            <lx:label>Registered Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Road Plan">
        <xs:annotation>
          <xs:documentation>Road Plan (SA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Road Plan</lx:path>
            <lx:label>Road Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Strata Plan">
        <xs:annotation>
          <xs:documentation>Strata Plan (NSW, SA, WA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Strata Plan</lx:path>
            <lx:label>Strata Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Stratum Plan (South Bank)">
        <xs:annotation>
          <xs:documentation>Stratum Plan (South Bank) (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Stratum Plan (South Bank)</lx:path>
            <lx:label>Stratum Plan (South Bank)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Stratum Plan of Amalgamation (South Bank)">
        <xs:annotation>
          <xs:documentation>Stratum Plan of Amalgamation (South Bank) (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Stratum Plan of Amalgamation (South Bank)</lx:path>
            <lx:label>Stratum Plan of Amalgamation (South Bank)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Stratum Plan of Subdivision (South Bank)">
        <xs:annotation>
          <xs:documentation>Stratum Plan of Subdivision (South Bank) (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Stratum Plan of Subdivision (South Bank)</lx:path>
            <lx:label>Stratum Plan of Subdivision (South Bank)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Survey Plan">
        <xs:annotation>
          <xs:documentation>Survey Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Survey Plan</lx:path>
            <lx:label>Survey Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Survey Strata Plan">
        <xs:annotation>
          <xs:documentation>Survey Strata Plan (WA)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Survey Strata Plan</lx:path>
            <lx:label>Survey Strata Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Town Plan">
        <xs:annotation>
          <xs:documentation>Town Plan (SA, VIC)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Town Plan</lx:path>
            <lx:label>Town Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Upper Building Unit Plan">
        <xs:annotation>
          <xs:documentation>Upper Building Unit Plan (QLD)</xs:documentation>
          <xs:appinfo>
            <lx:path>planTypeList.Upper Building Unit Plan</lx:path>
            <lx:label>Upper Building Unit Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="poBoxTypeList">
    <xs:annotation>
      <xs:documentation>poBoxTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>poBoxTypeList</lx:path>
        <lx:label>PO Box Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Community Mail Bag">
        <xs:annotation>
          <xs:documentation>Community Mail Bag</xs:documentation>
          <xs:appinfo>
            <lx:path>poBoxTypeList.Community Mail Bag</lx:path>
            <lx:label>Community Mail Bag (CMB)</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Counter Delivery">
        <xs:annotation>
          <xs:documentation>Counter Delivery</xs:documentation>
          <xs:appinfo>
            <lx:path>poBoxTypeList.Counter Delivery</lx:path>
            <lx:label>Counter Delivery</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PO Box">
        <xs:annotation>
          <xs:documentation>PO Box</xs:documentation>
          <xs:appinfo>
            <lx:path>poBoxTypeList.PO Box</lx:path>
            <lx:label>PO Box</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Poste Restante">
        <xs:annotation>
          <xs:documentation>Poste Restante</xs:documentation>
          <xs:appinfo>
            <lx:path>poBoxTypeList.Poste Restante</lx:path>
            <lx:label>Poste Restante</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Private Bag">
        <xs:annotation>
          <xs:documentation>Private Bag</xs:documentation>
          <xs:appinfo>
            <lx:path>poBoxTypeList.Private Bag</lx:path>
            <lx:label>Private Bag</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Response Bag">
        <xs:annotation>
          <xs:documentation>Response Bag</xs:documentation>
          <xs:appinfo>
            <lx:path>poBoxTypeList.Response Bag</lx:path>
            <lx:label>Response Bag</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="primaryPurposeLoanPurposeList">
    <xs:annotation>
      <xs:documentation>primaryPurposeLoanPurposeList</xs:documentation>
      <xs:appinfo>
        <lx:path>primaryPurposeLoanPurposeList</lx:path>
        <lx:label>Primary Purpose Loan Purpose List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Business">
        <xs:annotation>
          <xs:documentation>Primarily for business or other commercial purposes.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeLoanPurposeList.Business</lx:path>
            <lx:label>Business</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Investment Non Residential">
        <xs:annotation>
          <xs:documentation>Primarily for investment purposes other than investment in residential property.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeLoanPurposeList.Investment Non Residential</lx:path>
            <lx:label>Investment Non Residential</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Investment Residential">
        <xs:annotation>
          <xs:documentation>Primarily for the purchase, refinance, renovation or improvement of residential property used for investment purposes.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeLoanPurposeList.Investment Residential</lx:path>
            <lx:label>Investment Residential</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Owner Occupied">
        <xs:annotation>
          <xs:documentation>Primarily for the purchase, refinance, renovation or improvement of owner occupied residential property.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeLoanPurposeList.Owner Occupied</lx:path>
            <lx:label>Owner Occupied</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Personal">
        <xs:annotation>
          <xs:documentation>Primarily for personal, domestic or household purposes.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeLoanPurposeList.Personal</lx:path>
            <lx:label>Personal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="primaryPurposeRealEstateAssetList">
    <xs:annotation>
      <xs:documentation>primaryPurposeRealEstateAssetList</xs:documentation>
      <xs:appinfo>
        <lx:path>primaryPurposeRealEstateAssetList</lx:path>
        <lx:label>Primary Purpose Real Estate Asset List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Business">
        <xs:annotation>
          <xs:documentation>The property is owned for the primary purpose as a business premises for the owners.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeRealEstateAssetList.Business</lx:path>
            <lx:label>Business</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Investment">
        <xs:annotation>
          <xs:documentation>The property is owned for the primary purpose of an investment for the owners.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeRealEstateAssetList.Investment</lx:path>
            <lx:label>Investment</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Owner Occupied">
        <xs:annotation>
          <xs:documentation>The property is owned for the primary purpose as a residence for the owners.</xs:documentation>
          <xs:appinfo>
            <lx:path>primaryPurposeRealEstateAssetList.Owner Occupied</lx:path>
            <lx:label>Owner Occupied</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="proportionsList">
    <xs:annotation>
      <xs:documentation>proportionsList</xs:documentation>
      <xs:appinfo>
        <lx:path>proportionsList</lx:path>
        <lx:label>Proportions List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Equal">
        <xs:annotation>
          <xs:documentation>Equal</xs:documentation>
          <xs:appinfo>
            <lx:path>proportionsList.Equal</lx:path>
            <lx:label>Equal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Not Specified">
        <xs:annotation>
          <xs:documentation>Not Specified</xs:documentation>
          <xs:appinfo>
            <lx:path>proportionsList.Not Specified</lx:path>
            <lx:label>Not Specified</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Specified">
        <xs:annotation>
          <xs:documentation>Specified</xs:documentation>
          <xs:appinfo>
            <lx:path>proportionsList.Specified</lx:path>
            <lx:label>Specified</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="realEstateAssetStatusList">
    <xs:annotation>
      <xs:documentation>realEstateAssetStatusList</xs:documentation>
      <xs:appinfo>
        <lx:path>realEstateAssetStatusList</lx:path>
        <lx:label>Real Estate Asset Status List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Established">
        <xs:annotation>
          <xs:documentation>The dwelling on the property is an established home i.e. not newly constructed.</xs:documentation>
          <xs:appinfo>
            <lx:path>realEstateAssetStatusList.Established</lx:path>
            <lx:label>Established</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="New Building">
        <xs:annotation>
          <xs:documentation>The dwelling on the property is newly constructed.</xs:documentation>
          <xs:appinfo>
            <lx:path>realEstateAssetStatusList.New Building</lx:path>
            <lx:label>New Building</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Off the Plan">
        <xs:annotation>
          <xs:documentation>A new construction that will be completed by the time of settlement.</xs:documentation>
          <xs:appinfo>
            <lx:path>realEstateAssetStatusList.Off the Plan</lx:path>
            <lx:label>Off the Plan</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Vacant Land">
        <xs:annotation>
          <xs:documentation>There is no dwelling on the property.</xs:documentation>
          <xs:appinfo>
            <lx:path>realEstateAssetStatusList.Vacant Land</lx:path>
            <lx:label>Vacant Land</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="repaymentFrequencyList">
    <xs:annotation>
      <xs:documentation>repaymentFrequencyList</xs:documentation>
      <xs:appinfo>
        <lx:path>repaymentFrequencyList</lx:path>
        <lx:label>Repayment Frequency List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Daily">
        <xs:annotation>
          <xs:documentation>Daily</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Daily</lx:path>
            <lx:label>Daily</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fortnightly">
        <xs:annotation>
          <xs:documentation>Fortnightly</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Fortnightly</lx:path>
            <lx:label>Fortnightly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Half Yearly">
        <xs:annotation>
          <xs:documentation>Half Yearly</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Half Yearly</lx:path>
            <lx:label>Half Yearly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Monthly">
        <xs:annotation>
          <xs:documentation>Monthly</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Monthly</lx:path>
            <lx:label>Monthly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="One Off">
        <xs:annotation>
          <xs:documentation>One Off</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.One Off</lx:path>
            <lx:label>One Off</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Quarterly">
        <xs:annotation>
          <xs:documentation>Quarterly</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Quarterly</lx:path>
            <lx:label>Quarterly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Seasonal">
        <xs:annotation>
          <xs:documentation>Seasonal</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Seasonal</lx:path>
            <lx:label>Seasonal</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Weekly">
        <xs:annotation>
          <xs:documentation>Weekly</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Weekly</lx:path>
            <lx:label>Weekly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Yearly">
        <xs:annotation>
          <xs:documentation>Yearly</xs:documentation>
          <xs:appinfo>
            <lx:path>repaymentFrequencyList.Yearly</lx:path>
            <lx:label>Yearly</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="residencyStatusList">
    <xs:annotation>
      <xs:documentation>residencyStatusList</xs:documentation>
      <xs:appinfo>
        <lx:path>residencyStatusList</lx:path>
        <lx:label>Residency Status List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Non Resident">
        <xs:annotation>
          <xs:documentation>Non Resident</xs:documentation>
          <xs:appinfo>
            <lx:path>residencyStatusList.Non Resident</lx:path>
            <lx:label>Non Resident</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Permanently in New Zealand">
        <xs:annotation>
          <xs:documentation>Permanently in New Zealand</xs:documentation>
          <xs:appinfo>
            <lx:path>residencyStatusList.Permanently in New Zealand</lx:path>
            <lx:label>Permanently in New Zealand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Temporarily in New Zealand">
        <xs:annotation>
          <xs:documentation>Temporarily in New Zealand</xs:documentation>
          <xs:appinfo>
            <lx:path>residencyStatusList.Temporarily in New Zealand</lx:path>
            <lx:label>Temporarily in New Zealand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shareTypeList">
    <xs:annotation>
      <xs:documentation>shareTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>shareTypeList</lx:path>
        <lx:label>Share Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Bearer Securities">
        <xs:annotation>
          <xs:documentation>Bearer Securities</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Bearer Securities</lx:path>
            <lx:label>Bearer Securities</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Debentures">
        <xs:annotation>
          <xs:documentation>Debentures</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Debentures</lx:path>
            <lx:label>Debentures</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Inscribed Stock Cth">
        <xs:annotation>
          <xs:documentation>Inscribed Stock Cth</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Inscribed Stock Cth</lx:path>
            <lx:label>Inscribed Stock Cth</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Inscribed Stock State">
        <xs:annotation>
          <xs:documentation>Inscribed Stock State</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Inscribed Stock State</lx:path>
            <lx:label>Inscribed Stock State</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Listed Shares">
        <xs:annotation>
          <xs:documentation>Listed Shares</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Listed Shares</lx:path>
            <lx:label>Listed Shares</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Options">
        <xs:annotation>
          <xs:documentation>Options</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Options</lx:path>
            <lx:label>Options</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unlisted Shares">
        <xs:annotation>
          <xs:documentation>Unlisted Shares</xs:documentation>
          <xs:appinfo>
            <lx:path>shareTypeList.Unlisted Shares</lx:path>
            <lx:label>Unlisted Shares</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="streetTypeList">
    <xs:annotation>
      <xs:documentation>streetTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>streetTypeList</lx:path>
        <lx:label>Street Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Access">
        <xs:annotation>
          <xs:documentation>Access</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Access</lx:path>
            <lx:label>Access</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Accessway">
        <xs:annotation>
          <xs:documentation>Accessway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Accessway</lx:path>
            <lx:label>Accessway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Alley">
        <xs:annotation>
          <xs:documentation>Alley</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Alley</lx:path>
            <lx:label>Alley</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Anchorage">
        <xs:annotation>
          <xs:documentation>Anchorage</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Anchorage</lx:path>
            <lx:label>Anchorage</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Approach">
        <xs:annotation>
          <xs:documentation>Approach</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Approach</lx:path>
            <lx:label>Approach</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Arcade">
        <xs:annotation>
          <xs:documentation>Arcade</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Arcade</lx:path>
            <lx:label>Arcade</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Arch">
        <xs:annotation>
          <xs:documentation>Arch</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Arch</lx:path>
            <lx:label>Arch</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Avenue">
        <xs:annotation>
          <xs:documentation>Avenue</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Avenue</lx:path>
            <lx:label>Avenue</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bank">
        <xs:annotation>
          <xs:documentation>Bank</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Bank</lx:path>
            <lx:label>Bank</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bay">
        <xs:annotation>
          <xs:documentation>Bay</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Bay</lx:path>
            <lx:label>Bay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Beach">
        <xs:annotation>
          <xs:documentation>Beach</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Beach</lx:path>
            <lx:label>Beach</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Belt">
        <xs:annotation>
          <xs:documentation>Belt</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Belt</lx:path>
            <lx:label>Belt</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bend">
        <xs:annotation>
          <xs:documentation>Bend</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Bend</lx:path>
            <lx:label>Bend</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bluff">
        <xs:annotation>
          <xs:documentation>Bluff</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Bluff</lx:path>
            <lx:label>Bluff</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Boulevard">
        <xs:annotation>
          <xs:documentation>Boulevard</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Boulevard</lx:path>
            <lx:label>Boulevard</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Brae">
        <xs:annotation>
          <xs:documentation>Brae</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Brae</lx:path>
            <lx:label>Brae</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Briars">
        <xs:annotation>
          <xs:documentation>Briars</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Briars</lx:path>
            <lx:label>Briars</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bridge">
        <xs:annotation>
          <xs:documentation>Bridge</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Bridge</lx:path>
            <lx:label>Bridge</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Bypass">
        <xs:annotation>
          <xs:documentation>Bypass</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Bypass</lx:path>
            <lx:label>Bypass</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Centre">
        <xs:annotation>
          <xs:documentation>Centre</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Centre</lx:path>
            <lx:label>Centre</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Chase">
        <xs:annotation>
          <xs:documentation>Chase</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Chase</lx:path>
            <lx:label>Chase</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Circle">
        <xs:annotation>
          <xs:documentation>Circle</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Circle</lx:path>
            <lx:label>Circle</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Circus">
        <xs:annotation>
          <xs:documentation>Circus</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Circus</lx:path>
            <lx:label>Circus</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Claim">
        <xs:annotation>
          <xs:documentation>Claim</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Claim</lx:path>
            <lx:label>Claim</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Close">
        <xs:annotation>
          <xs:documentation>Close</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Close</lx:path>
            <lx:label>Close</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Common">
        <xs:annotation>
          <xs:documentation>Common</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Common</lx:path>
            <lx:label>Common</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Court">
        <xs:annotation>
          <xs:documentation>Court</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Court</lx:path>
            <lx:label>Court</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Courts">
        <xs:annotation>
          <xs:documentation>Courts</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Courts</lx:path>
            <lx:label>Courts</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Cove">
        <xs:annotation>
          <xs:documentation>Cove</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Cove</lx:path>
            <lx:label>Cove</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Creek">
        <xs:annotation>
          <xs:documentation>Creek</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Creek</lx:path>
            <lx:label>Creek</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Crescent">
        <xs:annotation>
          <xs:documentation>Crescent</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Crescent</lx:path>
            <lx:label>Crescent</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Crest">
        <xs:annotation>
          <xs:documentation>Crest</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Crest</lx:path>
            <lx:label>Crest</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Cul">
        <xs:annotation>
          <xs:documentation>Cul</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Cul</lx:path>
            <lx:label>Cul</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Dale">
        <xs:annotation>
          <xs:documentation>Dale</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Dale</lx:path>
            <lx:label>Dale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Dell">
        <xs:annotation>
          <xs:documentation>Dell</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Dell</lx:path>
            <lx:label>Dell</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Downs">
        <xs:annotation>
          <xs:documentation>Downs</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Downs</lx:path>
            <lx:label>Downs</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Drive">
        <xs:annotation>
          <xs:documentation>Drive</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Drive</lx:path>
            <lx:label>Drive</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Dune">
        <xs:annotation>
          <xs:documentation>Dune</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Dune</lx:path>
            <lx:label>Dune</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Elm">
        <xs:annotation>
          <xs:documentation>Elm</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Elm</lx:path>
            <lx:label>Elm</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="End">
        <xs:annotation>
          <xs:documentation>End</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.End</lx:path>
            <lx:label>End</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Entrance">
        <xs:annotation>
          <xs:documentation>Entrance</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Entrance</lx:path>
            <lx:label>Entrance</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Esplanade">
        <xs:annotation>
          <xs:documentation>Esplanade</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Esplanade</lx:path>
            <lx:label>Esplanade</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Estate">
        <xs:annotation>
          <xs:documentation>Estate</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Estate</lx:path>
            <lx:label>Estate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fairway">
        <xs:annotation>
          <xs:documentation>Fairway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Fairway</lx:path>
            <lx:label>Fairway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fall">
        <xs:annotation>
          <xs:documentation>Fall</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Fall</lx:path>
            <lx:label>Fall</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fare">
        <xs:annotation>
          <xs:documentation>Fare</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Fare</lx:path>
            <lx:label>Fare</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Farms">
        <xs:annotation>
          <xs:documentation>Farms</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Farms</lx:path>
            <lx:label>Farms</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fen">
        <xs:annotation>
          <xs:documentation>Fen</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Fen</lx:path>
            <lx:label>Fen</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Fern">
        <xs:annotation>
          <xs:documentation>Fern</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Fern</lx:path>
            <lx:label>Fern</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Flat">
        <xs:annotation>
          <xs:documentation>Flat</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Flat</lx:path>
            <lx:label>Flat</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Flats">
        <xs:annotation>
          <xs:documentation>Flats</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Flats</lx:path>
            <lx:label>Flats</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Garden">
        <xs:annotation>
          <xs:documentation>Garden</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Garden</lx:path>
            <lx:label>Garden</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Gardens">
        <xs:annotation>
          <xs:documentation>Gardens</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Gardens</lx:path>
            <lx:label>Gardens</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Gate">
        <xs:annotation>
          <xs:documentation>Gate</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Gate</lx:path>
            <lx:label>Gate</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Glade">
        <xs:annotation>
          <xs:documentation>Glade</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Glade</lx:path>
            <lx:label>Glade</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Glen">
        <xs:annotation>
          <xs:documentation>Glen</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Glen</lx:path>
            <lx:label>Glen</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Grange">
        <xs:annotation>
          <xs:documentation>Grange</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Grange</lx:path>
            <lx:label>Grange</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Green">
        <xs:annotation>
          <xs:documentation>Green</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Green</lx:path>
            <lx:label>Green</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Grove">
        <xs:annotation>
          <xs:documentation>Grove</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Grove</lx:path>
            <lx:label>Grove</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Gully">
        <xs:annotation>
          <xs:documentation>Gully</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Gully</lx:path>
            <lx:label>Gully</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Haven">
        <xs:annotation>
          <xs:documentation>Haven</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Haven</lx:path>
            <lx:label>Haven</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Head">
        <xs:annotation>
          <xs:documentation>Head</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Head</lx:path>
            <lx:label>Head</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Heights">
        <xs:annotation>
          <xs:documentation>Heights</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Heights</lx:path>
            <lx:label>Heights</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Highway">
        <xs:annotation>
          <xs:documentation>Highway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Highway</lx:path>
            <lx:label>Highway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hill">
        <xs:annotation>
          <xs:documentation>Hill</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Hill</lx:path>
            <lx:label>Hill</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Island">
        <xs:annotation>
          <xs:documentation>Island</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Island</lx:path>
            <lx:label>Island</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Junction">
        <xs:annotation>
          <xs:documentation>Junction</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Junction</lx:path>
            <lx:label>Junction</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Key">
        <xs:annotation>
          <xs:documentation>Key</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Key</lx:path>
            <lx:label>Key</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Knob">
        <xs:annotation>
          <xs:documentation>Knob</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Knob</lx:path>
            <lx:label>Knob</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Ladder">
        <xs:annotation>
          <xs:documentation>Ladder</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Ladder</lx:path>
            <lx:label>Ladder</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Landing">
        <xs:annotation>
          <xs:documentation>Landing</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Landing</lx:path>
            <lx:label>Landing</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Lane">
        <xs:annotation>
          <xs:documentation>Lane</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Lane</lx:path>
            <lx:label>Lane</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Line">
        <xs:annotation>
          <xs:documentation>Line</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Line</lx:path>
            <lx:label>Line</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Link">
        <xs:annotation>
          <xs:documentation>Link</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Link</lx:path>
            <lx:label>Link</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Lookout">
        <xs:annotation>
          <xs:documentation>Lookout</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Lookout</lx:path>
            <lx:label>Lookout</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Loop">
        <xs:annotation>
          <xs:documentation>Loop</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Loop</lx:path>
            <lx:label>Loop</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mall">
        <xs:annotation>
          <xs:documentation>Mall</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Mall</lx:path>
            <lx:label>Mall</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mead">
        <xs:annotation>
          <xs:documentation>Mead</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Mead</lx:path>
            <lx:label>Mead</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Meadows">
        <xs:annotation>
          <xs:documentation>Meadows</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Meadows</lx:path>
            <lx:label>Meadows</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mews">
        <xs:annotation>
          <xs:documentation>Mews</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Mews</lx:path>
            <lx:label>Mews</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mile">
        <xs:annotation>
          <xs:documentation>Mile</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Mile</lx:path>
            <lx:label>Mile</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Motorway">
        <xs:annotation>
          <xs:documentation>Motorway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Motorway</lx:path>
            <lx:label>Motorway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Motu">
        <xs:annotation>
          <xs:documentation>Motu</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Motu</lx:path>
            <lx:label>Motu</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mount">
        <xs:annotation>
          <xs:documentation>Mount</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Mount</lx:path>
            <lx:label>Mount</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Neaves">
        <xs:annotation>
          <xs:documentation>Neaves</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Neaves</lx:path>
            <lx:label>Neaves</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Oaks">
        <xs:annotation>
          <xs:documentation>Oaks</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Oaks</lx:path>
            <lx:label>Oaks</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Paddock">
        <xs:annotation>
          <xs:documentation>Paddock</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Paddock</lx:path>
            <lx:label>Paddock</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Paku">
        <xs:annotation>
          <xs:documentation>Paku</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Paku</lx:path>
            <lx:label>Paku</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Parade">
        <xs:annotation>
          <xs:documentation>Parade</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Parade</lx:path>
            <lx:label>Parade</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Park">
        <xs:annotation>
          <xs:documentation>Park</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Park</lx:path>
            <lx:label>Park</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Parkway">
        <xs:annotation>
          <xs:documentation>Parkway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Parkway</lx:path>
            <lx:label>Parkway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Pass">
        <xs:annotation>
          <xs:documentation>Pass</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Pass</lx:path>
            <lx:label>Pass</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Passage">
        <xs:annotation>
          <xs:documentation>Passage</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Passage</lx:path>
            <lx:label>Passage</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Path">
        <xs:annotation>
          <xs:documentation>Path</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Path</lx:path>
            <lx:label>Path</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Place">
        <xs:annotation>
          <xs:documentation>Place</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Place</lx:path>
            <lx:label>Place</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Point">
        <xs:annotation>
          <xs:documentation>Point</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Point</lx:path>
            <lx:label>Point</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Priors">
        <xs:annotation>
          <xs:documentation>Priors</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Priors</lx:path>
            <lx:label>Priors</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Promenade">
        <xs:annotation>
          <xs:documentation>Promenade</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Promenade</lx:path>
            <lx:label>Promenade</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Quadrant">
        <xs:annotation>
          <xs:documentation>Quadrant</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Quadrant</lx:path>
            <lx:label>Quadrant</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Quay">
        <xs:annotation>
          <xs:documentation>Quay</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Quay</lx:path>
            <lx:label>Quay</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Reef">
        <xs:annotation>
          <xs:documentation>Reef</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Reef</lx:path>
            <lx:label>Reef</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Reserve">
        <xs:annotation>
          <xs:documentation>Reserve</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Reserve</lx:path>
            <lx:label>Reserve</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rest">
        <xs:annotation>
          <xs:documentation>Rest</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Rest</lx:path>
            <lx:label>Rest</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Retreat">
        <xs:annotation>
          <xs:documentation>Retreat</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Retreat</lx:path>
            <lx:label>Retreat</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Ridge">
        <xs:annotation>
          <xs:documentation>Ridge</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Ridge</lx:path>
            <lx:label>Ridge</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rise">
        <xs:annotation>
          <xs:documentation>Rise</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Rise</lx:path>
            <lx:label>Rise</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Road">
        <xs:annotation>
          <xs:documentation>Road</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Road</lx:path>
            <lx:label>Road</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Roads">
        <xs:annotation>
          <xs:documentation>Roads</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Roads</lx:path>
            <lx:label>Roads</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Roadway">
        <xs:annotation>
          <xs:documentation>Roadway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Roadway</lx:path>
            <lx:label>Roadway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Route">
        <xs:annotation>
          <xs:documentation>Route</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Route</lx:path>
            <lx:label>Route</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Row">
        <xs:annotation>
          <xs:documentation>Row</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Row</lx:path>
            <lx:label>Row</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Service Lane">
        <xs:annotation>
          <xs:documentation>Service Lane</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Service Lane</lx:path>
            <lx:label>Service Lane</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Slope">
        <xs:annotation>
          <xs:documentation>Slope</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Slope</lx:path>
            <lx:label>Slope</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Spa">
        <xs:annotation>
          <xs:documentation>Spa</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Spa</lx:path>
            <lx:label>Spa</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Spur">
        <xs:annotation>
          <xs:documentation>Spur</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Spur</lx:path>
            <lx:label>Spur</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Square">
        <xs:annotation>
          <xs:documentation>Square</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Square</lx:path>
            <lx:label>Square</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="State Highway">
        <xs:annotation>
          <xs:documentation>State Highway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.State Highway</lx:path>
            <lx:label>State Highway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Steep">
        <xs:annotation>
          <xs:documentation>Steep</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Steep</lx:path>
            <lx:label>Steep</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Steps">
        <xs:annotation>
          <xs:documentation>Steps</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Steps</lx:path>
            <lx:label>Steps</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Straight">
        <xs:annotation>
          <xs:documentation>Straight</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Straight</lx:path>
            <lx:label>Straight</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Strand">
        <xs:annotation>
          <xs:documentation>Strand</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Strand</lx:path>
            <lx:label>Strand</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Street">
        <xs:annotation>
          <xs:documentation>Street</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Street</lx:path>
            <lx:label>Street</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Terrace">
        <xs:annotation>
          <xs:documentation>Terrace</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Terrace</lx:path>
            <lx:label>Terrace</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Towers">
        <xs:annotation>
          <xs:documentation>Towers</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Towers</lx:path>
            <lx:label>Towers</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Track">
        <xs:annotation>
          <xs:documentation>Track</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Track</lx:path>
            <lx:label>Track</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Trail">
        <xs:annotation>
          <xs:documentation>Trail</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Trail</lx:path>
            <lx:label>Trail</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Tramway">
        <xs:annotation>
          <xs:documentation>Tramway</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Tramway</lx:path>
            <lx:label>Tramway</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Trees">
        <xs:annotation>
          <xs:documentation>Trees</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Trees</lx:path>
            <lx:label>Trees</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Vale">
        <xs:annotation>
          <xs:documentation>Vale</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Vale</lx:path>
            <lx:label>Vale</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Valley">
        <xs:annotation>
          <xs:documentation>Valley</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Valley</lx:path>
            <lx:label>Valley</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Venus">
        <xs:annotation>
          <xs:documentation>Venus</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Venus</lx:path>
            <lx:label>Venus</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="View">
        <xs:annotation>
          <xs:documentation>View</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.View</lx:path>
            <lx:label>View</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Views">
        <xs:annotation>
          <xs:documentation>Views</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Views</lx:path>
            <lx:label>Views</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Village">
        <xs:annotation>
          <xs:documentation>Village</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Village</lx:path>
            <lx:label>Village</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Villas">
        <xs:annotation>
          <xs:documentation>Villas</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Villas</lx:path>
            <lx:label>Villas</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Vista">
        <xs:annotation>
          <xs:documentation>Vista</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Vista</lx:path>
            <lx:label>Vista</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Vue">
        <xs:annotation>
          <xs:documentation>Vue</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Vue</lx:path>
            <lx:label>Vue</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Walk">
        <xs:annotation>
          <xs:documentation>Walk</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Walk</lx:path>
            <lx:label>Walk</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Waters">
        <xs:annotation>
          <xs:documentation>Waters</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Waters</lx:path>
            <lx:label>Waters</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Way">
        <xs:annotation>
          <xs:documentation>Way</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Way</lx:path>
            <lx:label>Way</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Wharf">
        <xs:annotation>
          <xs:documentation>Wharf</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Wharf</lx:path>
            <lx:label>Wharf</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Wynd">
        <xs:annotation>
          <xs:documentation>Wynd</xs:documentation>
          <xs:appinfo>
            <lx:path>streetTypeList.Wynd</lx:path>
            <lx:label>Wynd</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="totalTermTypeList">
    <xs:annotation>
      <xs:documentation>totalTermTypeList</xs:documentation>
      <xs:appinfo>
        <lx:path>totalTermTypeList</lx:path>
        <lx:label>Total Term Type List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Amortisation Term">
        <xs:annotation>
          <xs:documentation>The term specified is the amortisation term of the loan, being the period over which the amortising repayment is calculated.</xs:documentation>
          <xs:appinfo>
            <lx:path>totalTermTypeList.Amortisation Term</lx:path>
            <lx:label>Amortisation Term</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Total Term">
        <xs:annotation>
          <xs:documentation>The term specified is the total term of the loan, being the period at the end of which the loan principal must be repaid.</xs:documentation>
          <xs:appinfo>
            <lx:path>totalTermTypeList.Total Term</lx:path>
            <lx:label>Total Term</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="yesNoList">
    <xs:annotation>
      <xs:documentation>yesNoList</xs:documentation>
      <xs:appinfo>
        <lx:path>yesNoList</lx:path>
        <lx:label>Yes No List</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="No">
        <xs:annotation>
          <xs:documentation>No</xs:documentation>
          <xs:appinfo>
            <lx:path>yesNoList.No</lx:path>
            <lx:label>No</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Yes">
        <xs:annotation>
          <xs:documentation>Yes</xs:documentation>
          <xs:appinfo>
            <lx:path>yesNoList.Yes</lx:path>
            <lx:label>Yes</lx:label>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="bsbPattern">
    <xs:annotation>
      <xs:documentation>A pattern to restrict BSB values to be exactly 6 numerical digits.</xs:documentation>
      <xs:appinfo>
        <lx:path>bsbPattern</lx:path>
        <lx:label>BSB Pattern</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\\d{6}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="emailPattern">
    <xs:annotation>
      <xs:documentation>Messages distributed by electronic means from one computer user to one or more recipients via a network.</xs:documentation>
      <xs:appinfo>
        <lx:path>emailPattern</lx:path>
        <lx:label>Email Pattern</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value=".+@.+\\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nzbnPattern">
    <xs:annotation>
      <xs:documentation>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</xs:documentation>
      <xs:appinfo>
        <lx:path>nzbnPattern</lx:path>
        <lx:label>NZBN Pattern</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\\d{13}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nzPostCodePattern">
    <xs:annotation>
      <xs:documentation>A four digit numeric descriptor that helps to identify delivery addresses in New Zealand when there are the same or similar street and town names used nationwide.</xs:documentation>
      <xs:appinfo>
        <lx:path>nzPostCodePattern</lx:path>
        <lx:label>NZ Post Code Pattern</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\\d{4}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="currencyType">
    <xs:annotation>
      <xs:documentation>Local type that is based on a restriction of the decimal xml data type.</xs:documentation>
      <xs:appinfo>
        <lx:path>currencyType</lx:path>
        <lx:label>Currency Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:decimal"/>
  </xs:simpleType>
  <xs:simpleType name="dateTimeType">
    <xs:annotation>
      <xs:documentation>Local type that is based on a restriction of the dateTime xml data type.</xs:documentation>
      <xs:appinfo>
        <lx:path>dateTimeType</lx:path>
        <lx:label>Date Time Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:dateTime"/>
  </xs:simpleType>
  <xs:simpleType name="dateType">
    <xs:annotation>
      <xs:documentation>Local type that is based on a restriction of the date xml data type.</xs:documentation>
      <xs:appinfo>
        <lx:path>dateType</lx:path>
        <lx:label>Date Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:date"/>
  </xs:simpleType>
  <xs:simpleType name="gYearType">
    <xs:annotation>
      <xs:documentation>Local type that is based on a restriction of the gYear xml data type.</xs:documentation>
      <xs:appinfo>
        <lx:path>gYearType</lx:path>
        <lx:label>gYear Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:gYear"/>
  </xs:simpleType>
  <xs:simpleType name="integerType">
    <xs:annotation>
      <xs:documentation>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</xs:documentation>
      <xs:appinfo>
        <lx:path>integerType</lx:path>
        <lx:label>Integer Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:integer"/>
  </xs:simpleType>
  <xs:simpleType name="percentType">
    <xs:annotation>
      <xs:documentation>Local type that is a restriction of the decimal xml data type.</xs:documentation>
      <xs:appinfo>
        <lx:path>percentType</lx:path>
        <lx:label>Percent Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:decimal"/>
  </xs:simpleType>
  <xs:simpleType name="referenceType">
    <xs:annotation>
      <xs:documentation>Must point to a Unique ID</xs:documentation>
      <xs:appinfo>
        <lx:path>referenceType</lx:path>
        <lx:label>Reference Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:IDREF"/>
  </xs:simpleType>
  <xs:simpleType name="stringType">
    <xs:annotation>
      <xs:documentation>Local type that is a restriction of the string xml data type.</xs:documentation>
      <xs:appinfo>
        <lx:path>stringType</lx:path>
        <lx:label>String Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="uniqueIDType">
    <xs:annotation>
      <xs:documentation>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</xs:documentation>
      <xs:appinfo>
        <lx:path>uniqueIDType</lx:path>
        <lx:label>Unique ID Type</lx:label>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:ID"/>
  </xs:simpleType>
</xs:schema>
`;

unannotated_schema_string = `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:lx="lixi.org.au/schema/appinfo_elements" xmlns:li="lixi.org.au/schema/appinfo_instructions" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
  <xs:annotation>
    <xs:documentation>IMPORTANT: Copyright in this schema is owned by LIXI Limited and use of the schema is controlled by the LIXI End User Licence Agreement (EULA) which can be downloaded from http://www.lixi.org.au. The EULA does not permit you to extend the schema through the addition of new elements or attributes, or modify the content model or any data values in a manner that would be inconsistent with the Standard. However you are permitted to restrict the schema such that it specifies the structures for capturing only the information you wish to receive. This statement in no way limits or modifies the terms of the EULA, and you should ensure that you are familiar with your rights and obligations under the EULA before using the schema.</xs:documentation>
    <xs:documentation>This schema (LIXI-CNZ-Custom-annotated.xsd) is a customised schema (by restriction) from CNZ 2.1.31, a sub-schema derived from the LIXI Master Schema (LIXI-Master-2_2_58-draft-Annotated.xsd) that includes the annotation documentation.</xs:documentation>
    <xs:appinfo>
      <lx:schemadetail type="Custom" version="dev-wip" annotation="Full" lifecyclestage="Development" timestamp="2023_01_28-15_35" transaction="CNZ" masterschemasource="LIXI-Master-2_2_58-draft-Annotated.xsd" transactionschemasource="CNZ 2.1.31"/>
      <li:schemacustomisation>
        <li:Exclude>
          <li:path>addressType.DataSource</li:path>
          <li:path>addressType.Latitude</li:path>
          <li:path>addressType.LGAName</li:path>
          <li:path>addressType.Longitude</li:path>
          <li:path>addressType.OverseasPostCode</li:path>
          <li:path>addressType.OverseasState</li:path>
          <li:path>addressType.RuralDeliveryNumber</li:path>
          <li:path>addressType.SequenceNumber</li:path>
          <li:path>addressType.Suburb</li:path>
          <li:path>addressType.TBAAddress</li:path>
          <li:path>addressType.DeliveryPoint</li:path>
          <li:path>addressType.Standard.BuildingName</li:path>
          <li:path>addressType.Standard.Level</li:path>
          <li:path>addressType.Standard.StreetSuffix</li:path>
          <li:path>addressType.Standard.Unit</li:path>
          <li:path>financialAccountType.AccountTypeName</li:path>
          <li:path>financialAccountType.OtherFIName</li:path>
          <li:path>financialAccountType.SequenceNumber</li:path>
          <li:path>Package.UniqueID</li:path>
          <li:path>Package.Attachment</li:path>
          <li:path>Package.TransformMetadata</li:path>
          <li:path>Package.Content.NeedsAnalysis</li:path>
          <li:path>Package.Content.StatementOfPosition</li:path>
          <li:path>Package.Content.Application.UniqueID</li:path>
          <li:path>Package.Content.Application.AccountVariation</li:path>
          <li:path>Package.Content.Application.BusinessChannel</li:path>
          <li:path>Package.Content.Application.CompanyFinancials</li:path>
          <li:path>Package.Content.Application.CustomerTransactionAnalysis</li:path>
          <li:path>Package.Content.Application.Declarations</li:path>
          <li:path>Package.Content.Application.DepositAccountDetails</li:path>
          <li:path>Package.Content.Application.DetailedComment</li:path>
          <li:path>Package.Content.Application.Insurance</li:path>
          <li:path>Package.Content.Application.LendingGuarantee</li:path>
          <li:path>Package.Content.Application.MasterAgreement</li:path>
          <li:path>Package.Content.Application.OtherExpense</li:path>
          <li:path>Package.Content.Application.OtherIncome</li:path>
          <li:path>Package.Content.Application.Overview</li:path>
          <li:path>Package.Content.Application.ProductSet</li:path>
          <li:path>Package.Content.Application.SalesChannel</li:path>
          <li:path>Package.Content.Application.VendorTaxInvoice</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.AllowDirectMarketing</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.AllowThirdPartyDisclosure</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ApplicantType</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BusinessName</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BusinessNameSameAsCompanyName</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BusinessStructure</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.CompanyNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.CreditStatus</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.DateRegistered</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ExchangeListedOn</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ExemptStatus</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.GSTRegisteredDate</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IRDNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IsExistingCustomer</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IsHoldingCompany</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.LicenceNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NumberOfDirectors</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NumberOfPartners</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NumberOfShareholders</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.NZBNVerified</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.PrimaryApplicant</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.PublicAuthority</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ReasonForObtainingLoan</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.RegisteredForGST</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.RegisteredForLTC</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.RegisteredInCountry</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.SequenceNumber</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.TradingMoreThanTwoYears</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.TypeOfIncorporation</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.x_Accountant</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.x_SoleTrader</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.x_TradeReference</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.AuthorisedSignatory</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.BeneficialOwner</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Business</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Contact</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.CreditHistory</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.DeclaredIncome</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Director</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ExistingCustomer</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.FinancialAnalysis</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Income</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomePrevious</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomePrior</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomeRecent</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.IncomeYearToDate</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Partner</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Privacy</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.ResponsibleLending</li:path>
          <li:path>Package.Content.Application.CompanyApplicant.Shareholder</li:path>
          <li:path>Package.Content.Application.ContributionFunds.Description</li:path>
          <li:path>Package.Content.Application.ContributionFunds.Loan</li:path>
          <li:path>Package.Content.Application.ContributionFunds.SequenceNumber</li:path>
          <li:path>Package.Content.Application.ContributionFunds.UniqueID</li:path>
          <li:path>Package.Content.Application.ContributionFunds.x_AssociatedLoanAccount</li:path>
          <li:path>Package.Content.Application.ContributionFunds.x_FundsHeldInAccount</li:path>
          <li:path>Package.Content.Application.Funder.Amount</li:path>
          <li:path>Package.Content.Application.Funder.LicenceNumber</li:path>
          <li:path>Package.Content.Application.Funder.OtherIdentifier</li:path>
          <li:path>Package.Content.Application.Funder.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Funder.x_LoanDetails</li:path>
          <li:path>Package.Content.Application.Funder.Contact</li:path>
          <li:path>Package.Content.Application.Household.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.EducationExpenses</li:path>
          <li:path>Package.Content.Application.Household.Dependant.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.BrokerVerifiedExpense</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.BrokerVerifiedExpenseDetails</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.StatedLessThanCalculatedLivingExpensesDetails</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.TotalSystemCalculatedLivingExpenses</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.TotalUserStatedLivingExpenses</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.Description</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.EndDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.StartDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.LivingExpense.PercentResponsible</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.Description</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.EndDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.StartDate</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.UniqueID</li:path>
          <li:path>Package.Content.Application.Household.ExpenseDetails.OtherCommitment.PercentResponsible</li:path>
          <li:path>Package.Content.Application.Liability.BuyNowPayLater</li:path>
          <li:path>Package.Content.Application.Liability.ClearingFromOtherSourceAmount</li:path>
          <li:path>Package.Content.Application.Liability.ClearingFromThisLoanAmount</li:path>
          <li:path>Package.Content.Application.Liability.CreditCardType</li:path>
          <li:path>Package.Content.Application.Liability.CreditLimit</li:path>
          <li:path>Package.Content.Application.Liability.CreditRiskGrade</li:path>
          <li:path>Package.Content.Application.Liability.Description</li:path>
          <li:path>Package.Content.Application.Liability.FastRefinance</li:path>
          <li:path>Package.Content.Application.Liability.HasArrears</li:path>
          <li:path>Package.Content.Application.Liability.HasPreviousArrears</li:path>
          <li:path>Package.Content.Application.Liability.HasUndrawnFunds</li:path>
          <li:path>Package.Content.Application.Liability.LimitExceededCurrently</li:path>
          <li:path>Package.Content.Application.Liability.LimitExceededPreviously</li:path>
          <li:path>Package.Content.Application.Liability.LVR</li:path>
          <li:path>Package.Content.Application.Liability.NegativelyGeared</li:path>
          <li:path>Package.Content.Application.Liability.NegativelyGearedPercentage</li:path>
          <li:path>Package.Content.Application.Liability.NewLimit</li:path>
          <li:path>Package.Content.Application.Liability.OriginalLoanPurpose</li:path>
          <li:path>Package.Content.Application.Liability.OriginationDate</li:path>
          <li:path>Package.Content.Application.Liability.OriginatorReferenceID</li:path>
          <li:path>Package.Content.Application.Liability.Overdrawn</li:path>
          <li:path>Package.Content.Application.Liability.ProductCode</li:path>
          <li:path>Package.Content.Application.Liability.RefinanceAmount</li:path>
          <li:path>Package.Content.Application.Liability.RefinanceCosts</li:path>
          <li:path>Package.Content.Application.Liability.RepaidDate</li:path>
          <li:path>Package.Content.Application.Liability.RevertInterestRate</li:path>
          <li:path>Package.Content.Application.Liability.Suspended</li:path>
          <li:path>Package.Content.Application.Liability.Arrears</li:path>
          <li:path>Package.Content.Application.Liability.ContinuingRepayment</li:path>
          <li:path>Package.Content.Application.Liability.DiscountMargin</li:path>
          <li:path>Package.Content.Application.Liability.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.Liability.Package</li:path>
          <li:path>Package.Content.Application.Liability.PublicAuthorityOwed</li:path>
          <li:path>Package.Content.Application.Liability.RateComposition</li:path>
          <li:path>Package.Content.Application.Liability.Software</li:path>
          <li:path>Package.Content.Application.Liability.PercentOwned.Owner.OwnerType</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.LoanPaymentScheduleType</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.PaymentTiming</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.PaymentType</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.Regular</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.RemainingRepayments</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.TaxDeductible</li:path>
          <li:path>Package.Content.Application.Liability.Repayment.UniqueID</li:path>
          <li:path>Package.Content.Application.Liability.Security.MortgageNumber</li:path>
          <li:path>Package.Content.Application.Liability.Security.Priority</li:path>
          <li:path>Package.Content.Application.Liability.Security.PriorityAmount</li:path>
          <li:path>Package.Content.Application.Liability.Security.MortgagorDetails</li:path>
          <li:path>Package.Content.Application.Liability.Security.SecurityAgreement</li:path>
          <li:path>Package.Content.Application.LoanDetails.BalloonRepaymentAmount</li:path>
          <li:path>Package.Content.Application.LoanDetails.BalloonRepaymentDate</li:path>
          <li:path>Package.Content.Application.LoanDetails.BuyNowPayLater</li:path>
          <li:path>Package.Content.Application.LoanDetails.Funder</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanType</li:path>
          <li:path>Package.Content.Application.LoanDetails.LVR</li:path>
          <li:path>Package.Content.Application.LoanDetails.MainProduct</li:path>
          <li:path>Package.Content.Application.LoanDetails.NegativelyGeared</li:path>
          <li:path>Package.Content.Application.LoanDetails.NominateBalloonRepayment</li:path>
          <li:path>Package.Content.Application.LoanDetails.OriginatorReferenceID</li:path>
          <li:path>Package.Content.Application.LoanDetails.ProposedAnnualInterestRate</li:path>
          <li:path>Package.Content.Application.LoanDetails.RevertInterestRate</li:path>
          <li:path>Package.Content.Application.LoanDetails.Secured</li:path>
          <li:path>Package.Content.Application.LoanDetails.SequenceNumber</li:path>
          <li:path>Package.Content.Application.LoanDetails.SpecialConcessionCode</li:path>
          <li:path>Package.Content.Application.LoanDetails.StatementCycle</li:path>
          <li:path>Package.Content.Application.LoanDetails.TaxDeductible</li:path>
          <li:path>Package.Content.Application.LoanDetails.TemplateID</li:path>
          <li:path>Package.Content.Application.LoanDetails.x_MasterAgreement</li:path>
          <li:path>Package.Content.Application.LoanDetails.AuthorityToOperate</li:path>
          <li:path>Package.Content.Application.LoanDetails.Borrowers</li:path>
          <li:path>Package.Content.Application.LoanDetails.BulkReduction</li:path>
          <li:path>Package.Content.Application.LoanDetails.Commission</li:path>
          <li:path>Package.Content.Application.LoanDetails.DiscountMargin</li:path>
          <li:path>Package.Content.Application.LoanDetails.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.LoanDetails.DSH</li:path>
          <li:path>Package.Content.Application.LoanDetails.EquityRelease</li:path>
          <li:path>Package.Content.Application.LoanDetails.FeaturesSelected</li:path>
          <li:path>Package.Content.Application.LoanDetails.FundsDisbursement</li:path>
          <li:path>Package.Content.Application.LoanDetails.Guarantor</li:path>
          <li:path>Package.Content.Application.LoanDetails.Package</li:path>
          <li:path>Package.Content.Application.LoanDetails.ProposedRepayment</li:path>
          <li:path>Package.Content.Application.LoanDetails.RateComposition</li:path>
          <li:path>Package.Content.Application.LoanDetails.Software</li:path>
          <li:path>Package.Content.Application.LoanDetails.SupplementaryCardholder</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.ABSLendingPurpose</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.Description</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.IncludesRefinancing</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.LenderCode</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.PurposeOfFunds</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.RefinancingReason</li:path>
          <li:path>Package.Content.Application.LoanDetails.LendingPurpose.UniqueID</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanPurpose.NCCPStatus</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanPurpose.Occupancy</li:path>
          <li:path>Package.Content.Application.LoanDetails.LoanPurpose.OwnerBuilderApplication</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.Priority</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.SequenceNumber</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.UniqueID</li:path>
          <li:path>Package.Content.Application.LoanDetails.Security.SecurityAgreement</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.LoanReviewDate</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.InterestOnlyReason</li:path>
          <li:path>Package.Content.Application.LoanDetails.Term.LoanReviewPeriod</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ContractOfSale</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Encumbered</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialTransactionType</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.PrimarySecurity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ToBeSold</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ToBeUsedAsSecurity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Transaction</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.x_VendorTaxInvoice</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.AgriculturalAsset</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Aircraft</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Business</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.CleaningEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ContractDetails</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Encumbrance</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Insurance</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Licence</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MedicalEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MobileComputing</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.OfficeEquipment</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.OtherAsset</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.PPSR</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.ToolsOfTrade</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.Watercraft</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.WaterRights</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVAmount</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVInputPattern</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVPercent</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.EstimatedCGTLiability</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.MinimumResidualValue</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.TaxDepreciationMethod</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.EstimatedValue.TaxDepreciationRate</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Description</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.TransferOwnershipToSMSF</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.ClassOfShare</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.AdditionalIDType</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.AdditionalIDValue</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Age</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Badge</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Body</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Colour</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Condition</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.ConditionDescription</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Cylinders</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Description</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Doors</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EffectiveLife</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineCapacity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineHoursTotal</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineID</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.ExcessUsageCalculationMethod</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.FuelType</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.IncludedUsage</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Kilometres</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Options</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.OtherInformation</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Quantity</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.RegistrationExpiryDate</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.SerialNumber</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Series</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Subtype</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Transmission</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Type</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.UsageAtStart</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.UsageUnitOfMeasurement</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.Variant</li:path>
          <li:path>Package.Content.Application.NonRealEstateAsset.MotorVehicle.x_GoodToBeUsedAddress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Citizenship</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CompanyDirector</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CountryOfBirth</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CreditStatus</li:path>
          <li:path>Package.Content.Application.PersonApplicant.DateOfCitizenship</li:path>
          <li:path>Package.Content.Application.PersonApplicant.DiscussedWithBeneficiaries</li:path>
          <li:path>Package.Content.Application.PersonApplicant.EligibleForFHOG</li:path>
          <li:path>Package.Content.Application.PersonApplicant.EligibleForKaingaOra</li:path>
          <li:path>Package.Content.Application.PersonApplicant.FirstHomeBuyer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Gender</li:path>
          <li:path>Package.Content.Application.PersonApplicant.HasAWill</li:path>
          <li:path>Package.Content.Application.PersonApplicant.HasPreviousName</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Immigrant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ImmigrationDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IndependentFinancialAdvice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IndependentLegalAdvice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IRDNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IsExistingCustomer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.IsLenderStaff</li:path>
          <li:path>Package.Content.Application.PersonApplicant.JointNomination</li:path>
          <li:path>Package.Content.Application.PersonApplicant.JointStatementOfPosition</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MonthsInCurrentProfession</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MothersMaidenName</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PlaceOfBirth</li:path>
          <li:path>Package.Content.Application.PersonApplicant.POAGranted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PrimaryApplicant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PrincipalForeignResidence</li:path>
          <li:path>Package.Content.Application.PersonApplicant.UnderDuress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.UnderstandApplication</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_Household</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_PersonalReference</li:path>
          <li:path>Package.Content.Application.PersonApplicant.x_Solicitor</li:path>
          <li:path>Package.Content.Application.PersonApplicant.YearsInCurrentProfession</li:path>
          <li:path>Package.Content.Application.PersonApplicant.AdditionalCitizenship</li:path>
          <li:path>Package.Content.Application.PersonApplicant.AdditionalForeignResidency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.CreditHistory</li:path>
          <li:path>Package.Content.Application.PersonApplicant.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ExistingCustomer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Insurance</li:path>
          <li:path>Package.Content.Application.PersonApplicant.NextOfKin</li:path>
          <li:path>Package.Content.Application.PersonApplicant.NominatedBorrower</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PowerOfAttorney</li:path>
          <li:path>Package.Content.Application.PersonApplicant.PreviousName</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Privacy</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ResponsibleLending</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Will</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreferredContact</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PostSettlementAddress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PriorAddress</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.HousingStatus</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.StartDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.CurrentAddress.x_Landlord</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.EmailAddress.UniqueID</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.EndDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.HousingStatus</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Contact.PreviousAddress.StartDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.AverageHoursPerWeek</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.CompanyCar</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.CustomIndustryCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.CustomOccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.EmployerType</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.GICSCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Industry</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.MainBusinessActivity</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.OnProbation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.PositionTitle</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.ProbationDateEnds</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.ProbationDateStarts</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.RelatedEmployer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.JobseekerSupportAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.JobseekerSupportFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetGovernmentBenefitsAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetGovernmentBenefitsFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetJobseekerSupportAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetJobseekerSupportFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetOtherIncomeAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetOtherIncomeFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetPrivatePensionAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetPrivatePensionFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetSuperannuationAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetSuperannuationFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.ProofCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.ProofSighted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.SMSF</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.ANZSCOOccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.AverageHoursPerWeek</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.CompanyCar</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.CustomIndustryCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.EmployerType</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.GICSCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Industry</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.IndustryCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.KiwiSaver</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.KiwiSaverPercentage</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.MainBusinessActivity</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.NewZealandBICCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.OccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.OnProbation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.PositionTitle</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.ProbationDateEnds</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.RelatedEmployer</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.BonusAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.BonusFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossRegularOvertimeAmountConditionOfEmployment</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetBonusAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetBonusFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCarAllowanceAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCarAllowanceFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCommissionAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCommissionFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetRegularOvertimeAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetRegularOvertimeFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetSalaryAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetSalaryFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkAllowanceAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkAllowanceFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkersCompensationAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkersCompensationFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.ProofCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.ProofSighted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkAllowanceAmountConditionOfEmployment</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkersCompensationAmount</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkersCompensationFrequency</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.ANZSCOOccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.AverageHoursPerWeek</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Basis</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.OccupationCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Status</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Business</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.DeclaredIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.IncomeGreaterThanPreviousYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.TaxOfficeAssessments</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.IncomeGreaterThanPreviousYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.TaxOfficeAssessments</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.IncomeGreaterThanPreviousYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProofCode</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProofSighted</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.TaxOfficeAssessments</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.x_Accountant</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.AmortisationOfGoodwill</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.CarryForwardLosses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Depreciation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.HomeOffice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.NonCashBenefits</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.NonRecurringExpenses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.SuperannuationExcess</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.HasForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ForeignSourcedIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.AmortisationOfGoodwill</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.CarryForwardLosses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Depreciation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.HomeOffice</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.NonCashBenefits</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.NonRecurringExpenses</li:path>
          <li:path>Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.SuperannuationExcess</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.MaritalStatusChangeDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.SpouseEarnsIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.MaritalStatusDetails.SpouseGrossIncome</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.AustralianStateOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.CardNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.CertifiedCopy</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.CountryOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DateDocumentVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DateOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DOBVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.DocumentCategory</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ExpiryDate</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ExpiryMonth</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ExpiryYear</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.IsPreviousNameIdentification</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.IssuingOrganisation</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.MiddleNameOnDocument</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.NameOnDocument</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.NameVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.Original</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.OtherDescription</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.PhotographVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.PlaceOfIssue</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.ResidentialAddressVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.SequenceNumber</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.SignatureVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.UniqueID</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.x_AddressOnDocument</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.x_LocationDocumentVerified</li:path>
          <li:path>Package.Content.Application.PersonApplicant.ProofOfIdentity.Attachment</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ApprovalInPrinciple</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Construction</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractOfSale</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.DataSource</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbered</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.GSTToBeClaimed</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Holding</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.InvestmentPropertyLetter</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.LegalRepresentation</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.MultipleDwellings</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.NRASConsortium</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.NRASProperty</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Occupancy</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.OnMarketTransaction</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PrimaryLandUse</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PrimarySecurity</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PrimaryUsage</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyID</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PurchaseUnderAOCWrap</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ToBeSold</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ToBeUsedAsSecurity</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ValuationProgram</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.x_PropertyAgent</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Commercial</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ConstructionDetails</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Industrial</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Insurance</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyExpense</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertySearchValidation</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyType</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.RentalIncome</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Residential</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Rural</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.VisitContact</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Zoning</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.ArmsLengthTransaction</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.ContractDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.DepositAmount</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.DepositPercentageRequested</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.EstimatedSettlementDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.FinanceApprovalDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.LicencedRealEstateAgentContract</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.TransferOfLandAmount</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.ContractDetails.x_Vendor</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbrance.Description</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbrance.RegisteredNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Encumbrance.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.EstimatedCGTLiability</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.EstimateMethodology</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.ValuedDate</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.EstimatedValue.x_Valuer</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.AllPropertyFeatures</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.FloorArea</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.LandArea</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.LandAreaUnits</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfDwellings</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PoolType</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PropertyDescription</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PropertyID</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.PropertyImage</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.RoofMaterial</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.PropertyFeatures.UniqueID</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Representation.x_VendorConveyancer</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.County</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.DuplicateTitleIssued</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Folio</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Lot</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.LotPlan</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.OtherDetails</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Parish</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Plan</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.TenureType</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.TitleReference</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.TitleSystem</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.UnregisteredLand</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.UnregisteredPlan</li:path>
          <li:path>Package.Content.Application.RealEstateAsset.Title.Volume</li:path>
          <li:path>Package.Content.Application.RelatedCompany.BusinessNameSameAsCompanyName</li:path>
          <li:path>Package.Content.Application.RelatedCompany.BusinessStructure</li:path>
          <li:path>Package.Content.Application.RelatedCompany.CompanyNumber</li:path>
          <li:path>Package.Content.Application.RelatedCompany.DateRegistered</li:path>
          <li:path>Package.Content.Application.RelatedCompany.GSTRegisteredDate</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NumberOfDirectors</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NumberOfPartners</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NumberOfShareholders</li:path>
          <li:path>Package.Content.Application.RelatedCompany.NZBNVerified</li:path>
          <li:path>Package.Content.Application.RelatedCompany.RegisteredForGST</li:path>
          <li:path>Package.Content.Application.RelatedCompany.RegisteredInCountry</li:path>
          <li:path>Package.Content.Application.RelatedCompany.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RelatedCompany.BeneficialOwner</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Director</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Partner</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Shareholder</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.WebAddress</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.x_RegisteredAddress</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.ContactPerson</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.OfficeFax</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.OfficeMobile</li:path>
          <li:path>Package.Content.Application.RelatedCompany.Contact.TradingAddress</li:path>
          <li:path>Package.Content.Application.RelatedPerson.SequenceNumber</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.EmailType</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.PreferredContact</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.x_Address</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.x_MailingAddress</li:path>
          <li:path>Package.Content.Application.RelatedPerson.Contact.WorkPhone</li:path>
          <li:path>Package.Content.Application.Summary.FeesDisclosureDate</li:path>
          <li:path>Package.Content.Application.Summary.DocumentationInstructions</li:path>
          <li:path>Package.Content.Application.Summary.LoanToValuationRatio</li:path>
          <li:path>Package.Content.Application.Summary.RolledUpAmounts</li:path>
          <li:path>Package.Content.Application.Summary.ServiceabilityResults</li:path>
          <li:path>Package.Content.Application.Summary.Fee.CapitaliseFee</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Category</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Description</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Frequency</li:path>
          <li:path>Package.Content.Application.Summary.Fee.IsEstimated</li:path>
          <li:path>Package.Content.Application.Summary.Fee.NumberOfRepeats</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Paid</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PayableTo</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PayFeesFrom</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PaymentTiming</li:path>
          <li:path>Package.Content.Application.Summary.Fee.SequenceNumber</li:path>
          <li:path>Package.Content.Application.Summary.Fee.StartDate</li:path>
          <li:path>Package.Content.Application.Summary.Fee.UniqueID</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_Account</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_FinancialProduct</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_ProductSet</li:path>
          <li:path>Package.Content.Application.Summary.Fee.x_Security</li:path>
          <li:path>Package.Content.Application.Summary.Fee.AccountNumber</li:path>
          <li:path>Package.Content.Application.Summary.Fee.ApplicableDuration</li:path>
          <li:path>Package.Content.Application.Summary.Fee.CreditCard</li:path>
          <li:path>Package.Content.Application.Summary.Fee.PayableToAccount</li:path>
          <li:path>Package.Content.Application.Summary.Fee.Percentage</li:path>
          <li:path>Package.Content.Application.TrustApplicant.ApplicantType</li:path>
          <li:path>Package.Content.Application.TrustApplicant.BusinessName</li:path>
          <li:path>Package.Content.Application.TrustApplicant.BusinessNameSameAsTrustName</li:path>
          <li:path>Package.Content.Application.TrustApplicant.CountryEstablished</li:path>
          <li:path>Package.Content.Application.TrustApplicant.DocumentationType</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Established</li:path>
          <li:path>Package.Content.Application.TrustApplicant.EstablishmentDate</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IRDNumber</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IsExistingCustomer</li:path>
          <li:path>Package.Content.Application.TrustApplicant.NumberOfBeneficiaries</li:path>
          <li:path>Package.Content.Application.TrustApplicant.NumberOfTrustees</li:path>
          <li:path>Package.Content.Application.TrustApplicant.SequenceNumber</li:path>
          <li:path>Package.Content.Application.TrustApplicant.SettlorName</li:path>
          <li:path>Package.Content.Application.TrustApplicant.TrustPurpose</li:path>
          <li:path>Package.Content.Application.TrustApplicant.TrustStructure</li:path>
          <li:path>Package.Content.Application.TrustApplicant.VestingDate</li:path>
          <li:path>Package.Content.Application.TrustApplicant.x_Accountant</li:path>
          <li:path>Package.Content.Application.TrustApplicant.BeneficialOwner</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Beneficiary</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Business</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Contact</li:path>
          <li:path>Package.Content.Application.TrustApplicant.DealingNumber</li:path>
          <li:path>Package.Content.Application.TrustApplicant.DeclaredIncome</li:path>
          <li:path>Package.Content.Application.TrustApplicant.ExistingCustomer</li:path>
          <li:path>Package.Content.Application.TrustApplicant.FinancialAnalysis</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Income</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomePrevious</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomePrior</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomeRecent</li:path>
          <li:path>Package.Content.Application.TrustApplicant.IncomeYearToDate</li:path>
          <li:path>Package.Content.Application.TrustApplicant.TrustDeedVariation</li:path>
          <li:path>Package.Content.Application.TrustApplicant.Trustee</li:path>
          <li:path>Package.Instructions.ErrorInstructions</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Update</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Submit.IsSubmissionDocuments</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Submit.IsSupportingDocuments</li:path>
          <li:path>Package.Instructions.ApplicationInstructions.Submit.Condition</li:path>
          <li:path>Package.Publisher.CompanyName</li:path>
          <li:path>Package.Publisher.ContactName</li:path>
          <li:path>Package.Publisher.Email</li:path>
          <li:path>Package.Publisher.PhoneNumber</li:path>
          <li:path>Package.Publisher.RelatedSoftware</li:path>
          <li:path>Package.Publisher.Software.Description</li:path>
          <li:path>Package.Publisher.Software.Environment</li:path>
          <li:path>Package.Publisher.Software.TechnicalEmail</li:path>
          <li:path>Package.Publisher.Software.Version</li:path>
          <li:path>Package.Recipient.Description</li:path>
          <li:path>Package.Recipient.RoutingCode</li:path>
          <li:path>Package.Recipient.SequenceNumber</li:path>
          <li:path>Package.Recipient.Software</li:path>
          <li:path>Package.SchemaVersion.GuidebookCode</li:path>
          <li:path>Package.SchemaVersion.GuidebookName</li:path>
          <li:path>Package.SchemaVersion.GuidebookVersion</li:path>
          <li:path>personNameType.KnownAs</li:path>
          <li:path>personNameType.OtherNameTitle</li:path>
          <li:path>phoneType.CountryCode</li:path>
          <li:path>phoneType.OverseasDialingCode</li:path>
          <li:path>dealingNumberType</li:path>
          <li:path>documentationInstructionsType</li:path>
          <li:path>fundsDisbursementType</li:path>
          <li:path>responsibleLendingType</li:path>
          <li:path>securityAgreementType</li:path>
          <li:path>vendorTaxInvoiceType</li:path>
          <li:path>absOccupationCodeList</li:path>
          <li:path>agriculturalAssetTypeList</li:path>
          <li:path>aircraftTypeList</li:path>
          <li:path>annotationTypeList</li:path>
          <li:path>anzscoOccupationCodeList</li:path>
          <li:path>anzsicIndustryCodeList</li:path>
          <li:path>applicationDocTypeList</li:path>
          <li:path>applicationTypeList</li:path>
          <li:path>attachmentTypeList</li:path>
          <li:path>auStateList</li:path>
          <li:path>balloonRVInputPatternList</li:path>
          <li:path>basisForAmountRequestedList</li:path>
          <li:path>benefitEnquiriesList</li:path>
          <li:path>builderTypeList</li:path>
          <li:path>businessChannelTypeList</li:path>
          <li:path>businessStructureExcludingTrustList</li:path>
          <li:path>businessStructureFullList</li:path>
          <li:path>calculationBasisList</li:path>
          <li:path>cleaningEquipmentTypeList</li:path>
          <li:path>coApplicantBenefitList</li:path>
          <li:path>collateralTypeList</li:path>
          <li:path>commercialTypeList</li:path>
          <li:path>commissionBeneficiaryList</li:path>
          <li:path>commissionStructureList</li:path>
          <li:path>conditionList</li:path>
          <li:path>conditionOwnerApplicationInstructionsList</li:path>
          <li:path>conditionResponseStatusList</li:path>
          <li:path>conditionStatusApplicationInstructionsList</li:path>
          <li:path>constructionTypeList</li:path>
          <li:path>creditCardTypeList</li:path>
          <li:path>creditHistoryIssueList</li:path>
          <li:path>creditReportingBodyList</li:path>
          <li:path>creditStatusList</li:path>
          <li:path>currencyCodeList</li:path>
          <li:path>dataSourceList</li:path>
          <li:path>dayOfWeekList</li:path>
          <li:path>declinedReasonApplicationInstructionsList</li:path>
          <li:path>depositAccountTypeList</li:path>
          <li:path>depositInsuranceTypeList</li:path>
          <li:path>depositInterestPaymentTypeList</li:path>
          <li:path>depositMaturityInstructionTypeList</li:path>
          <li:path>documentCategoryList</li:path>
          <li:path>earthMovingMiningAndConstructionSubtypeList</li:path>
          <li:path>earthMovingMiningAndConstructionTypeList</li:path>
          <li:path>employerTypeList</li:path>
          <li:path>employmentStatusList</li:path>
          <li:path>errorInstructionsTypeList</li:path>
          <li:path>errorSourceList</li:path>
          <li:path>estimateMethodologyList</li:path>
          <li:path>eventNameApplicationInstructionsList</li:path>
          <li:path>excessUsageCalculationMethodList</li:path>
          <li:path>exemptStatusList</li:path>
          <li:path>feeCategoryList</li:path>
          <li:path>feePaymentTimingList</li:path>
          <li:path>financialTransactionTypeList</li:path>
          <li:path>funderList</li:path>
          <li:path>fundsAccessTypeList</li:path>
          <li:path>genderList</li:path>
          <li:path>goodToBeUsedLocationList</li:path>
          <li:path>governmentBenefitsTypeList</li:path>
          <li:path>guarantorAccessList</li:path>
          <li:path>holdingList</li:path>
          <li:path>hospitalityAndLeisureTypeList</li:path>
          <li:path>housingStatusList</li:path>
          <li:path>importanceList</li:path>
          <li:path>incomeVerificationList</li:path>
          <li:path>industrialTypeList</li:path>
          <li:path>instalmentsFrequencyList</li:path>
          <li:path>insuranceTypeList</li:path>
          <li:path>insurerList</li:path>
          <li:path>interestOnlyReasonList</li:path>
          <li:path>interestRateTypeList</li:path>
          <li:path>itAndAVEquipmentTypeList</li:path>
          <li:path>kinRelationshipList</li:path>
          <li:path>landAreaUnitsList</li:path>
          <li:path>landValueEstimateBasisList</li:path>
          <li:path>lendingGuaranteeTypeList</li:path>
          <li:path>levelOfGovernmentList</li:path>
          <li:path>licenceAssetTypeList</li:path>
          <li:path>loanPaymentScheduleTypeList</li:path>
          <li:path>loanTypeList</li:path>
          <li:path>masterAgreementStatusList</li:path>
          <li:path>masterAgreementTypeList</li:path>
          <li:path>materialsHandlingAndLiftingSubtypeList</li:path>
          <li:path>materialsHandlingAndLiftingTypeList</li:path>
          <li:path>medicalEquipmentTypeList</li:path>
          <li:path>methodOfOperationList</li:path>
          <li:path>mmMonthList</li:path>
          <li:path>mobileComputingTypeList</li:path>
          <li:path>nccpStatusList</li:path>
          <li:path>nrasConsortiumList</li:path>
          <li:path>occupancyList</li:path>
          <li:path>officeEquipmentTypeList</li:path>
          <li:path>otherAssetTypeList</li:path>
          <li:path>otherExpenseCategoryList</li:path>
          <li:path>otherExpenseTypeList</li:path>
          <li:path>otherIncomeTypeList</li:path>
          <li:path>partnerTypeList</li:path>
          <li:path>payFeesFromList</li:path>
          <li:path>paymentTimingList</li:path>
          <li:path>plantEquipmentAndIndustrialTypeList</li:path>
          <li:path>poolTypeList</li:path>
          <li:path>powerOfAttorneyTypeList</li:path>
          <li:path>preConditionToStageApplicationInstructionsList</li:path>
          <li:path>preferredContactCompanyList</li:path>
          <li:path>preferredContactPersonList</li:path>
          <li:path>primaryUsageList</li:path>
          <li:path>principalRefinancingReasonList</li:path>
          <li:path>proofCodeCompanyList</li:path>
          <li:path>proofCodeNotEmployedList</li:path>
          <li:path>proofCodeOtherList</li:path>
          <li:path>proofCodePAYEList</li:path>
          <li:path>proofCodeSelfEmployedList</li:path>
          <li:path>proofCodeTrustList</li:path>
          <li:path>propertyExpenseCategoryList</li:path>
          <li:path>propertySearchValidationResultList</li:path>
          <li:path>proposedRepaymentMethodList</li:path>
          <li:path>purposeOfApplicationList</li:path>
          <li:path>purposeOfFundsList</li:path>
          <li:path>releaseSecurityReasonList</li:path>
          <li:path>residentialTypeList</li:path>
          <li:path>ruralTypeList</li:path>
          <li:path>ruralUsageList</li:path>
          <li:path>salesChannelTypeList</li:path>
          <li:path>securityPriorityList</li:path>
          <li:path>selfEmployedBasisList</li:path>
          <li:path>sendDocumentsToPersonList</li:path>
          <li:path>statementCycleList</li:path>
          <li:path>statusNameApplicationInstructionsList</li:path>
          <li:path>streetSuffixList</li:path>
          <li:path>supplierTypeList</li:path>
          <li:path>taxDepreciationMethodList</li:path>
          <li:path>tenureTypeList</li:path>
          <li:path>titleSystemList</li:path>
          <li:path>toolsOfTradeTypeList</li:path>
          <li:path>trustPurposeList</li:path>
          <li:path>trustStructureList</li:path>
          <li:path>typeOfIncorporationList</li:path>
          <li:path>usageUnitOfMeasurementList</li:path>
          <li:path>valuationProgramList</li:path>
          <li:path>variationTypeList</li:path>
          <li:path>varyOnValuationList</li:path>
          <li:path>vehicleSubtypeList</li:path>
          <li:path>vehicleTypeList</li:path>
          <li:path>visitContactTypeList</li:path>
          <li:path>weekList</li:path>
          <li:path>yesNoIntentList</li:path>
          <li:path>yyYearList</li:path>
          <li:path>dayOfMonthPattern</li:path>
          <li:path>gicsCodePattern</li:path>
          <li:path>irdNumberPattern</li:path>
          <li:path>mediaTypePattern</li:path>
          <li:path>nzbicPattern</li:path>
          <li:path>urlPattern</li:path>
          <li:path>base64BinaryType</li:path>
          <li:path>decimalType</li:path>
        </li:Exclude>
        <li:OptionalToMandatory/>
        <li:StringToList/>
        <li:StringToPattern/>
        <li:CustomMaxOccurs/>
        <li:CustomMinOccurs/>
        <li:CustomCurrencyRange/>
        <li:CustomDateTimeRange/>
        <li:CustomDateRange/>
        <li:CustomDecimalRange/>
        <li:CustomYearRange/>
        <li:CustomIntegerRange/>
        <li:CustomPercentageRange/>
      </li:schemacustomisation>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Package">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Content" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Application" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Address" type="addressType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="CompanyApplicant" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="CompanyName" type="stringType" use="optional"/>
                        <xs:attribute name="NZBN" type="nzbnPattern" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ContributionFunds" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Amount" type="currencyType" use="optional"/>
                        <xs:attribute name="Type" type="contributionFundsTypeList" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Funder" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="CompanyName" type="stringType" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Household" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Dependant" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Age" type="integerType" use="optional"/>
                              <xs:attribute name="DateOfBirth" type="dateType" use="optional"/>
                              <xs:attribute name="Name" type="stringType" use="optional"/>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ExpenseDetails" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="LivingExpense" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence/>
                                    <xs:attribute name="Amount" type="currencyType" use="optional"/>
                                    <xs:attribute name="Category" type="livingExpenseCategoryList" use="optional"/>
                                    <xs:attribute name="Frequency" type="frequencyFullList" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="OtherCommitment" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence/>
                                    <xs:attribute name="Amount" type="currencyType" use="optional"/>
                                    <xs:attribute name="Category" type="otherCommitmentCategoryList" use="optional"/>
                                    <xs:attribute name="Frequency" type="frequencyFullList" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Name" type="stringType" use="optional"/>
                        <xs:attribute name="NumberOfAdults" type="integerType" use="optional"/>
                        <xs:attribute name="NumberOfDependants" type="integerType" use="optional"/>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Liability" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccountNumber" type="financialAccountType" minOccurs="0" maxOccurs="1"/>
                          <xs:element name="OriginalTerm" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="DistinctLoanPeriod" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                      <xs:element name="Repayment" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                                          <xs:attribute name="x_ContinuingRepayment" type="referenceType" use="optional"/>
                                          <xs:attribute name="x_Repayment" type="referenceType" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                    <xs:attribute name="InterestType" type="interestTypeList" use="optional"/>
                                    <xs:attribute name="PaymentType" type="paymentTypeList" use="optional"/>
                                    <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                                    <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                                    <xs:attribute name="x_RateComposition" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="InterestOnlyEndDate" type="dateType" use="optional"/>
                              <xs:attribute name="InterestType" type="interestTypeList" use="optional"/>
                              <xs:attribute name="InterestTypeDuration" type="integerType" use="optional"/>
                              <xs:attribute name="InterestTypeUnits" type="loanTermUnitsList" use="optional"/>
                              <xs:attribute name="PaymentType" type="paymentTypeList" use="optional"/>
                              <xs:attribute name="PaymentTypeDuration" type="integerType" use="optional"/>
                              <xs:attribute name="PaymentTypeUnits" type="loanTermUnitsList" use="optional"/>
                              <xs:attribute name="TotalTermDuration" type="integerType" use="optional"/>
                              <xs:attribute name="TotalTermUnits" type="loanTermUnitsList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PercentOwned" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Owner" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Percent" type="percentType" use="optional"/>
                                    <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                                    <xs:attribute name="x_Party" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Proportions" type="proportionsList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RemainingTerm" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="Duration" type="integerType" use="optional"/>
                              <xs:attribute name="Units" type="loanTermUnitsList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Repayment" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="RepaymentAmount" type="currencyType" use="optional"/>
                              <xs:attribute name="RepaymentFrequency" type="repaymentFrequencyList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Security" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                              <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                              <xs:attribute name="x_Security" type="referenceType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AnnualInterestRate" type="percentType" use="optional"/>
                        <xs:attribute name="ClearingFromOtherSource" type="clearingFromOtherSourceList" use="optional"/>
                        <xs:attribute name="ClearingFromThisLoan" type="clearingFromThisLoanList" use="optional"/>
                        <xs:attribute name="OriginalAmount" type="currencyType" use="optional"/>
                        <xs:attribute name="OutstandingBalance" type="currencyType" use="optional"/>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                        <xs:attribute name="Type" type="liabilityTypeList" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="LoanDetails" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccountNumber" type="financialAccountType" minOccurs="0" maxOccurs="1"/>
                          <xs:element name="LendingPurpose" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="ABSLendingPurposeCode" type="absLendingPurposeCodeList" use="optional"/>
                              <xs:attribute name="PurposeAmount" type="currencyType" use="optional"/>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="LoanPurpose" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="PrimaryPurpose" type="primaryPurposeLoanPurposeList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Security" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="x_Security" type="referenceType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Term" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="InterestType" type="interestTypeList" use="optional"/>
                              <xs:attribute name="InterestTypeDuration" type="integerType" use="optional"/>
                              <xs:attribute name="InterestTypeUnits" type="loanTermUnitsList" use="optional"/>
                              <xs:attribute name="PaymentType" type="paymentTypeList" use="optional"/>
                              <xs:attribute name="PaymentTypeDuration" type="integerType" use="optional"/>
                              <xs:attribute name="PaymentTypeUnits" type="loanTermUnitsList" use="optional"/>
                              <xs:attribute name="TotalTermDuration" type="integerType" use="optional"/>
                              <xs:attribute name="TotalTermType" type="totalTermTypeList" use="optional"/>
                              <xs:attribute name="TotalTermUnits" type="loanTermUnitsList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AmountRequested" type="currencyType" use="optional"/>
                        <xs:attribute name="EstimatedSettlementDate" type="dateType" use="optional"/>
                        <xs:attribute name="ProductCode" type="stringType" use="optional"/>
                        <xs:attribute name="ProductName" type="stringType" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="NonRealEstateAsset" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="EstimatedValue" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="EstimateBasis" type="estimateBasisNonRealEstateAssetList" use="optional"/>
                              <xs:attribute name="Value" type="currencyType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FinancialAsset" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AccountNumber" type="financialAccountType" minOccurs="0" maxOccurs="1"/>
                                <xs:element name="Shares" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:attribute name="HolderIdentificationNumber" type="stringType" use="optional"/>
                                    <xs:attribute name="IssuingCompany" type="stringType" use="optional"/>
                                    <xs:attribute name="QuantityOfShares" type="integerType" use="optional"/>
                                    <xs:attribute name="Type" type="shareTypeList" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Type" type="financialAssetTypeList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MotorVehicle" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="Make" type="stringType" use="optional"/>
                              <xs:attribute name="Model" type="stringType" use="optional"/>
                              <xs:attribute name="RegistrationNumber" type="stringType" use="optional"/>
                              <xs:attribute name="Year" type="gYearType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PercentOwned" type="percentOwnedType" minOccurs="0" maxOccurs="1"/>
                        </xs:sequence>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                        <xs:attribute name="Type" type="nonRealEstateAssetTypeList" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PersonApplicant" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Contact" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CurrentAddress" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                    </xs:sequence>
                                    <xs:attribute name="x_MailingAddress" type="referenceType" use="optional"/>
                                    <xs:attribute name="x_ResidentialAddress" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="EmailAddress" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Email" type="emailPattern" use="optional"/>
                                    <xs:attribute name="EmailType" type="contactEmailTypeList" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="HomePhone" type="phoneType" minOccurs="0" maxOccurs="1"/>
                                <xs:element name="Mobile" type="phoneType" minOccurs="0" maxOccurs="1"/>
                                <xs:element name="PreviousAddress" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                    </xs:sequence>
                                    <xs:attribute name="x_ResidentialAddress" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="WorkPhone" type="phoneType" minOccurs="0" maxOccurs="1"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Employment" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ForeignEmployed" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                    </xs:sequence>
                                    <xs:attribute name="Basis" type="foreignEmployedBasisList" use="optional"/>
                                    <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                    <xs:attribute name="Occupation" type="stringType" use="optional"/>
                                    <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                                    <xs:attribute name="x_Employer" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NotEmployed" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                      <xs:element name="Income" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                          <xs:attribute name="GovernmentBenefitsAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="GovernmentBenefitsFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="OtherIncomeAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="OtherIncomeDescription" type="stringType" use="optional"/>
                                          <xs:attribute name="OtherIncomeFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="PrivatePensionAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="PrivatePensionFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="SuperannuationAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="SuperannuationFrequency" type="frequencyShortList" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                    <xs:attribute name="HomeDuties" type="yesNoList" use="optional"/>
                                    <xs:attribute name="OnBenefits" type="yesNoList" use="optional"/>
                                    <xs:attribute name="Retired" type="yesNoList" use="optional"/>
                                    <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                    <xs:attribute name="Student" type="yesNoList" use="optional"/>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PAYE" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                      <xs:element name="Income" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                          <xs:attribute name="CarAllowanceAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="CarAllowanceFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="CommissionAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="CommissionFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="GrossRegularOvertimeAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="GrossRegularOvertimeFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="GrossSalaryAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="GrossSalaryFrequency" type="frequencyShortList" use="optional"/>
                                          <xs:attribute name="WorkAllowanceAmount" type="currencyType" use="optional"/>
                                          <xs:attribute name="WorkAllowanceFrequency" type="frequencyShortList" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Basis" type="payeBasisList" use="optional"/>
                                    <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                    <xs:attribute name="Occupation" type="stringType" use="optional"/>
                                    <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                                    <xs:attribute name="x_Employer" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SelfEmployed" minOccurs="0" maxOccurs="1">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BusinessIncomePrevious" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                          <xs:sequence/>
                                          <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BusinessIncomePrior" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                          <xs:sequence/>
                                          <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BusinessIncomeRecent" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Addback" minOccurs="0" maxOccurs="1">
                                              <xs:complexType>
                                                <xs:attribute name="Allowances" type="currencyType" use="optional"/>
                                                <xs:attribute name="Bonus" type="currencyType" use="optional"/>
                                                <xs:attribute name="CarExpense" type="currencyType" use="optional"/>
                                                <xs:attribute name="Interest" type="currencyType" use="optional"/>
                                                <xs:attribute name="Lease" type="currencyType" use="optional"/>
                                                <xs:attribute name="Salary" type="currencyType" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BusinessIncomeYearToDate" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Addback" minOccurs="0" maxOccurs="1">
                                              <xs:complexType>
                                                <xs:attribute name="Allowances" type="currencyType" use="optional"/>
                                                <xs:attribute name="Bonus" type="currencyType" use="optional"/>
                                                <xs:attribute name="CarExpense" type="currencyType" use="optional"/>
                                                <xs:attribute name="Interest" type="currencyType" use="optional"/>
                                                <xs:attribute name="Lease" type="currencyType" use="optional"/>
                                                <xs:attribute name="Salary" type="currencyType" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                          <xs:attribute name="ProfitAfterTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="ProfitBeforeTax" type="currencyType" use="optional"/>
                                          <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Duration" type="durationType" minOccurs="0" maxOccurs="1"/>
                                    </xs:sequence>
                                    <xs:attribute name="EndDate" type="dateType" use="optional"/>
                                    <xs:attribute name="Occupation" type="stringType" use="optional"/>
                                    <xs:attribute name="StartDate" type="dateType" use="optional"/>
                                    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                                    <xs:attribute name="x_Employer" type="referenceType" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MaritalStatusDetails" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="x_Spouse" type="referenceType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" type="personNameType" minOccurs="0" maxOccurs="1"/>
                          <xs:element name="ProofOfIdentity" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="DocumentNumber" type="stringType" use="optional"/>
                              <xs:attribute name="DocumentType" type="documentTypeList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="ApplicantType" type="applicantTypeList" use="optional"/>
                        <xs:attribute name="DateOfBirth" type="dateType" use="optional"/>
                        <xs:attribute name="MaritalStatus" type="maritalStatusList" use="optional"/>
                        <xs:attribute name="ResidencyStatus" type="residencyStatusList" use="optional"/>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RealEstateAsset" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ContractDetails" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="ContractPriceAmount" type="currencyType" use="optional"/>
                              <xs:attribute name="DepositPaid" type="currencyType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Encumbrance" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="EstimatedValue" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="EstimateBasis" type="estimateBasisRealEstateAssetList" use="optional"/>
                              <xs:attribute name="Value" type="currencyType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PercentOwned" type="percentOwnedType" minOccurs="0" maxOccurs="1"/>
                          <xs:element name="PropertyFeatures" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="BuiltYear" type="gYearType" use="optional"/>
                              <xs:attribute name="NumberOfBathrooms" type="integerType" use="optional"/>
                              <xs:attribute name="NumberOfBedrooms" type="integerType" use="optional"/>
                              <xs:attribute name="NumberOfCarSpaces" type="integerType" use="optional"/>
                              <xs:attribute name="NumberOfFloors" type="integerType" use="optional"/>
                              <xs:attribute name="WallMaterial" type="stringType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Representation" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:attribute name="x_Conveyancer" type="referenceType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Title" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="PlanType" type="planTypeList" use="optional"/>
                              <xs:attribute name="RealPropertyDescriptor" type="stringType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="PrimaryPurpose" type="primaryPurposeRealEstateAssetList" use="optional"/>
                        <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
                        <xs:attribute name="Status" type="realEstateAssetStatusList" use="optional"/>
                        <xs:attribute name="Transaction" type="assetTransactionList" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                        <xs:attribute name="x_Address" type="referenceType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RelatedCompany" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Contact" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="OfficePhone" type="phoneType" minOccurs="0" maxOccurs="1"/>
                              </xs:sequence>
                              <xs:attribute name="Email" type="emailPattern" use="optional"/>
                              <xs:attribute name="x_Address" type="referenceType" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="BusinessName" type="stringType" use="optional"/>
                        <xs:attribute name="CompanyName" type="stringType" use="optional"/>
                        <xs:attribute name="NZBN" type="nzbnPattern" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RelatedPerson" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Contact" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="HomePhone" type="phoneType" minOccurs="0" maxOccurs="1"/>
                                <xs:element name="Mobile" type="phoneType" minOccurs="0" maxOccurs="1"/>
                              </xs:sequence>
                              <xs:attribute name="Email" type="emailPattern" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" type="personNameType" minOccurs="0" maxOccurs="1"/>
                        </xs:sequence>
                        <xs:attribute name="DateOfBirth" type="dateType" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Summary" minOccurs="0" maxOccurs="1">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Fee" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence/>
                              <xs:attribute name="Amount" type="currencyType" use="optional"/>
                              <xs:attribute name="Type" type="feeTypeList" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="TrustApplicant" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="NZBN" type="nzbnPattern" use="optional"/>
                        <xs:attribute name="TrustName" type="stringType" use="optional"/>
                        <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ProductionData" type="yesNoList" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Instructions" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:choice>
              <xs:element name="ApplicationInstructions" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                  <xs:choice>
                    <xs:element name="Submit" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:sequence/>
                        <xs:attribute name="AssessmentType" type="assessmentTypeApplicationInstructionsList" use="optional"/>
                        <xs:attribute name="IsAccountVariation" type="yesNoList" use="optional"/>
                        <xs:attribute name="IsResubmission" type="yesNoList" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:choice>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name="Publisher" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Software" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                  <xs:attribute name="LIXICode" type="stringType" use="required"/>
                  <xs:attribute name="Name" type="stringType" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="LIXICode" type="stringType" use="required"/>
            <xs:attribute name="PublishedDateTime" type="dateTimeType" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="Recipient" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence/>
            <xs:attribute name="LIXICode" type="stringType" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="SchemaVersion" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:attribute name="LIXICustomVersion" type="stringType" use="required" fixed="dev-wip"/>
            <xs:attribute name="LIXITransactionType" type="stringType" use="required" fixed="CNZ"/>
            <xs:attribute name="LIXIVersion" type="stringType" use="required" fixed="2.1.31"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ProductionData" type="yesNoList" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="addressType">
    <xs:sequence>
      <xs:element name="DXBox" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:attribute name="Exchange" type="stringType" use="optional"/>
          <xs:attribute name="Number" type="stringType" use="optional"/>
          <xs:attribute name="Provider" type="stringType" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="NonStandard" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:attribute name="Line1" type="stringType" use="optional"/>
          <xs:attribute name="Line2" type="stringType" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="POBox" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:attribute name="Exchange" type="stringType" use="optional"/>
          <xs:attribute name="Number" type="stringType" use="optional"/>
          <xs:attribute name="Type" type="poBoxTypeList" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Standard" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:attribute name="StreetName" type="stringType" use="optional"/>
          <xs:attribute name="StreetNumber" type="stringType" use="optional"/>
          <xs:attribute name="StreetType" type="streetTypeList" use="optional"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="City" type="stringType" use="optional"/>
    <xs:attribute name="Country" type="countryCodeList" use="optional"/>
    <xs:attribute name="NewZealandPostCode" type="nzPostCodePattern" use="optional"/>
    <xs:attribute name="Type" type="addressTypeList" use="optional"/>
    <xs:attribute name="UniqueID" type="uniqueIDType" use="optional"/>
  </xs:complexType>
  <xs:complexType name="durationType">
    <xs:attribute name="Length" type="integerType" use="optional"/>
    <xs:attribute name="Units" type="durationUnitsList" use="optional"/>
  </xs:complexType>
  <xs:complexType name="financialAccountType">
    <xs:attribute name="AccountName" type="stringType" use="optional"/>
    <xs:attribute name="AccountNumber" type="stringType" use="optional"/>
    <xs:attribute name="BSB" type="bsbPattern" use="optional"/>
    <xs:attribute name="FinancialInstitution" type="financialInstitutionList" use="optional"/>
  </xs:complexType>
  <xs:complexType name="percentOwnedType">
    <xs:sequence>
      <xs:element name="Owner" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="Percent" type="percentType" use="optional"/>
          <xs:attribute name="SequenceNumber" type="integerType" use="optional"/>
          <xs:attribute name="x_Party" type="referenceType" use="optional"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Proportions" type="proportionsList" use="optional"/>
  </xs:complexType>
  <xs:complexType name="personNameType">
    <xs:attribute name="FirstName" type="stringType" use="optional"/>
    <xs:attribute name="MiddleNames" type="stringType" use="optional"/>
    <xs:attribute name="NameTitle" type="nameTitleList" use="optional"/>
    <xs:attribute name="Surname" type="stringType" use="optional"/>
  </xs:complexType>
  <xs:complexType name="phoneType">
    <xs:attribute name="NewZealandDialingCode" type="nzDialingCodeList" use="optional"/>
    <xs:attribute name="Number" type="stringType" use="optional"/>
  </xs:complexType>
  <xs:simpleType name="absLendingPurposeCodeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="ABS-121"/>
      <xs:enumeration value="ABS-123"/>
      <xs:enumeration value="ABS-125"/>
      <xs:enumeration value="ABS-127"/>
      <xs:enumeration value="ABS-129"/>
      <xs:enumeration value="ABS-131"/>
      <xs:enumeration value="ABS-133"/>
      <xs:enumeration value="ABS-143"/>
      <xs:enumeration value="ABS-221"/>
      <xs:enumeration value="ABS-223"/>
      <xs:enumeration value="ABS-225"/>
      <xs:enumeration value="ABS-227"/>
      <xs:enumeration value="ABS-229"/>
      <xs:enumeration value="ABS-231"/>
      <xs:enumeration value="ABS-233"/>
      <xs:enumeration value="ABS-235"/>
      <xs:enumeration value="ABS-237"/>
      <xs:enumeration value="ABS-239"/>
      <xs:enumeration value="ABS-241"/>
      <xs:enumeration value="ABS-243"/>
      <xs:enumeration value="ABS-245"/>
      <xs:enumeration value="ABS-247"/>
      <xs:enumeration value="ABS-248"/>
      <xs:enumeration value="ABS-249"/>
      <xs:enumeration value="ABS-320"/>
      <xs:enumeration value="ABS-321"/>
      <xs:enumeration value="ABS-322"/>
      <xs:enumeration value="ABS-323"/>
      <xs:enumeration value="ABS-324"/>
      <xs:enumeration value="ABS-326"/>
      <xs:enumeration value="ABS-327"/>
      <xs:enumeration value="ABS-329"/>
      <xs:enumeration value="ABS-330"/>
      <xs:enumeration value="ABS-331"/>
      <xs:enumeration value="ABS-332"/>
      <xs:enumeration value="ABS-333"/>
      <xs:enumeration value="ABS-335"/>
      <xs:enumeration value="ABS-336"/>
      <xs:enumeration value="ABS-337"/>
      <xs:enumeration value="ABS-340"/>
      <xs:enumeration value="ABS-341"/>
      <xs:enumeration value="ABS-342"/>
      <xs:enumeration value="ABS-343"/>
      <xs:enumeration value="ABS-348"/>
      <xs:enumeration value="ABS-349"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="addressTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="DX Box"/>
      <xs:enumeration value="Non Standard"/>
      <xs:enumeration value="PO Box or Bag"/>
      <xs:enumeration value="Standard"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="applicantTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Borrower"/>
      <xs:enumeration value="Borrower and Guarantor"/>
      <xs:enumeration value="Guarantor"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="assessmentTypeApplicationInstructionsList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Full"/>
      <xs:enumeration value="Indicative"/>
      <xs:enumeration value="Quote"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="assetTransactionList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Owns"/>
      <xs:enumeration value="Owns Existing Mortgage"/>
      <xs:enumeration value="Purchasing"/>
      <xs:enumeration value="Sold"/>
      <xs:enumeration value="Transfer"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="clearingFromOtherSourceList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="No"/>
      <xs:enumeration value="Partial"/>
      <xs:enumeration value="Yes"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="clearingFromThisLoanList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="No"/>
      <xs:enumeration value="Partial"/>
      <xs:enumeration value="Yes"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="contactEmailTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Home"/>
      <xs:enumeration value="Work"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="contributionFundsTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Cash"/>
      <xs:enumeration value="Existing Equity"/>
      <xs:enumeration value="First Home Owner Grant"/>
      <xs:enumeration value="Genuine Savings"/>
      <xs:enumeration value="Gift"/>
      <xs:enumeration value="Inheritance"/>
      <xs:enumeration value="Kainga Ora Grant"/>
      <xs:enumeration value="KiwiSaver"/>
      <xs:enumeration value="Net Proceeds from Sale of Property"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Redraw"/>
      <xs:enumeration value="Sale of Non Real Estate Asset"/>
      <xs:enumeration value="Secured VISA"/>
      <xs:enumeration value="Superannuation"/>
      <xs:enumeration value="Term Deposit"/>
      <xs:enumeration value="Unsecured Borrowing"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="countryCodeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="AD"/>
      <xs:enumeration value="AE"/>
      <xs:enumeration value="AF"/>
      <xs:enumeration value="AG"/>
      <xs:enumeration value="AI"/>
      <xs:enumeration value="AL"/>
      <xs:enumeration value="AM"/>
      <xs:enumeration value="AO"/>
      <xs:enumeration value="AQ"/>
      <xs:enumeration value="AR"/>
      <xs:enumeration value="AS"/>
      <xs:enumeration value="AT"/>
      <xs:enumeration value="AU"/>
      <xs:enumeration value="AW"/>
      <xs:enumeration value="AX"/>
      <xs:enumeration value="AZ"/>
      <xs:enumeration value="BA"/>
      <xs:enumeration value="BB"/>
      <xs:enumeration value="BD"/>
      <xs:enumeration value="BE"/>
      <xs:enumeration value="BF"/>
      <xs:enumeration value="BG"/>
      <xs:enumeration value="BH"/>
      <xs:enumeration value="BI"/>
      <xs:enumeration value="BJ"/>
      <xs:enumeration value="BL"/>
      <xs:enumeration value="BM"/>
      <xs:enumeration value="BN"/>
      <xs:enumeration value="BO"/>
      <xs:enumeration value="BQ"/>
      <xs:enumeration value="BR"/>
      <xs:enumeration value="BS"/>
      <xs:enumeration value="BT"/>
      <xs:enumeration value="BV"/>
      <xs:enumeration value="BW"/>
      <xs:enumeration value="BY"/>
      <xs:enumeration value="BZ"/>
      <xs:enumeration value="CA"/>
      <xs:enumeration value="CC"/>
      <xs:enumeration value="CD"/>
      <xs:enumeration value="CF"/>
      <xs:enumeration value="CG"/>
      <xs:enumeration value="CH"/>
      <xs:enumeration value="CI"/>
      <xs:enumeration value="CK"/>
      <xs:enumeration value="CL"/>
      <xs:enumeration value="CM"/>
      <xs:enumeration value="CN"/>
      <xs:enumeration value="CO"/>
      <xs:enumeration value="CR"/>
      <xs:enumeration value="CU"/>
      <xs:enumeration value="CV"/>
      <xs:enumeration value="CW"/>
      <xs:enumeration value="CX"/>
      <xs:enumeration value="CY"/>
      <xs:enumeration value="CZ"/>
      <xs:enumeration value="DE"/>
      <xs:enumeration value="DJ"/>
      <xs:enumeration value="DK"/>
      <xs:enumeration value="DM"/>
      <xs:enumeration value="DO"/>
      <xs:enumeration value="DZ"/>
      <xs:enumeration value="EC"/>
      <xs:enumeration value="EE"/>
      <xs:enumeration value="EG"/>
      <xs:enumeration value="EH"/>
      <xs:enumeration value="ER"/>
      <xs:enumeration value="ES"/>
      <xs:enumeration value="ET"/>
      <xs:enumeration value="FI"/>
      <xs:enumeration value="FJ"/>
      <xs:enumeration value="FK"/>
      <xs:enumeration value="FM"/>
      <xs:enumeration value="FO"/>
      <xs:enumeration value="FR"/>
      <xs:enumeration value="GA"/>
      <xs:enumeration value="GB"/>
      <xs:enumeration value="GD"/>
      <xs:enumeration value="GE"/>
      <xs:enumeration value="GF"/>
      <xs:enumeration value="GG"/>
      <xs:enumeration value="GH"/>
      <xs:enumeration value="GI"/>
      <xs:enumeration value="GL"/>
      <xs:enumeration value="GM"/>
      <xs:enumeration value="GN"/>
      <xs:enumeration value="GP"/>
      <xs:enumeration value="GQ"/>
      <xs:enumeration value="GR"/>
      <xs:enumeration value="GS"/>
      <xs:enumeration value="GT"/>
      <xs:enumeration value="GU"/>
      <xs:enumeration value="GW"/>
      <xs:enumeration value="GY"/>
      <xs:enumeration value="HK"/>
      <xs:enumeration value="HM"/>
      <xs:enumeration value="HN"/>
      <xs:enumeration value="HR"/>
      <xs:enumeration value="HT"/>
      <xs:enumeration value="HU"/>
      <xs:enumeration value="ID"/>
      <xs:enumeration value="IE"/>
      <xs:enumeration value="IL"/>
      <xs:enumeration value="IM"/>
      <xs:enumeration value="IN"/>
      <xs:enumeration value="IO"/>
      <xs:enumeration value="IQ"/>
      <xs:enumeration value="IR"/>
      <xs:enumeration value="IS"/>
      <xs:enumeration value="IT"/>
      <xs:enumeration value="JE"/>
      <xs:enumeration value="JM"/>
      <xs:enumeration value="JO"/>
      <xs:enumeration value="JP"/>
      <xs:enumeration value="KE"/>
      <xs:enumeration value="KG"/>
      <xs:enumeration value="KH"/>
      <xs:enumeration value="KI"/>
      <xs:enumeration value="KM"/>
      <xs:enumeration value="KN"/>
      <xs:enumeration value="KP"/>
      <xs:enumeration value="KR"/>
      <xs:enumeration value="KW"/>
      <xs:enumeration value="KY"/>
      <xs:enumeration value="KZ"/>
      <xs:enumeration value="LA"/>
      <xs:enumeration value="LB"/>
      <xs:enumeration value="LC"/>
      <xs:enumeration value="LI"/>
      <xs:enumeration value="LK"/>
      <xs:enumeration value="LR"/>
      <xs:enumeration value="LS"/>
      <xs:enumeration value="LT"/>
      <xs:enumeration value="LU"/>
      <xs:enumeration value="LV"/>
      <xs:enumeration value="LY"/>
      <xs:enumeration value="MA"/>
      <xs:enumeration value="MC"/>
      <xs:enumeration value="MD"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="MF"/>
      <xs:enumeration value="MG"/>
      <xs:enumeration value="MH"/>
      <xs:enumeration value="MK"/>
      <xs:enumeration value="ML"/>
      <xs:enumeration value="MM"/>
      <xs:enumeration value="MN"/>
      <xs:enumeration value="MO"/>
      <xs:enumeration value="MP"/>
      <xs:enumeration value="MQ"/>
      <xs:enumeration value="MR"/>
      <xs:enumeration value="MS"/>
      <xs:enumeration value="MT"/>
      <xs:enumeration value="MU"/>
      <xs:enumeration value="MV"/>
      <xs:enumeration value="MW"/>
      <xs:enumeration value="MX"/>
      <xs:enumeration value="MY"/>
      <xs:enumeration value="MZ"/>
      <xs:enumeration value="NA"/>
      <xs:enumeration value="NC"/>
      <xs:enumeration value="NE"/>
      <xs:enumeration value="NF"/>
      <xs:enumeration value="NG"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="NL"/>
      <xs:enumeration value="NO"/>
      <xs:enumeration value="NP"/>
      <xs:enumeration value="NR"/>
      <xs:enumeration value="NU"/>
      <xs:enumeration value="NZ"/>
      <xs:enumeration value="OM"/>
      <xs:enumeration value="PA"/>
      <xs:enumeration value="PE"/>
      <xs:enumeration value="PF"/>
      <xs:enumeration value="PG"/>
      <xs:enumeration value="PH"/>
      <xs:enumeration value="PK"/>
      <xs:enumeration value="PL"/>
      <xs:enumeration value="PM"/>
      <xs:enumeration value="PN"/>
      <xs:enumeration value="PR"/>
      <xs:enumeration value="PS"/>
      <xs:enumeration value="PT"/>
      <xs:enumeration value="PW"/>
      <xs:enumeration value="PY"/>
      <xs:enumeration value="QA"/>
      <xs:enumeration value="RE"/>
      <xs:enumeration value="RO"/>
      <xs:enumeration value="RS"/>
      <xs:enumeration value="RU"/>
      <xs:enumeration value="RW"/>
      <xs:enumeration value="SA"/>
      <xs:enumeration value="SB"/>
      <xs:enumeration value="SC"/>
      <xs:enumeration value="SD"/>
      <xs:enumeration value="SE"/>
      <xs:enumeration value="SG"/>
      <xs:enumeration value="SH"/>
      <xs:enumeration value="SI"/>
      <xs:enumeration value="SJ"/>
      <xs:enumeration value="SK"/>
      <xs:enumeration value="SL"/>
      <xs:enumeration value="SM"/>
      <xs:enumeration value="SN"/>
      <xs:enumeration value="SO"/>
      <xs:enumeration value="SR"/>
      <xs:enumeration value="SS"/>
      <xs:enumeration value="ST"/>
      <xs:enumeration value="SV"/>
      <xs:enumeration value="SX"/>
      <xs:enumeration value="SY"/>
      <xs:enumeration value="SZ"/>
      <xs:enumeration value="TC"/>
      <xs:enumeration value="TD"/>
      <xs:enumeration value="TF"/>
      <xs:enumeration value="TG"/>
      <xs:enumeration value="TH"/>
      <xs:enumeration value="TJ"/>
      <xs:enumeration value="TK"/>
      <xs:enumeration value="TL"/>
      <xs:enumeration value="TM"/>
      <xs:enumeration value="TN"/>
      <xs:enumeration value="TO"/>
      <xs:enumeration value="TR"/>
      <xs:enumeration value="TT"/>
      <xs:enumeration value="TV"/>
      <xs:enumeration value="TW"/>
      <xs:enumeration value="TZ"/>
      <xs:enumeration value="UA"/>
      <xs:enumeration value="UG"/>
      <xs:enumeration value="UM"/>
      <xs:enumeration value="US"/>
      <xs:enumeration value="UY"/>
      <xs:enumeration value="UZ"/>
      <xs:enumeration value="VA"/>
      <xs:enumeration value="VC"/>
      <xs:enumeration value="VE"/>
      <xs:enumeration value="VG"/>
      <xs:enumeration value="VI"/>
      <xs:enumeration value="VN"/>
      <xs:enumeration value="VU"/>
      <xs:enumeration value="WF"/>
      <xs:enumeration value="WS"/>
      <xs:enumeration value="XK"/>
      <xs:enumeration value="YE"/>
      <xs:enumeration value="YT"/>
      <xs:enumeration value="ZA"/>
      <xs:enumeration value="ZM"/>
      <xs:enumeration value="ZW"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="documentTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="18+ Card"/>
      <xs:enumeration value="Bank Statement"/>
      <xs:enumeration value="Credit Card"/>
      <xs:enumeration value="Debit Card"/>
      <xs:enumeration value="Deed Poll"/>
      <xs:enumeration value="Descent Certificate"/>
      <xs:enumeration value="Electricity Bill"/>
      <xs:enumeration value="Emergency Travel Document"/>
      <xs:enumeration value="Foreign Birth Certificate"/>
      <xs:enumeration value="Foreign Citizenship Certificate"/>
      <xs:enumeration value="Gas Bill"/>
      <xs:enumeration value="Government Benefits Notice"/>
      <xs:enumeration value="Health Care Card"/>
      <xs:enumeration value="International Driver License"/>
      <xs:enumeration value="International Passport"/>
      <xs:enumeration value="Internet Service Provider Bill"/>
      <xs:enumeration value="Landline Phone Bill"/>
      <xs:enumeration value="Marriage Certificate"/>
      <xs:enumeration value="Medicare Card"/>
      <xs:enumeration value="National Identity Card"/>
      <xs:enumeration value="New Zealand Birth Certificate"/>
      <xs:enumeration value="New Zealand Certificate of Identity"/>
      <xs:enumeration value="New Zealand Citizenship Certificate"/>
      <xs:enumeration value="New Zealand Driver Licence"/>
      <xs:enumeration value="New Zealand Firearms Licence"/>
      <xs:enumeration value="New Zealand Passport"/>
      <xs:enumeration value="New Zealand Refugee Travel Document"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Pension Card"/>
      <xs:enumeration value="Proof of Age Card"/>
      <xs:enumeration value="Rates Notice"/>
      <xs:enumeration value="Tax Assessment"/>
      <xs:enumeration value="Visa"/>
      <xs:enumeration value="Water Utility Bill"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="durationUnitsList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Days"/>
      <xs:enumeration value="Months"/>
      <xs:enumeration value="Weeks"/>
      <xs:enumeration value="Years"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="estimateBasisNonRealEstateAssetList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Applicant Estimate"/>
      <xs:enumeration value="Certified Valuation"/>
      <xs:enumeration value="Contract of Sale"/>
      <xs:enumeration value="Price Guide"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="estimateBasisRealEstateAssetList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Applicant Estimate"/>
      <xs:enumeration value="Bank Assessment"/>
      <xs:enumeration value="Certified Valuation"/>
      <xs:enumeration value="Contract of Sale"/>
      <xs:enumeration value="Electronic Valuation"/>
      <xs:enumeration value="Rates Notice"/>
      <xs:enumeration value="RP Data"/>
      <xs:enumeration value="Valocity"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="feeTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Acceptance Fee"/>
      <xs:enumeration value="Additional Security Fee"/>
      <xs:enumeration value="Annual Fee"/>
      <xs:enumeration value="Application Fee"/>
      <xs:enumeration value="Brokerage Fee"/>
      <xs:enumeration value="Cash Benefit Insurance"/>
      <xs:enumeration value="Construction Progress Inspection Fee"/>
      <xs:enumeration value="Consumer Credit Insurance"/>
      <xs:enumeration value="Documentation Fee"/>
      <xs:enumeration value="Early Repayment Admin Fee"/>
      <xs:enumeration value="Establishment Fee"/>
      <xs:enumeration value="Extended Warranty Insurance"/>
      <xs:enumeration value="Guarantee Asset Protection Insurance"/>
      <xs:enumeration value="Inspection Fee"/>
      <xs:enumeration value="Land Titles Office Final Search Fee"/>
      <xs:enumeration value="Land Titles Office Search Fee"/>
      <xs:enumeration value="Legal Fee"/>
      <xs:enumeration value="Line Fee"/>
      <xs:enumeration value="LMI"/>
      <xs:enumeration value="Loan Fee"/>
      <xs:enumeration value="Mortgage Registration"/>
      <xs:enumeration value="Motor Vehicle Insurance"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Package Fee"/>
      <xs:enumeration value="PPSR Fee"/>
      <xs:enumeration value="Progress Fee"/>
      <xs:enumeration value="Rate Lock Fee"/>
      <xs:enumeration value="Re-documentation Fee"/>
      <xs:enumeration value="Reduced Equity Fee"/>
      <xs:enumeration value="Risk Fee"/>
      <xs:enumeration value="Rollover Fee"/>
      <xs:enumeration value="Security Guarantee Fee"/>
      <xs:enumeration value="Security Release Fee"/>
      <xs:enumeration value="Service Plan"/>
      <xs:enumeration value="Settlement Fee"/>
      <xs:enumeration value="Stamp Duty on Mortgage"/>
      <xs:enumeration value="Stamp Duty on Transfer of Property"/>
      <xs:enumeration value="Substitute Security Fee"/>
      <xs:enumeration value="Switch Fee"/>
      <xs:enumeration value="Third Party Document Production Fee"/>
      <xs:enumeration value="Title Transfer Fee"/>
      <xs:enumeration value="Tyre and Rim Insurance"/>
      <xs:enumeration value="Unused Facility Fee"/>
      <xs:enumeration value="Valuation Fee"/>
      <xs:enumeration value="Withdrawal of Caveat Fee"/>
      <xs:enumeration value="Withdrawal of Writ Fee"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="financialAssetTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Cash"/>
      <xs:enumeration value="Investment"/>
      <xs:enumeration value="KiwiSaver"/>
      <xs:enumeration value="Managed Funds"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Pension Account"/>
      <xs:enumeration value="Receivables"/>
      <xs:enumeration value="Savings Account"/>
      <xs:enumeration value="Shares and Debentures"/>
      <xs:enumeration value="Superannuation"/>
      <xs:enumeration value="Term Deposit"/>
      <xs:enumeration value="Transaction Account"/>
      <xs:enumeration value="Trust Beneficial Interest"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="financialInstitutionList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Afterpay"/>
      <xs:enumeration value="ANZ Bank"/>
      <xs:enumeration value="ASB Bank"/>
      <xs:enumeration value="Bank of Baroda"/>
      <xs:enumeration value="Bank of China"/>
      <xs:enumeration value="Bank of India"/>
      <xs:enumeration value="Bank of New Zealand"/>
      <xs:enumeration value="Bank of Tokyo-Mitsubishi"/>
      <xs:enumeration value="Brighten Home Loans"/>
      <xs:enumeration value="China Construction Bank"/>
      <xs:enumeration value="Citibank"/>
      <xs:enumeration value="Citywide Home Loans"/>
      <xs:enumeration value="Commonwealth Bank"/>
      <xs:enumeration value="Deutsche Bank"/>
      <xs:enumeration value="Genoapay"/>
      <xs:enumeration value="Heartland Bank"/>
      <xs:enumeration value="Humm"/>
      <xs:enumeration value="International Commercial Bank of China"/>
      <xs:enumeration value="JPMorgan Chase Bank"/>
      <xs:enumeration value="Kiwibank"/>
      <xs:enumeration value="Klarna"/>
      <xs:enumeration value="Kookmin Bank"/>
      <xs:enumeration value="Laybuy"/>
      <xs:enumeration value="Link Financial Group Limited"/>
      <xs:enumeration value="Openpay"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Oxipay"/>
      <xs:enumeration value="PartPay"/>
      <xs:enumeration value="Pepper New Zealand"/>
      <xs:enumeration value="Rabobank Nederland"/>
      <xs:enumeration value="Rabobank New Zealand"/>
      <xs:enumeration value="Southland Building Society"/>
      <xs:enumeration value="The Co-operative Bank"/>
      <xs:enumeration value="The Hongkong and Shanghai Banking Corporation"/>
      <xs:enumeration value="TSB Bank"/>
      <xs:enumeration value="Westpac Bank"/>
      <xs:enumeration value="Zip Co"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="foreignEmployedBasisList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Casual"/>
      <xs:enumeration value="Commission Only"/>
      <xs:enumeration value="Contract"/>
      <xs:enumeration value="Full Time"/>
      <xs:enumeration value="Part Time"/>
      <xs:enumeration value="Seasonal"/>
      <xs:enumeration value="Temporary"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frequencyFullList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Daily"/>
      <xs:enumeration value="Fortnightly"/>
      <xs:enumeration value="Half Yearly"/>
      <xs:enumeration value="Monthly"/>
      <xs:enumeration value="One Off"/>
      <xs:enumeration value="Quarterly"/>
      <xs:enumeration value="Seasonal"/>
      <xs:enumeration value="Weekly"/>
      <xs:enumeration value="Yearly"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frequencyShortList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Fortnightly"/>
      <xs:enumeration value="Monthly"/>
      <xs:enumeration value="Weekly"/>
      <xs:enumeration value="Yearly"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="interestTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Fixed Rate"/>
      <xs:enumeration value="Variable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="liabilityTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Amortising Home Loan"/>
      <xs:enumeration value="Bridging Finance"/>
      <xs:enumeration value="Buy Now Pay Later"/>
      <xs:enumeration value="Car Loan"/>
      <xs:enumeration value="Commercial Bill"/>
      <xs:enumeration value="Contingent Liability"/>
      <xs:enumeration value="Credit Card"/>
      <xs:enumeration value="Government Benefits Debt"/>
      <xs:enumeration value="HECS-HELP"/>
      <xs:enumeration value="Hire Purchase"/>
      <xs:enumeration value="Invoice Financing Loan"/>
      <xs:enumeration value="Lease"/>
      <xs:enumeration value="Line of Credit"/>
      <xs:enumeration value="Line of Credit Home Loan"/>
      <xs:enumeration value="Loan as Guarantor"/>
      <xs:enumeration value="Margin Loan"/>
      <xs:enumeration value="Mortgage Loan"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Other Loan"/>
      <xs:enumeration value="Outstanding Taxation"/>
      <xs:enumeration value="Overdraft"/>
      <xs:enumeration value="Personal Loan"/>
      <xs:enumeration value="Store Card"/>
      <xs:enumeration value="Student Loan"/>
      <xs:enumeration value="Term Loan"/>
      <xs:enumeration value="Trade Finance Loan"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="livingExpenseCategoryList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Body Corporate Fees, Strata Fees and Land Tax on Owner Occupied Principal Place of Residence"/>
      <xs:enumeration value="Childcare"/>
      <xs:enumeration value="Clothing and personal care"/>
      <xs:enumeration value="Education"/>
      <xs:enumeration value="General Basic Insurances"/>
      <xs:enumeration value="Groceries"/>
      <xs:enumeration value="Health Insurance"/>
      <xs:enumeration value="Higher Education, Vocational Training and Professional Fees"/>
      <xs:enumeration value="Insurance"/>
      <xs:enumeration value="Investment Property Running Costs"/>
      <xs:enumeration value="Investment property utilities, rates and related costs"/>
      <xs:enumeration value="Medical and health"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Owner occupied property utilities, rates and related costs"/>
      <xs:enumeration value="Pet Care"/>
      <xs:enumeration value="Primary Residence Running Costs"/>
      <xs:enumeration value="Private Schooling and Tuition"/>
      <xs:enumeration value="Public or Government Primary and Secondary Education"/>
      <xs:enumeration value="Recreation and entertainment"/>
      <xs:enumeration value="Secondary Residence Running Costs"/>
      <xs:enumeration value="Sickness and Personal Accident Insurance, Life Insurance"/>
      <xs:enumeration value="Telephone, internet, pay TV and media streaming subscriptions"/>
      <xs:enumeration value="Transport"/>
      <xs:enumeration value="Voluntary Superannuation Contributions"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="loanTermUnitsList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Days"/>
      <xs:enumeration value="Months"/>
      <xs:enumeration value="Weeks"/>
      <xs:enumeration value="Years"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="maritalStatusList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="De Facto"/>
      <xs:enumeration value="Divorced"/>
      <xs:enumeration value="Married"/>
      <xs:enumeration value="Separated"/>
      <xs:enumeration value="Single"/>
      <xs:enumeration value="Unknown"/>
      <xs:enumeration value="Widowed"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nameTitleList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Dr"/>
      <xs:enumeration value="Hon"/>
      <xs:enumeration value="Lady"/>
      <xs:enumeration value="Miss"/>
      <xs:enumeration value="Mr"/>
      <xs:enumeration value="Mrs"/>
      <xs:enumeration value="Ms"/>
      <xs:enumeration value="Mx"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Prof"/>
      <xs:enumeration value="R Hon"/>
      <xs:enumeration value="Rev"/>
      <xs:enumeration value="Sir"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nonRealEstateAssetTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Agricultural"/>
      <xs:enumeration value="Aircraft"/>
      <xs:enumeration value="Business"/>
      <xs:enumeration value="Cleaning"/>
      <xs:enumeration value="Earth Moving, Mining and Construction"/>
      <xs:enumeration value="Financial Asset"/>
      <xs:enumeration value="Hospitality and Leisure"/>
      <xs:enumeration value="IT and AV Equipment"/>
      <xs:enumeration value="Licence"/>
      <xs:enumeration value="Materials Handling and Lifting"/>
      <xs:enumeration value="Medical"/>
      <xs:enumeration value="Mobile Computing"/>
      <xs:enumeration value="Motor Vehicle and Transport"/>
      <xs:enumeration value="Office Equipment"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Plant, Equipment and Industrial"/>
      <xs:enumeration value="Tools of Trade"/>
      <xs:enumeration value="Water Rights"/>
      <xs:enumeration value="Watercraft"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nzDialingCodeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="01"/>
      <xs:enumeration value="011"/>
      <xs:enumeration value="020"/>
      <xs:enumeration value="021"/>
      <xs:enumeration value="022"/>
      <xs:enumeration value="023"/>
      <xs:enumeration value="024"/>
      <xs:enumeration value="025"/>
      <xs:enumeration value="026"/>
      <xs:enumeration value="027"/>
      <xs:enumeration value="028"/>
      <xs:enumeration value="029"/>
      <xs:enumeration value="03"/>
      <xs:enumeration value="04"/>
      <xs:enumeration value="05"/>
      <xs:enumeration value="050"/>
      <xs:enumeration value="0508"/>
      <xs:enumeration value="06"/>
      <xs:enumeration value="07"/>
      <xs:enumeration value="070"/>
      <xs:enumeration value="08"/>
      <xs:enumeration value="080"/>
      <xs:enumeration value="0800"/>
      <xs:enumeration value="09"/>
      <xs:enumeration value="090"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="50"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="otherCommitmentCategoryList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Board"/>
      <xs:enumeration value="Child and Spousal Maintenance"/>
      <xs:enumeration value="Child Maintenance"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Rent"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="payeBasisList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Casual"/>
      <xs:enumeration value="Commission Only"/>
      <xs:enumeration value="Contract"/>
      <xs:enumeration value="Full Time"/>
      <xs:enumeration value="Part Time"/>
      <xs:enumeration value="Seasonal"/>
      <xs:enumeration value="Temporary"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="paymentTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Interest Capitalised"/>
      <xs:enumeration value="Interest Only"/>
      <xs:enumeration value="Interest Partially Capitalised"/>
      <xs:enumeration value="Prepaid Interest"/>
      <xs:enumeration value="Principal and Interest"/>
      <xs:enumeration value="Principal Interest Fees"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="planTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Building Unit Plan"/>
      <xs:enumeration value="Building Unit Plan of Amalgamation"/>
      <xs:enumeration value="Building Unit Plan of Resubdivision"/>
      <xs:enumeration value="Cluster Plan"/>
      <xs:enumeration value="Community Plan"/>
      <xs:enumeration value="Crown Plan"/>
      <xs:enumeration value="Deposited Plan"/>
      <xs:enumeration value="Diagram"/>
      <xs:enumeration value="Filed Plan"/>
      <xs:enumeration value="GRO Plan"/>
      <xs:enumeration value="Group Title Plan"/>
      <xs:enumeration value="Group Title Plan of Amalgamation"/>
      <xs:enumeration value="Group Title Plan of Resubdivision"/>
      <xs:enumeration value="Group Titles Plan"/>
      <xs:enumeration value="Group Titles Plan of Amalgamation"/>
      <xs:enumeration value="Group Titles Plan of Resubdivision"/>
      <xs:enumeration value="Hundred Plan"/>
      <xs:enumeration value="Leasehold Building Unit Plan (South Bank)"/>
      <xs:enumeration value="Lodged Plan"/>
      <xs:enumeration value="Lower Building Unit Plan"/>
      <xs:enumeration value="Mixed Community Plan"/>
      <xs:enumeration value="Mixed Precinct Plan"/>
      <xs:enumeration value="Mixed Stratum Plan"/>
      <xs:enumeration value="Out of Hundred Plan"/>
      <xs:enumeration value="Plan"/>
      <xs:enumeration value="Plan of Consolidation"/>
      <xs:enumeration value="Plan of Subdivision"/>
      <xs:enumeration value="Registered Plan"/>
      <xs:enumeration value="Road Plan"/>
      <xs:enumeration value="Strata Plan"/>
      <xs:enumeration value="Stratum Plan (South Bank)"/>
      <xs:enumeration value="Stratum Plan of Amalgamation (South Bank)"/>
      <xs:enumeration value="Stratum Plan of Subdivision (South Bank)"/>
      <xs:enumeration value="Survey Plan"/>
      <xs:enumeration value="Survey Strata Plan"/>
      <xs:enumeration value="Town Plan"/>
      <xs:enumeration value="Upper Building Unit Plan"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="poBoxTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Community Mail Bag"/>
      <xs:enumeration value="Counter Delivery"/>
      <xs:enumeration value="PO Box"/>
      <xs:enumeration value="Poste Restante"/>
      <xs:enumeration value="Private Bag"/>
      <xs:enumeration value="Response Bag"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="primaryPurposeLoanPurposeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Business"/>
      <xs:enumeration value="Investment Non Residential"/>
      <xs:enumeration value="Investment Residential"/>
      <xs:enumeration value="Owner Occupied"/>
      <xs:enumeration value="Personal"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="primaryPurposeRealEstateAssetList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Business"/>
      <xs:enumeration value="Investment"/>
      <xs:enumeration value="Owner Occupied"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="proportionsList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Equal"/>
      <xs:enumeration value="Not Specified"/>
      <xs:enumeration value="Specified"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="realEstateAssetStatusList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Established"/>
      <xs:enumeration value="New Building"/>
      <xs:enumeration value="Off the Plan"/>
      <xs:enumeration value="Vacant Land"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="repaymentFrequencyList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Daily"/>
      <xs:enumeration value="Fortnightly"/>
      <xs:enumeration value="Half Yearly"/>
      <xs:enumeration value="Monthly"/>
      <xs:enumeration value="One Off"/>
      <xs:enumeration value="Quarterly"/>
      <xs:enumeration value="Seasonal"/>
      <xs:enumeration value="Weekly"/>
      <xs:enumeration value="Yearly"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="residencyStatusList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Non Resident"/>
      <xs:enumeration value="Permanently in New Zealand"/>
      <xs:enumeration value="Temporarily in New Zealand"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shareTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Bearer Securities"/>
      <xs:enumeration value="Debentures"/>
      <xs:enumeration value="Inscribed Stock Cth"/>
      <xs:enumeration value="Inscribed Stock State"/>
      <xs:enumeration value="Listed Shares"/>
      <xs:enumeration value="Options"/>
      <xs:enumeration value="Unlisted Shares"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="streetTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Access"/>
      <xs:enumeration value="Accessway"/>
      <xs:enumeration value="Alley"/>
      <xs:enumeration value="Anchorage"/>
      <xs:enumeration value="Approach"/>
      <xs:enumeration value="Arcade"/>
      <xs:enumeration value="Arch"/>
      <xs:enumeration value="Avenue"/>
      <xs:enumeration value="Bank"/>
      <xs:enumeration value="Bay"/>
      <xs:enumeration value="Beach"/>
      <xs:enumeration value="Belt"/>
      <xs:enumeration value="Bend"/>
      <xs:enumeration value="Bluff"/>
      <xs:enumeration value="Boulevard"/>
      <xs:enumeration value="Brae"/>
      <xs:enumeration value="Briars"/>
      <xs:enumeration value="Bridge"/>
      <xs:enumeration value="Bypass"/>
      <xs:enumeration value="Centre"/>
      <xs:enumeration value="Chase"/>
      <xs:enumeration value="Circle"/>
      <xs:enumeration value="Circus"/>
      <xs:enumeration value="Claim"/>
      <xs:enumeration value="Close"/>
      <xs:enumeration value="Common"/>
      <xs:enumeration value="Court"/>
      <xs:enumeration value="Courts"/>
      <xs:enumeration value="Cove"/>
      <xs:enumeration value="Creek"/>
      <xs:enumeration value="Crescent"/>
      <xs:enumeration value="Crest"/>
      <xs:enumeration value="Cul"/>
      <xs:enumeration value="Dale"/>
      <xs:enumeration value="Dell"/>
      <xs:enumeration value="Downs"/>
      <xs:enumeration value="Drive"/>
      <xs:enumeration value="Dune"/>
      <xs:enumeration value="Elm"/>
      <xs:enumeration value="End"/>
      <xs:enumeration value="Entrance"/>
      <xs:enumeration value="Esplanade"/>
      <xs:enumeration value="Estate"/>
      <xs:enumeration value="Fairway"/>
      <xs:enumeration value="Fall"/>
      <xs:enumeration value="Fare"/>
      <xs:enumeration value="Farms"/>
      <xs:enumeration value="Fen"/>
      <xs:enumeration value="Fern"/>
      <xs:enumeration value="Flat"/>
      <xs:enumeration value="Flats"/>
      <xs:enumeration value="Garden"/>
      <xs:enumeration value="Gardens"/>
      <xs:enumeration value="Gate"/>
      <xs:enumeration value="Glade"/>
      <xs:enumeration value="Glen"/>
      <xs:enumeration value="Grange"/>
      <xs:enumeration value="Green"/>
      <xs:enumeration value="Grove"/>
      <xs:enumeration value="Gully"/>
      <xs:enumeration value="Haven"/>
      <xs:enumeration value="Head"/>
      <xs:enumeration value="Heights"/>
      <xs:enumeration value="Highway"/>
      <xs:enumeration value="Hill"/>
      <xs:enumeration value="Island"/>
      <xs:enumeration value="Junction"/>
      <xs:enumeration value="Key"/>
      <xs:enumeration value="Knob"/>
      <xs:enumeration value="Ladder"/>
      <xs:enumeration value="Landing"/>
      <xs:enumeration value="Lane"/>
      <xs:enumeration value="Line"/>
      <xs:enumeration value="Link"/>
      <xs:enumeration value="Lookout"/>
      <xs:enumeration value="Loop"/>
      <xs:enumeration value="Mall"/>
      <xs:enumeration value="Mead"/>
      <xs:enumeration value="Meadows"/>
      <xs:enumeration value="Mews"/>
      <xs:enumeration value="Mile"/>
      <xs:enumeration value="Motorway"/>
      <xs:enumeration value="Motu"/>
      <xs:enumeration value="Mount"/>
      <xs:enumeration value="Neaves"/>
      <xs:enumeration value="Oaks"/>
      <xs:enumeration value="Paddock"/>
      <xs:enumeration value="Paku"/>
      <xs:enumeration value="Parade"/>
      <xs:enumeration value="Park"/>
      <xs:enumeration value="Parkway"/>
      <xs:enumeration value="Pass"/>
      <xs:enumeration value="Passage"/>
      <xs:enumeration value="Path"/>
      <xs:enumeration value="Place"/>
      <xs:enumeration value="Point"/>
      <xs:enumeration value="Priors"/>
      <xs:enumeration value="Promenade"/>
      <xs:enumeration value="Quadrant"/>
      <xs:enumeration value="Quay"/>
      <xs:enumeration value="Reef"/>
      <xs:enumeration value="Reserve"/>
      <xs:enumeration value="Rest"/>
      <xs:enumeration value="Retreat"/>
      <xs:enumeration value="Ridge"/>
      <xs:enumeration value="Rise"/>
      <xs:enumeration value="Road"/>
      <xs:enumeration value="Roads"/>
      <xs:enumeration value="Roadway"/>
      <xs:enumeration value="Route"/>
      <xs:enumeration value="Row"/>
      <xs:enumeration value="Service Lane"/>
      <xs:enumeration value="Slope"/>
      <xs:enumeration value="Spa"/>
      <xs:enumeration value="Spur"/>
      <xs:enumeration value="Square"/>
      <xs:enumeration value="State Highway"/>
      <xs:enumeration value="Steep"/>
      <xs:enumeration value="Steps"/>
      <xs:enumeration value="Straight"/>
      <xs:enumeration value="Strand"/>
      <xs:enumeration value="Street"/>
      <xs:enumeration value="Terrace"/>
      <xs:enumeration value="Towers"/>
      <xs:enumeration value="Track"/>
      <xs:enumeration value="Trail"/>
      <xs:enumeration value="Tramway"/>
      <xs:enumeration value="Trees"/>
      <xs:enumeration value="Vale"/>
      <xs:enumeration value="Valley"/>
      <xs:enumeration value="Venus"/>
      <xs:enumeration value="View"/>
      <xs:enumeration value="Views"/>
      <xs:enumeration value="Village"/>
      <xs:enumeration value="Villas"/>
      <xs:enumeration value="Vista"/>
      <xs:enumeration value="Vue"/>
      <xs:enumeration value="Walk"/>
      <xs:enumeration value="Waters"/>
      <xs:enumeration value="Way"/>
      <xs:enumeration value="Wharf"/>
      <xs:enumeration value="Wynd"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="totalTermTypeList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Amortisation Term"/>
      <xs:enumeration value="Total Term"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="yesNoList">
    <xs:restriction base="xs:token">
      <xs:enumeration value="No"/>
      <xs:enumeration value="Yes"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="bsbPattern">
    <xs:restriction base="xs:string">
      <xs:pattern value="\\d{6}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="emailPattern">
    <xs:restriction base="xs:string">
      <xs:pattern value=".+@.+\\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nzbnPattern">
    <xs:restriction base="xs:string">
      <xs:pattern value="\\d{13}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nzPostCodePattern">
    <xs:restriction base="xs:string">
      <xs:pattern value="\\d{4}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="currencyType">
    <xs:restriction base="xs:decimal"/>
  </xs:simpleType>
  <xs:simpleType name="dateTimeType">
    <xs:restriction base="xs:dateTime"/>
  </xs:simpleType>
  <xs:simpleType name="dateType">
    <xs:restriction base="xs:date"/>
  </xs:simpleType>
  <xs:simpleType name="gYearType">
    <xs:restriction base="xs:gYear"/>
  </xs:simpleType>
  <xs:simpleType name="integerType">
    <xs:restriction base="xs:integer"/>
  </xs:simpleType>
  <xs:simpleType name="percentType">
    <xs:restriction base="xs:decimal"/>
  </xs:simpleType>
  <xs:simpleType name="referenceType">
    <xs:restriction base="xs:IDREF"/>
  </xs:simpleType>
  <xs:simpleType name="stringType">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="uniqueIDType">
    <xs:restriction base="xs:ID"/>
  </xs:simpleType>
</xs:schema>
`;

XSLT = `<?xml version="1.0" standalone="yes"?>
<axsl:stylesheet xmlns:axsl="http://www.w3.org/1999/XSL/Transform" xmlns:sch="http://www.ascc.net/xml/schematron" xmlns:iso="http://purl.oclc.org/dsdl/schematron" version="1.0"><!--Implementers: please note that overriding process-prolog or process-root is 
    the preferred method for meta-stylesheets to use where possible. -->
<axsl:param name="archiveDirParameter"/><axsl:param name="archiveNameParameter"/><axsl:param name="fileNameParameter"/><axsl:param name="fileDirParameter"/>

<!--PHASES-->


<!--PROLOG-->
<axsl:output xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" method="xml" omit-xml-declaration="no" standalone="yes" indent="yes"/>

<!--KEYS-->


<!--DEFAULT RULES-->


<!--MODE: SCHEMATRON-SELECT-FULL-PATH-->
<!--This mode can be used to generate an ugly though full XPath for locators-->
<axsl:template match="*" mode="schematron-select-full-path"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:template>

<!--MODE: SCHEMATRON-FULL-PATH-->
<!--This mode can be used to generate an ugly though full XPath for locators-->
<axsl:template match="*" mode="schematron-get-full-path-4"><axsl:apply-templates select="parent::*" mode="schematron-get-full-path"/><axsl:text>/</axsl:text><axsl:choose><axsl:when test="namespace-uri()=''"><axsl:value-of select="name()"/><axsl:variable name="p_1" select="1+    count(preceding-sibling::*[name()=name(current())])"/><axsl:if test="$p_1&gt;1 or following-sibling::*[name()=name(current())]">[<axsl:value-of select="$p_1"/>]</axsl:if></axsl:when><axsl:otherwise><axsl:text>*[local-name()='</axsl:text><axsl:value-of select="local-name()"/><axsl:text>' and namespace-uri()='</axsl:text><axsl:value-of select="namespace-uri()"/><axsl:text>']</axsl:text><axsl:variable name="p_2" select="1+   count(preceding-sibling::*[local-name()=local-name(current())])"/><axsl:if test="$p_2&gt;1 or following-sibling::*[local-name()=local-name(current())]">[<axsl:value-of select="$p_2"/>]</axsl:if></axsl:otherwise></axsl:choose></axsl:template><axsl:template match="@*" mode="schematron-get-full-path"><axsl:text>/</axsl:text><axsl:choose><axsl:when test="namespace-uri()=''">@<axsl:value-of select="name()"/></axsl:when><axsl:otherwise><axsl:text>@*[local-name()='</axsl:text><axsl:value-of select="local-name()"/><axsl:text>' and namespace-uri()='</axsl:text><axsl:value-of select="namespace-uri()"/><axsl:text>']</axsl:text></axsl:otherwise></axsl:choose></axsl:template>

<!--MODE: SCHEMATRON-FULL-PATH-2-->
<!--This mode can be used to generate prefixed XPath for humans-->
<axsl:template match="node() | @*" mode="schematron-get-full-path"><axsl:for-each select="ancestor-or-self::*"><axsl:text>/</axsl:text><axsl:value-of select="name(.)"/><axsl:if test="preceding-sibling::*[name(.)=name(current())]"><axsl:text>[</axsl:text><axsl:value-of select="count(preceding-sibling::*[name(.)=name(current())])+1"/><axsl:text>]</axsl:text></axsl:if></axsl:for-each><axsl:if test="not(self::*)"><axsl:text/>/@<axsl:value-of select="name(.)"/></axsl:if></axsl:template>

<!--MODE: GENERATE-ID-FROM-PATH -->
<axsl:template match="/" mode="generate-id-from-path"/><axsl:template match="text()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.text-', 1+count(preceding-sibling::text()), '-')"/></axsl:template><axsl:template match="comment()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.comment-', 1+count(preceding-sibling::comment()), '-')"/></axsl:template><axsl:template match="processing-instruction()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.processing-instruction-', 1+count(preceding-sibling::processing-instruction()), '-')"/></axsl:template><axsl:template match="@*" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.@', name())"/></axsl:template><axsl:template match="*" mode="generate-id-from-path" priority="-0.5"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:text>.</axsl:text><axsl:value-of select="concat('.',name(),'-',1+count(preceding-sibling::*[name()=name(current())]),'-')"/></axsl:template><!--MODE: SCHEMATRON-FULL-PATH-3-->
<!--This mode can be used to generate prefixed XPath for humans 
	(Top-level element has index)-->
<axsl:template match="node() | @*" mode="schematron-get-full-path-3"><axsl:for-each select="ancestor-or-self::*"><axsl:text>/</axsl:text><axsl:value-of select="name(.)"/><axsl:if test="parent::*"><axsl:text>[</axsl:text><axsl:value-of select="count(preceding-sibling::*[name(.)=name(current())])+1"/><axsl:text>]</axsl:text></axsl:if></axsl:for-each><axsl:if test="not(self::*)"><axsl:text/>/@<axsl:value-of select="name(.)"/></axsl:if></axsl:template>

<!--MODE: GENERATE-ID-2 -->
<axsl:template match="/" mode="generate-id-2">U</axsl:template><axsl:template match="*" mode="generate-id-2" priority="2"><axsl:text>U</axsl:text><axsl:number level="multiple" count="*"/></axsl:template><axsl:template match="node()" mode="generate-id-2"><axsl:text>U.</axsl:text><axsl:number level="multiple" count="*"/><axsl:text>n</axsl:text><axsl:number count="node()"/></axsl:template><axsl:template match="@*" mode="generate-id-2"><axsl:text>U.</axsl:text><axsl:number level="multiple" count="*"/><axsl:text>_</axsl:text><axsl:value-of select="string-length(local-name(.))"/><axsl:text>_</axsl:text><axsl:value-of select="translate(name(),':','.')"/></axsl:template><!--Strip characters--><axsl:template match="text()" priority="-1"/>

<!--SCHEMA METADATA-->
<axsl:template match="/"><svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" title="" schemaVersion=""><axsl:comment><axsl:value-of select="$archiveDirParameter"/>   
		 <axsl:value-of select="$archiveNameParameter"/>  
		 <axsl:value-of select="$fileNameParameter"/>  
		 <axsl:value-of select="$fileDirParameter"/></axsl:comment><svrl:active-pattern><axsl:attribute name="id">CNZ_Schematron_Rule</axsl:attribute><axsl:attribute name="name">CNZ_Schematron_Rule</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M0"/></svrl:schematron-output></axsl:template>

<!--SCHEMATRON PATTERNS-->


<!--PATTERN CNZ_Schematron_Rule-->
<axsl:variable name="transactionType" select="Package/SchemaVersion/@LIXITransactionType"/>

	<!--RULE -->
<axsl:template match="//@*" priority="1298" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="//@*"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(.='')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(.='')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An attribute value must not be an empty string.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="//@LIXICode" priority="1297" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="//@LIXICode"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".= '247M00' or .= 'ACTM00' or .= 'ADPMOO' or .= 'CFSMC1' or .= 'AJAMOO' or .= 'ASAMOO' or .= 'ASHLDV' or .= 'AAMMC1' or .= 'AMPMC1' or .= 'PDSMOO' or .= 'APCM00' or .= 'ABALO3' or .= 'ASTLC1' or .= 'AHLMO1' or .= 'ANZMC1' or .= 'AFGMO1' or .= 'APRMOO' or .= 'ASFMOO' or .= 'WBALO3' or .= 'AVTM00' or .= 'ACGMC2' or .= 'BAULC3' or .= 'BOQMOO' or .= 'BWAMC1' or .= 'ABLMC1' or .= 'BTMMOO' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BSEMOO' or .= 'BMCM03' or .= 'BRPMDV' or .= 'CSOM00' or .= 'CAPSIMOO' or .= 'CBRLV1' or .= 'CSLMC2' or .= 'HSLMC1' or .= 'CSWMOO' or .= 'CITMC1' or .= 'CJALV3' or .= 'CWVLV3' or .= 'CAFMOO' or .= 'CBAMC1' or .= 'CCSLDV' or .= 'OSNLO2' or .= 'RPDMV1' or .= 'CPAV3' or .= 'CDOMOO' or .= 'CUALDV' or .= 'CSNM00' or .= 'DALMC2' or .= 'DIMOO' or .= 'DHALDV' or .= 'DELMOO' or .= 'LTOM00' or .= 'BLMPO1' or .= 'AFMLC2' or .= 'ESKM00' or .= 'HSLMC1' or .= 'FBAAMOO' or .= 'FINMOO' or .= 'FATMI3' or .= 'FMSMS1' or .= 'FMCMO1' or .= 'FLOLDV' or .= 'SBFM00' or .= 'FFIM00' or .= 'GCULC3' or .= 'GWFMC1' or .= 'GLXM00' or .= 'GHLMO2' or .= 'HBSMC2' or .= 'HTWMV1' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HSFMO2' or .= 'HMAMV1' or .= 'EDSMC1' or .= 'HSBMC1' or .= 'IMBMC2' or .= 'INGMC1' or .= 'IDSMOO' or .= 'IDSCAL2D' or .= 'IWML01' or .= 'KNAMOO' or .= 'LTFMOO' or .= 'LANM00' or .= 'LWLMV1' or .= 'LLLM00' or .= 'LDPM00' or .= 'LTXMC2' or .= 'LFLMC2' or .= 'LOAVO3' or .= 'LMKLO1' or .= 'LCOMOO' or .= 'LWTMOO' or .= 'INSMOO' or .= 'MGSMS3' or .= 'MSLMC1' or .= 'MEBLO2' or .= 'MFAM00' or .= 'MCAMO1' or .= 'MEMS3V3' or .= 'MHLC3' or .= 'MSAM00' or .= 'MLELC1' or .= 'MSFMOO' or .= 'GALMS1' or .= 'HSLMC1' or .= 'NFSMOO' or .= 'NMCMC3' or .= 'NSAAMOO' or .= 'NPBMI2' or .= 'NGNMC1' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PNCMC2' or .= 'PONM00' or .= 'EVLMV1' or .= 'PPVMV2' or .= 'PNVMV3' or .= 'PRCMO1' or .= 'PMIMI1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'QCULO1' or .= 'RSAL2D' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'PCPMC2' or .= 'LSGM00' or .= 'STLMC2' or .= 'SARM00' or .= 'SPLMO1' or .= 'SHLMO1' or .= 'SSCM00' or .= 'SFSM00' or .= 'SPSMOO' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SMLMC1' or .= 'TDPM00' or .= 'TCSMOO' or .= 'TBELV3' or .= 'TMBLO2' or .= 'ROKM00' or .= 'TSWGMOO' or .= 'ACTLV1' or .= 'OVLMV1' or .= 'JLALV3' or .= 'TTCOP3' or .= 'ULSMOO' or .= 'UCSLO2' or .= 'RPDMV1' or .= 'VPSMV1' or .= 'VSEM00' or .= '' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2' or .= 'CPECVE4' or .= 'RHALIE2' or .= 'LYPLEC1' or .= 'EMOERJ4' or .= 'VKXPFU9' or .= 'MGDDWU6' or .= 'TLXNUI5' or .= 'ZUPKUO6' or .= 'TKCLZO7' or .= 'RQBKTT5' or .= 'GMZHMJ1' or .= 'BSINCL9' or .= 'XWTVBX9' or .= 'IPYEVT6' or .= 'ITYKDK6' or .= 'BLMHUV2' or .= 'KLWPTV5' or .= 'NNJNQE6' or .= 'WZYUEZ6' or .= 'LXUOAZ5' or .= 'KLTSGW1' or .= 'TIYTOY7' or .= 'HXBCCI9' or .= 'DTJYYV6' or .= 'ATCEQD8' or .= 'VRLBMN9' or .= 'LOZTRR8' or .= 'OGBDDJ7' or .= 'LSMYYL6' or .= 'NCFRUC8' or .= 'YZORQZ4' or .= 'OLIEAK2' or .= 'VRLCCC7' or .= 'PUWXSD2' or .= 'MBFZCQ7' or .= 'VDCXFW8' or .= 'KUUQOT9' or .= 'OXUPPA3' or .= 'TINYJC8' or .= 'QFJPSV1' or .= 'XECLCY9' or .= 'ATGUZR8' or .= 'OPQVGY8' or .= 'OPQNQD3' or .= 'AKPHSZ3' or .= 'YKOGBC7' or .= 'TWHITU9' or .= 'KALJYB5' or .= 'GERDVX5' or .= 'AJUCJE1' or .= 'PZRFOC1' or .= 'PBRJRL1' or .= 'TXJWYE2' or .= 'XNIFAR8' or .= 'YBBLHO2' or .= 'TLJJQA3' or .= 'AIIBAP2' or .= 'NNDTBH6' or .= 'UVPGGL4' or .= 'JNGMKB2' or .= 'YJKWLF6' or .= 'OZAGRJ8' or .= 'MVAQPF1' or .= 'CLSLZL5' or .= 'MSWJUE6' or .= 'SOBZTH4' or .= 'VHQTQN1' or .= 'UYNNBN4' or .= 'DITMXE8' or .= 'YWYEAI4' or .= 'UTGQAQ6' or .= 'OXSNVH8' or .= 'QLOUIQ6' or .= 'YYJMQW7' or .= 'TUQHRP1' or .= 'ABJFFO2' or .= 'KTCPBY5' or .= 'BVCNKQ7' or .= 'LYSYJA5' or .= 'SVJQXG2' or .= 'KLHJOT4' or .= 'CZOACH3' or .= 'GMHJUF6' or .= 'TKANKN2' or .= 'KAOROF7' or .= 'MMTSWJ7' or .= 'PGLGKZ4' or .= 'XEQFYT7' or .= 'KQRMLE2' or .= 'IENBPD9' or .= 'ODSICG3' or .= 'ITDDOT5' or .= 'VMXZAX2' or .= 'QPDAFR1' or .= 'BBKWWO6' or .= 'QZYEUR9' or .= 'HQPZCX3' or .= 'GQBJUE5' or .= 'LNXTNR1' or .= 'FSOCSB4' or .= 'WRFHAM1' or .= 'VNZUFX1' or .= 'MBKECM7' or .= 'WOFSWV5' or .= 'MGLQDZ2' or .= 'ZJWKDS8' or .= 'TFWAYE5' or .= 'AAOCYB7' or .= 'UFXZPV9' or .= 'SVPSOY1' or .= 'VZDPJE2' or .= 'YWCQIN4' or .= 'ABVWPW9' or .= 'UAGEND2' or .= 'CEPELJ2' or .= 'WKOCDZ7' or .= 'VVMAPA6' or .= 'OBHHWA8' or .= 'XZBCSF2' or .= 'VDKCMT5' or .= 'GVGPPM2' or .= 'FTIMHU5' or .= 'BMOWGG6' or .= 'WWLDKH8' or .= 'MMRSZV9' or .= 'UCLKFJ2' or .= 'USRJLI6' or .= 'MEQLFE3' or .= 'NFGUMX4' or .= 'RRVVFO6' or .= 'KDBCKD8' or .= 'BVXFGB6' or .= 'OPXSTS9' or .= 'ADRCZQ5' or .= 'FZGHIL2' or .= 'QUQKJE7' or .= 'QMJYFU9' or .= 'KGRDOI2' or .= 'ATLENU3' or .= 'DFTHSH2' or .= 'DEEVEX8' or .= 'BKFKKG4' or .= 'AFCFOF5' or .= 'ERBMSK5' or .= 'FBFEAY6' or .= 'IAZIJX4' or .= 'KLTRFY5' or .= 'GAQQOP4' or .= 'NVYISU1' or .= 'BBTUWO4' or .= 'KFJRHM4' or .= 'TENGAL6' or .= 'SYTFSI4' or .= 'TMVUKM3' or .= 'TFVIVR9' or .= 'BLSSHL7' or .= 'LAWYYX8' or .= 'LMHONH4' or .= 'NHGFIJ1' or .= 'XFYQDV7' or .= 'JFDOUO4' or .= 'VUGVMZ6' or .= 'CSQUXU7' or .= 'TKAEEW4' or .= 'LAKRKC4' or .= 'ODLXQH3' or .= 'QDUAZA1' or .= 'CUHIKP3' or .= 'YMLRBH8' or .= 'WMYBYN5' or .= 'BYZVOR4' or .= 'ZRILRT1' or .= 'YBRHSY8' or .= 'IWLNFZ3' or .= 'MEIXEB7' or .= 'AVMAOU7' or .= 'OSCRSF1' or .= 'PWURZC5' or .= 'EBQEVN2' or .= 'TFGLUK2' or .= 'WGBPQF8' or .= 'MTHXOR8' or .= 'ZYQDQO5' or .= 'WJUFUR7' or .= 'KSOEUN6' or .= 'EOXQDN3' or .= 'WCETHY7' or .= 'ZGNTWN9' or .= 'YLCNZO6' or .= 'SWKBWC3' or .= 'UIUDYJ1' or .= 'QYCKXQ7' or .= 'RZTDLD8' or .= 'VGEDIP9' or .= 'EPVUPZ5' or .= 'KTDBMX6' or .= 'NIGUEZ9' or .= 'MTFYLU1' or .= 'GCRBOR6' or .= 'NDFCWI9' or .= 'EFPFLS9' or .= 'JBDHAH8' or .= 'SJLHVZ4' or .= 'IZARYX2' or .= 'BEVAHR6' or .= 'MVEKLZ6' or .= 'DNBUYU9' or .= 'JIEBCH9' or .= 'AOXHQQ1' or .= 'HSSLRR9' or .= 'ALDJDQ8' or .= 'GNPTKH9' or .= 'SPBUOT6' or .= 'DFRVHR1' or .= 'GBCVRY5' or .= 'HPGMIQ9' or .= 'RLWCOS5' or .= 'CLKCPC7' or .= 'RXIKUK2' or .= 'DAYLMI3' or .= 'CZTRWN3' or .= 'ATLZIR2' or .= 'CCLDND5' or .= 'RPJZPU8' or .= 'VIAZGU9' or .= 'IWUVXI7' or .= 'CGXQEN5' or .= 'ENCPEY6' or .= 'IHZNAO4' or .= 'RIQQWX1' or .= 'ZUAQYD6' or .= 'BQHSBE2' or .= 'TMSVJQ1' or .= 'BUDORV7' or .= 'AZLPEF4' or .= 'ZIYENL3' or .= 'ZUUCPJ5' or .= 'VYUSCI5' or .= 'EXUBIU6' or .= 'UNVTIE2' or .= 'RIHWRP7' or .= 'ZIGOEW4' or .= 'JSXNDZ8' or .= 'VIAUBI3' or .= 'SMTJRN9' or .= 'VZFCXS2' or .= 'FSLUII4' or .= 'HUUUIJ5' or .= 'HMHVPE2' or .= 'WATKXH8' or .= 'PDXEQK2' or .= 'GHVZTW8' or .= 'BSCKEN4' or .= 'KPUEYM1' or .= 'PNAXHL3' or .= 'NSMIDO6' or .= 'VIOAGY9' or .= 'GUKBPB1' or .= 'LYAHUM9' or .= 'ITLTZZ4' or .= 'VTZILP5' or .= 'LEBAJD7' or .= 'QEGRET1' or .= 'PYHSYB6' or .= 'PUIVQY8' or .= 'LQGBFE1' or .= 'BYLSGC8' or .= 'RARYQE6' or .= 'LEBFNB7' or .= 'TKXEPS2' or .= 'MPKCDE3' or .= 'MDUCKN1' or .= 'RGOFTW2' or .= 'AMAJRQ1' or .= 'MESWEE5' or .= 'EQLOHT8' or .= 'PZSDFX2' or .= 'ZXDMEW5' or .= 'FDUSVN7' or .= 'LCVBHS1' or .= 'VSQRVA9' or .= 'NXTKUR7' or .= 'WHQTUP3' or .= 'QOTQUS1' or .= 'PETRUK4' or .= 'FORTVM4' or .= 'MTQIDA3' or .= 'HVFBPY2' or .= 'ISYBHP2' or .= 'QNWNYE7' or .= 'AQYYBC1' or .= 'JWLWDT7' or .= 'GMUVHG9' or .= 'RXKVKA6' or .= 'TCCOKL2' or .= 'NYEIUS2' or .= 'VUKXAI1' or .= 'KRSGDZ8' or .= 'RYACRN3' or .= 'AEMBCC2' or .= 'BTRCPO3' or .= 'UOVCVQ1' or .= 'NWBLCI8' or .= 'UFJFHR7' or .= 'DMCTVV6' or .= 'UOCNJY8' or .= 'CWHOGO4' or .= 'ROUPOV4' or .= 'VHCAXS9' or .= 'HMEMSX4' or .= 'USIBUQ4' or .= 'IXWZBU1' or .= 'SHTUOB6' or .= 'UJXFBS2' or .= 'UOIKLZ6' or .= 'PUJSMW1' or .= 'KBMUUH1' or .= 'XKJZZG8' or .= 'CGNMSM8' or .= 'NRHFSV9' or .= 'SUXKCM5' or .= 'WUYLHF8' or .= 'QTBENX8' or .= 'PBQJAT9' or .= 'CATTUE3' or .= 'KSRFLH5' or .= 'OTCXQM9' or .= 'YIWPFN6' or .= 'TLJHWC8' or .= 'GPXDCQ5' or .= 'HOERJR6' or .= 'KGMGNH3' or .= 'FJXZSQ6' or .= 'YCIXPT9' or .= 'BUDMFU6' or .= 'JAJGMV3' or .= 'ZKSLRW5' or .= 'ERMRYJ8' or .= 'XPCVRP7' or .= 'FAUDOZ8' or .= 'TQWEEN5' or .= 'JMBURE4' or .= 'EQFFKG6' or .= 'RIQSZK7' or .= 'JHRFWE4' or .= 'GTRKCQ7' or .= 'LOFWIS1' or .= 'NCKUNV5' or .= 'RJJPSS3' or .= 'UXXFCF4' or .= 'URWETF7' or .= 'QYTGMJ2' or .= 'QQOXWJ1' or .= 'ILMBTG1' or .= 'KWNGRL7' or .= 'SGZZFJ9' or .= 'BWLARP4' or .= 'UTNPTS1' or .= 'KAEVVB6' or .= 'TLRADW2' or .= 'OQXJMX3' or .= 'NMIZNT6' or .= 'JNJKCT7' or .= 'JQLVHT3' or .= 'QNMHPP2' or .= 'WVNZVO7' or .= 'STDZAH6' or .= 'RPYQCF6' or .= 'JAJJMD1' or .= 'SNOKDU6' or .= 'AGJHUT1' or .= 'AQTMZZ3' or .= 'MBZKWH8' or .= 'OOVEXS7' or .= 'PFPPWA6' or .= 'HGKJVA4' or .= 'PQMGEL3' or .= 'IHAUYM4' or .= 'EOXXKU1' or .= 'RPQJDP3' or .= 'UYNKFH6' or .= 'AQXYXL9' or .= 'PWTVJS9' or .= 'TUXXAR3' or .= 'ZDJIGM7' or .= 'GWSCUB3' or .= 'XFOJXK9' or .= 'JUNPDU7' or .= 'ZMELIK6' or .= 'YNVDZK2' or .= 'RCRUVW6' or .= 'ASGJTK7' or .= 'QAYWKQ2' or .= 'PTENIV3' or .= 'IESELC8' or .= 'JMRCJZ7' or .= 'WZDJZJ8' or .= 'IRWSSD4' or .= 'XXKQJY7' or .= 'QYQMCN3' or .= 'EHKIYI9' or .= 'XHTZHH7' or .= 'MHRHRQ9' or .= 'WMVSVE6' or .= 'PVVLBY2' or .= 'CTNYKG2' or .= 'LEHCXM7' or .= 'NPZSJR3' or .= 'AYXPKR1' or .= 'SMPNBK9' or .= 'PBHHIN4' or .= 'YXYCLR4' or .= 'IERVUE9' or .= 'QYCNQW4' or .= 'ZLXJOI1' or .= 'IDOHSS3' or .= 'DUXUQK1' or .= 'CSQQLV4' or .= 'DLMRGD4' or .= 'SZQEBH1' or .= 'QUXVQP5' or .= 'LYXNEB1' or .= 'PVQFDQ7' or .= 'IBRTKJ6' or .= 'GDSCVU3' or .= 'VWEJFM2' or .= 'DJWFAE8' or .= 'XCRIIJ9' or .= 'AALDYG5' or .= 'QMPRLO7' or .= 'OOQOQY8' or .= 'UNTISV6' or .= 'VNJKUF2' or .= 'HSKOMV1' or .= 'BZOWLT9' or .= 'RLRIIE9' or .= 'WUGAWG5' or .= 'JFOSEM3' or .= 'RCENLO2' or .= 'PYRVQA9' or .= 'JWARDU7' or .= 'BMWWBU7' or .= 'KMUGYX2' or .= 'PJYCDU9' or .= 'AWBSHQ2' or .= 'IBYVDR2' or .= 'BPBTBX3' or .= 'IZCBUU3' or .= 'EUMAVS9' or .= 'TGHJVI7' or .= 'GAVEMT4' or .= 'SAMONT9' or .= 'RYZNVD3' or .= 'TMUWZO3' or .= 'PPBDNY3' or .= 'AOFKQA3' or .= 'RVTJEN1' or .= 'NASZPO9' or .= 'MAGGDC8' or .= 'KZBCVT9' or .= 'IFBHOV1' or .= 'OJFQRD3' or .= 'JUUNJD7' or .= 'JZRGUV4' or .= 'HKVNRB9' or .= 'NHSJMV2' or .= 'IRCVFY7' or .= 'ZDQTLD6' or .= 'FQDQUE4' or .= 'JJQZBB5' or .= 'ZXIUOU1' or .= 'JVZFUA7'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".= '247M00' or .= 'ACTM00' or .= 'ADPMOO' or .= 'CFSMC1' or .= 'AJAMOO' or .= 'ASAMOO' or .= 'ASHLDV' or .= 'AAMMC1' or .= 'AMPMC1' or .= 'PDSMOO' or .= 'APCM00' or .= 'ABALO3' or .= 'ASTLC1' or .= 'AHLMO1' or .= 'ANZMC1' or .= 'AFGMO1' or .= 'APRMOO' or .= 'ASFMOO' or .= 'WBALO3' or .= 'AVTM00' or .= 'ACGMC2' or .= 'BAULC3' or .= 'BOQMOO' or .= 'BWAMC1' or .= 'ABLMC1' or .= 'BTMMOO' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BSEMOO' or .= 'BMCM03' or .= 'BRPMDV' or .= 'CSOM00' or .= 'CAPSIMOO' or .= 'CBRLV1' or .= 'CSLMC2' or .= 'HSLMC1' or .= 'CSWMOO' or .= 'CITMC1' or .= 'CJALV3' or .= 'CWVLV3' or .= 'CAFMOO' or .= 'CBAMC1' or .= 'CCSLDV' or .= 'OSNLO2' or .= 'RPDMV1' or .= 'CPAV3' or .= 'CDOMOO' or .= 'CUALDV' or .= 'CSNM00' or .= 'DALMC2' or .= 'DIMOO' or .= 'DHALDV' or .= 'DELMOO' or .= 'LTOM00' or .= 'BLMPO1' or .= 'AFMLC2' or .= 'ESKM00' or .= 'HSLMC1' or .= 'FBAAMOO' or .= 'FINMOO' or .= 'FATMI3' or .= 'FMSMS1' or .= 'FMCMO1' or .= 'FLOLDV' or .= 'SBFM00' or .= 'FFIM00' or .= 'GCULC3' or .= 'GWFMC1' or .= 'GLXM00' or .= 'GHLMO2' or .= 'HBSMC2' or .= 'HTWMV1' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HSFMO2' or .= 'HMAMV1' or .= 'EDSMC1' or .= 'HSBMC1' or .= 'IMBMC2' or .= 'INGMC1' or .= 'IDSMOO' or .= 'IDSCAL2D' or .= 'IWML01' or .= 'KNAMOO' or .= 'LTFMOO' or .= 'LANM00' or .= 'LWLMV1' or .= 'LLLM00' or .= 'LDPM00' or .= 'LTXMC2' or .= 'LFLMC2' or .= 'LOAVO3' or .= 'LMKLO1' or .= 'LCOMOO' or .= 'LWTMOO' or .= 'INSMOO' or .= 'MGSMS3' or .= 'MSLMC1' or .= 'MEBLO2' or .= 'MFAM00' or .= 'MCAMO1' or .= 'MEMS3V3' or .= 'MHLC3' or .= 'MSAM00' or .= 'MLELC1' or .= 'MSFMOO' or .= 'GALMS1' or .= 'HSLMC1' or .= 'NFSMOO' or .= 'NMCMC3' or .= 'NSAAMOO' or .= 'NPBMI2' or .= 'NGNMC1' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PNCMC2' or .= 'PONM00' or .= 'EVLMV1' or .= 'PPVMV2' or .= 'PNVMV3' or .= 'PRCMO1' or .= 'PMIMI1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'QCULO1' or .= 'RSAL2D' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'PCPMC2' or .= 'LSGM00' or .= 'STLMC2' or .= 'SARM00' or .= 'SPLMO1' or .= 'SHLMO1' or .= 'SSCM00' or .= 'SFSM00' or .= 'SPSMOO' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SMLMC1' or .= 'TDPM00' or .= 'TCSMOO' or .= 'TBELV3' or .= 'TMBLO2' or .= 'ROKM00' or .= 'TSWGMOO' or .= 'ACTLV1' or .= 'OVLMV1' or .= 'JLALV3' or .= 'TTCOP3' or .= 'ULSMOO' or .= 'UCSLO2' or .= 'RPDMV1' or .= 'VPSMV1' or .= 'VSEM00' or .= '' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2' or .= 'CPECVE4' or .= 'RHALIE2' or .= 'LYPLEC1' or .= 'EMOERJ4' or .= 'VKXPFU9' or .= 'MGDDWU6' or .= 'TLXNUI5' or .= 'ZUPKUO6' or .= 'TKCLZO7' or .= 'RQBKTT5' or .= 'GMZHMJ1' or .= 'BSINCL9' or .= 'XWTVBX9' or .= 'IPYEVT6' or .= 'ITYKDK6' or .= 'BLMHUV2' or .= 'KLWPTV5' or .= 'NNJNQE6' or .= 'WZYUEZ6' or .= 'LXUOAZ5' or .= 'KLTSGW1' or .= 'TIYTOY7' or .= 'HXBCCI9' or .= 'DTJYYV6' or .= 'ATCEQD8' or .= 'VRLBMN9' or .= 'LOZTRR8' or .= 'OGBDDJ7' or .= 'LSMYYL6' or .= 'NCFRUC8' or .= 'YZORQZ4' or .= 'OLIEAK2' or .= 'VRLCCC7' or .= 'PUWXSD2' or .= 'MBFZCQ7' or .= 'VDCXFW8' or .= 'KUUQOT9' or .= 'OXUPPA3' or .= 'TINYJC8' or .= 'QFJPSV1' or .= 'XECLCY9' or .= 'ATGUZR8' or .= 'OPQVGY8' or .= 'OPQNQD3' or .= 'AKPHSZ3' or .= 'YKOGBC7' or .= 'TWHITU9' or .= 'KALJYB5' or .= 'GERDVX5' or .= 'AJUCJE1' or .= 'PZRFOC1' or .= 'PBRJRL1' or .= 'TXJWYE2' or .= 'XNIFAR8' or .= 'YBBLHO2' or .= 'TLJJQA3' or .= 'AIIBAP2' or .= 'NNDTBH6' or .= 'UVPGGL4' or .= 'JNGMKB2' or .= 'YJKWLF6' or .= 'OZAGRJ8' or .= 'MVAQPF1' or .= 'CLSLZL5' or .= 'MSWJUE6' or .= 'SOBZTH4' or .= 'VHQTQN1' or .= 'UYNNBN4' or .= 'DITMXE8' or .= 'YWYEAI4' or .= 'UTGQAQ6' or .= 'OXSNVH8' or .= 'QLOUIQ6' or .= 'YYJMQW7' or .= 'TUQHRP1' or .= 'ABJFFO2' or .= 'KTCPBY5' or .= 'BVCNKQ7' or .= 'LYSYJA5' or .= 'SVJQXG2' or .= 'KLHJOT4' or .= 'CZOACH3' or .= 'GMHJUF6' or .= 'TKANKN2' or .= 'KAOROF7' or .= 'MMTSWJ7' or .= 'PGLGKZ4' or .= 'XEQFYT7' or .= 'KQRMLE2' or .= 'IENBPD9' or .= 'ODSICG3' or .= 'ITDDOT5' or .= 'VMXZAX2' or .= 'QPDAFR1' or .= 'BBKWWO6' or .= 'QZYEUR9' or .= 'HQPZCX3' or .= 'GQBJUE5' or .= 'LNXTNR1' or .= 'FSOCSB4' or .= 'WRFHAM1' or .= 'VNZUFX1' or .= 'MBKECM7' or .= 'WOFSWV5' or .= 'MGLQDZ2' or .= 'ZJWKDS8' or .= 'TFWAYE5' or .= 'AAOCYB7' or .= 'UFXZPV9' or .= 'SVPSOY1' or .= 'VZDPJE2' or .= 'YWCQIN4' or .= 'ABVWPW9' or .= 'UAGEND2' or .= 'CEPELJ2' or .= 'WKOCDZ7' or .= 'VVMAPA6' or .= 'OBHHWA8' or .= 'XZBCSF2' or .= 'VDKCMT5' or .= 'GVGPPM2' or .= 'FTIMHU5' or .= 'BMOWGG6' or .= 'WWLDKH8' or .= 'MMRSZV9' or .= 'UCLKFJ2' or .= 'USRJLI6' or .= 'MEQLFE3' or .= 'NFGUMX4' or .= 'RRVVFO6' or .= 'KDBCKD8' or .= 'BVXFGB6' or .= 'OPXSTS9' or .= 'ADRCZQ5' or .= 'FZGHIL2' or .= 'QUQKJE7' or .= 'QMJYFU9' or .= 'KGRDOI2' or .= 'ATLENU3' or .= 'DFTHSH2' or .= 'DEEVEX8' or .= 'BKFKKG4' or .= 'AFCFOF5' or .= 'ERBMSK5' or .= 'FBFEAY6' or .= 'IAZIJX4' or .= 'KLTRFY5' or .= 'GAQQOP4' or .= 'NVYISU1' or .= 'BBTUWO4' or .= 'KFJRHM4' or .= 'TENGAL6' or .= 'SYTFSI4' or .= 'TMVUKM3' or .= 'TFVIVR9' or .= 'BLSSHL7' or .= 'LAWYYX8' or .= 'LMHONH4' or .= 'NHGFIJ1' or .= 'XFYQDV7' or .= 'JFDOUO4' or .= 'VUGVMZ6' or .= 'CSQUXU7' or .= 'TKAEEW4' or .= 'LAKRKC4' or .= 'ODLXQH3' or .= 'QDUAZA1' or .= 'CUHIKP3' or .= 'YMLRBH8' or .= 'WMYBYN5' or .= 'BYZVOR4' or .= 'ZRILRT1' or .= 'YBRHSY8' or .= 'IWLNFZ3' or .= 'MEIXEB7' or .= 'AVMAOU7' or .= 'OSCRSF1' or .= 'PWURZC5' or .= 'EBQEVN2' or .= 'TFGLUK2' or .= 'WGBPQF8' or .= 'MTHXOR8' or .= 'ZYQDQO5' or .= 'WJUFUR7' or .= 'KSOEUN6' or .= 'EOXQDN3' or .= 'WCETHY7' or .= 'ZGNTWN9' or .= 'YLCNZO6' or .= 'SWKBWC3' or .= 'UIUDYJ1' or .= 'QYCKXQ7' or .= 'RZTDLD8' or .= 'VGEDIP9' or .= 'EPVUPZ5' or .= 'KTDBMX6' or .= 'NIGUEZ9' or .= 'MTFYLU1' or .= 'GCRBOR6' or .= 'NDFCWI9' or .= 'EFPFLS9' or .= 'JBDHAH8' or .= 'SJLHVZ4' or .= 'IZARYX2' or .= 'BEVAHR6' or .= 'MVEKLZ6' or .= 'DNBUYU9' or .= 'JIEBCH9' or .= 'AOXHQQ1' or .= 'HSSLRR9' or .= 'ALDJDQ8' or .= 'GNPTKH9' or .= 'SPBUOT6' or .= 'DFRVHR1' or .= 'GBCVRY5' or .= 'HPGMIQ9' or .= 'RLWCOS5' or .= 'CLKCPC7' or .= 'RXIKUK2' or .= 'DAYLMI3' or .= 'CZTRWN3' or .= 'ATLZIR2' or .= 'CCLDND5' or .= 'RPJZPU8' or .= 'VIAZGU9' or .= 'IWUVXI7' or .= 'CGXQEN5' or .= 'ENCPEY6' or .= 'IHZNAO4' or .= 'RIQQWX1' or .= 'ZUAQYD6' or .= 'BQHSBE2' or .= 'TMSVJQ1' or .= 'BUDORV7' or .= 'AZLPEF4' or .= 'ZIYENL3' or .= 'ZUUCPJ5' or .= 'VYUSCI5' or .= 'EXUBIU6' or .= 'UNVTIE2' or .= 'RIHWRP7' or .= 'ZIGOEW4' or .= 'JSXNDZ8' or .= 'VIAUBI3' or .= 'SMTJRN9' or .= 'VZFCXS2' or .= 'FSLUII4' or .= 'HUUUIJ5' or .= 'HMHVPE2' or .= 'WATKXH8' or .= 'PDXEQK2' or .= 'GHVZTW8' or .= 'BSCKEN4' or .= 'KPUEYM1' or .= 'PNAXHL3' or .= 'NSMIDO6' or .= 'VIOAGY9' or .= 'GUKBPB1' or .= 'LYAHUM9' or .= 'ITLTZZ4' or .= 'VTZILP5' or .= 'LEBAJD7' or .= 'QEGRET1' or .= 'PYHSYB6' or .= 'PUIVQY8' or .= 'LQGBFE1' or .= 'BYLSGC8' or .= 'RARYQE6' or .= 'LEBFNB7' or .= 'TKXEPS2' or .= 'MPKCDE3' or .= 'MDUCKN1' or .= 'RGOFTW2' or .= 'AMAJRQ1' or .= 'MESWEE5' or .= 'EQLOHT8' or .= 'PZSDFX2' or .= 'ZXDMEW5' or .= 'FDUSVN7' or .= 'LCVBHS1' or .= 'VSQRVA9' or .= 'NXTKUR7' or .= 'WHQTUP3' or .= 'QOTQUS1' or .= 'PETRUK4' or .= 'FORTVM4' or .= 'MTQIDA3' or .= 'HVFBPY2' or .= 'ISYBHP2' or .= 'QNWNYE7' or .= 'AQYYBC1' or .= 'JWLWDT7' or .= 'GMUVHG9' or .= 'RXKVKA6' or .= 'TCCOKL2' or .= 'NYEIUS2' or .= 'VUKXAI1' or .= 'KRSGDZ8' or .= 'RYACRN3' or .= 'AEMBCC2' or .= 'BTRCPO3' or .= 'UOVCVQ1' or .= 'NWBLCI8' or .= 'UFJFHR7' or .= 'DMCTVV6' or .= 'UOCNJY8' or .= 'CWHOGO4' or .= 'ROUPOV4' or .= 'VHCAXS9' or .= 'HMEMSX4' or .= 'USIBUQ4' or .= 'IXWZBU1' or .= 'SHTUOB6' or .= 'UJXFBS2' or .= 'UOIKLZ6' or .= 'PUJSMW1' or .= 'KBMUUH1' or .= 'XKJZZG8' or .= 'CGNMSM8' or .= 'NRHFSV9' or .= 'SUXKCM5' or .= 'WUYLHF8' or .= 'QTBENX8' or .= 'PBQJAT9' or .= 'CATTUE3' or .= 'KSRFLH5' or .= 'OTCXQM9' or .= 'YIWPFN6' or .= 'TLJHWC8' or .= 'GPXDCQ5' or .= 'HOERJR6' or .= 'KGMGNH3' or .= 'FJXZSQ6' or .= 'YCIXPT9' or .= 'BUDMFU6' or .= 'JAJGMV3' or .= 'ZKSLRW5' or .= 'ERMRYJ8' or .= 'XPCVRP7' or .= 'FAUDOZ8' or .= 'TQWEEN5' or .= 'JMBURE4' or .= 'EQFFKG6' or .= 'RIQSZK7' or .= 'JHRFWE4' or .= 'GTRKCQ7' or .= 'LOFWIS1' or .= 'NCKUNV5' or .= 'RJJPSS3' or .= 'UXXFCF4' or .= 'URWETF7' or .= 'QYTGMJ2' or .= 'QQOXWJ1' or .= 'ILMBTG1' or .= 'KWNGRL7' or .= 'SGZZFJ9' or .= 'BWLARP4' or .= 'UTNPTS1' or .= 'KAEVVB6' or .= 'TLRADW2' or .= 'OQXJMX3' or .= 'NMIZNT6' or .= 'JNJKCT7' or .= 'JQLVHT3' or .= 'QNMHPP2' or .= 'WVNZVO7' or .= 'STDZAH6' or .= 'RPYQCF6' or .= 'JAJJMD1' or .= 'SNOKDU6' or .= 'AGJHUT1' or .= 'AQTMZZ3' or .= 'MBZKWH8' or .= 'OOVEXS7' or .= 'PFPPWA6' or .= 'HGKJVA4' or .= 'PQMGEL3' or .= 'IHAUYM4' or .= 'EOXXKU1' or .= 'RPQJDP3' or .= 'UYNKFH6' or .= 'AQXYXL9' or .= 'PWTVJS9' or .= 'TUXXAR3' or .= 'ZDJIGM7' or .= 'GWSCUB3' or .= 'XFOJXK9' or .= 'JUNPDU7' or .= 'ZMELIK6' or .= 'YNVDZK2' or .= 'RCRUVW6' or .= 'ASGJTK7' or .= 'QAYWKQ2' or .= 'PTENIV3' or .= 'IESELC8' or .= 'JMRCJZ7' or .= 'WZDJZJ8' or .= 'IRWSSD4' or .= 'XXKQJY7' or .= 'QYQMCN3' or .= 'EHKIYI9' or .= 'XHTZHH7' or .= 'MHRHRQ9' or .= 'WMVSVE6' or .= 'PVVLBY2' or .= 'CTNYKG2' or .= 'LEHCXM7' or .= 'NPZSJR3' or .= 'AYXPKR1' or .= 'SMPNBK9' or .= 'PBHHIN4' or .= 'YXYCLR4' or .= 'IERVUE9' or .= 'QYCNQW4' or .= 'ZLXJOI1' or .= 'IDOHSS3' or .= 'DUXUQK1' or .= 'CSQQLV4' or .= 'DLMRGD4' or .= 'SZQEBH1' or .= 'QUXVQP5' or .= 'LYXNEB1' or .= 'PVQFDQ7' or .= 'IBRTKJ6' or .= 'GDSCVU3' or .= 'VWEJFM2' or .= 'DJWFAE8' or .= 'XCRIIJ9' or .= 'AALDYG5' or .= 'QMPRLO7' or .= 'OOQOQY8' or .= 'UNTISV6' or .= 'VNJKUF2' or .= 'HSKOMV1' or .= 'BZOWLT9' or .= 'RLRIIE9' or .= 'WUGAWG5' or .= 'JFOSEM3' or .= 'RCENLO2' or .= 'PYRVQA9' or .= 'JWARDU7' or .= 'BMWWBU7' or .= 'KMUGYX2' or .= 'PJYCDU9' or .= 'AWBSHQ2' or .= 'IBYVDR2' or .= 'BPBTBX3' or .= 'IZCBUU3' or .= 'EUMAVS9' or .= 'TGHJVI7' or .= 'GAVEMT4' or .= 'SAMONT9' or .= 'RYZNVD3' or .= 'TMUWZO3' or .= 'PPBDNY3' or .= 'AOFKQA3' or .= 'RVTJEN1' or .= 'NASZPO9' or .= 'MAGGDC8' or .= 'KZBCVT9' or .= 'IFBHOV1' or .= 'OJFQRD3' or .= 'JUUNJD7' or .= 'JZRGUV4' or .= 'HKVNRB9' or .= 'NHSJMV2' or .= 'IRCVFY7' or .= 'ZDQTLD6' or .= 'FQDQUE4' or .= 'JJQZBB5' or .= 'ZXIUOU1' or .= 'JVZFUA7'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An organization's LIXI Code should use a code from the published LIXI Codes spreadsheet.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package" priority="1296" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Instructions/ApplicationInstructions/Submit and /Package/Content) or not(Instructions/ApplicationInstructions/Submit)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Instructions/ApplicationInstructions/Submit and /Package/Content) or not(Instructions/ApplicationInstructions/Submit)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every application submission should contain some data within the content element.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Instructions/ApplicationInstructions/Submit and /Package/Content/Application) or not(Instructions/ApplicationInstructions/Submit)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Instructions/ApplicationInstructions/Submit and /Package/Content/Application) or not(Instructions/ApplicationInstructions/Submit)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every application submission should contain some data within the application element.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(count(Instructions/ApplicationInstructions)=1 and count(Instructions/ErrorInstructions) =0)  or (count(Instructions/ApplicationInstructions)=0 and count(Instructions/ErrorInstructions) &gt;=1)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(count(Instructions/ApplicationInstructions)=1 and count(Instructions/ErrorInstructions) =0) or (count(Instructions/ApplicationInstructions)=0 and count(Instructions/ErrorInstructions) &gt;=1)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The package must contain Instructions with one of either Application Instructions or Error Instructions.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@ProductionData='No'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@ProductionData='No'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The package should only contain test data, indicated by the existence of a ProductionData attribute having a value of 'No'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Publisher and string-length(Publisher/@LIXICode) != 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Publisher and string-length(Publisher/@LIXICode) != 0"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A package must have a Publisher with a LIXI Code populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Recipient and string-length(Recipient/@LIXICode) != 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Recipient and string-length(Recipient/@LIXICode) != 0"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A Package must have a Recipient with a LIXI Code populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(Attachment) or ((Attachment/InlineAttachment) or Attachment/@URI)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(Attachment) or ((Attachment/InlineAttachment) or Attachment/@URI)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan application with an attachment should have at least one Inline Attachment or URI.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Attachment" priority="1295" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Attachment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="InlineAttachment or @URI"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="InlineAttachment or @URI"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A attachment should have a inline attchment or uri.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Attachment/Content/@Type" priority="1294" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Attachment/Content/@Type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Other' and ../@Description) or not(.='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Other' and ../@Description) or not(.='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An attachment with content type set to 'Other' should have a description specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Attachment/InlineAttachment" priority="1293" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Attachment/InlineAttachment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="text()"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="text()"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An inline attachment should have content.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application" priority="1292" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(LoanDetails or DepositAccountDetails) or not(/Package/Instructions/ApplicationInstructions/Submit) or (/Package/Instructions/ApplicationInstructions/Submit/@IsAccountVariation='Yes') or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(LoanDetails or DepositAccountDetails) or not(/Package/Instructions/ApplicationInstructions/Submit) or (/Package/Instructions/ApplicationInstructions/Submit/@IsAccountVariation='Yes') or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every application submission should contain at least one product in either loan details or deposit account details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Deposit Account' and DepositAccountDetails) or not(Overview/@ApplicationType='Deposit Account')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Deposit Account' and DepositAccountDetails) or not(Overview/@ApplicationType='Deposit Account')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Application Type in overview is 'Deposit Account', then there should be details provided in 'Deposit Account Details'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Facility Drawdown' and MasterAgreement/@Status='Approved') or not (Overview/@ApplicationType='Facility Drawdown')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Facility Drawdown' and MasterAgreement/@Status='Approved') or not (Overview/@ApplicationType='Facility Drawdown')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan application with a facility drawdown must have an approved master facility.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Lease' and LoanDetails/@Secured='Yes') or not (Overview/@ApplicationType='Lease')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Lease' and LoanDetails/@Secured='Yes') or not (Overview/@ApplicationType='Lease')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Application Type in overview is 'Lease', then 'Loan Details' should indicate that the loan is 'Secured'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Loan Variation' and AccountVariation) or not (Overview/@ApplicationType='Loan Variation')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Loan Variation' and AccountVariation) or not (Overview/@ApplicationType='Loan Variation')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Application Type in overview is 'Loan Variation', then there should be details provided in 'Account Variation'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Loan' and LoanDetails/@Secured='Yes') or not (Overview/@ApplicationType='Loan')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Loan' and LoanDetails/@Secured='Yes') or not (Overview/@ApplicationType='Loan')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Application Type in overview is 'Loan', then 'Loan Details' should indicate that the loan is 'Secured'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Overdraft' and LoanDetails/@LoanType='Overdraft') or not(Overview/@ApplicationType='Overdraft')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Overdraft' and LoanDetails/@LoanType='Overdraft') or not(Overview/@ApplicationType='Overdraft')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Application Type in overview is 'Overdraft', then there should be at least one 'Overdraft' loan type provided in 'Loan Details'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Overview/@ApplicationType='Unsecured' and LoanDetails/@Secured='No') or not (Overview/@ApplicationType='Unsecured')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Overview/@ApplicationType='Unsecured' and LoanDetails/@Secured='No') or not (Overview/@ApplicationType='Unsecured')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Application Type in overview is 'Unsecured', then 'Loan Details' should indicate that the loan is not 'Secured'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(PersonApplicant or CompanyApplicant or TrustApplicant) or not(/Package/Instructions/ApplicationInstructions/Submit) or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes') or (/Package/Instructions/ApplicationInstructions/Submit/@IsAccountVariation='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(PersonApplicant or CompanyApplicant or TrustApplicant) or not(/Package/Instructions/ApplicationInstructions/Submit) or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes') or (/Package/Instructions/ApplicationInstructions/Submit/@IsAccountVariation='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every application submission should contain at least one person application, company applicant or trust applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="1&gt;=count(PersonApplicant[@PrimaryApplicant='Yes']|TrustApplicant[@PrimaryApplicant='Yes']|CompanyApplicant[@PrimaryApplicant='Yes'])"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="1&gt;=count(PersonApplicant[@PrimaryApplicant='Yes']|TrustApplicant[@PrimaryApplicant='Yes']|CompanyApplicant[@PrimaryApplicant='Yes'])"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There can only be one primary applicant for each application.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@ProductionData='No'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@ProductionData='No'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The application should only contain test data, indicated by the existence of a ProductionData attribute having a value of 'No'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(OtherExpense)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(OtherExpense)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An application with other expense uses the deprecated element 'Other Expense'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation" priority="1291" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type and @VariationDescription) or not(@VariationDescription)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type and @VariationDescription) or not(@VariationDescription)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with variation description should have account variation type specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Add Borrower' and AddBorrower) or not(@Type='Add Borrower')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Add Borrower' and AddBorrower) or not(@Type='Add Borrower')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Add Borrower' should have add borrower details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Add Borrower' and AddBorrower) or not(AddBorrower)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Add Borrower' and AddBorrower) or not(AddBorrower)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with add borrower details should have type specified as 'Add Borrower'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Add Guarantor' and AddGuarantor) or not(@Type='Add Guarantor')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Add Guarantor' and AddGuarantor) or not(@Type='Add Guarantor')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Add Guarantor' should have add guarantor details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Add Guarantor' and AddGuarantor) or not(AddGuarantor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Add Guarantor' and AddGuarantor) or not(AddGuarantor)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with add guarantor details should have type specified as 'Add Guarantor'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Add Security' and AddSecurity) or not(@Type='Add Security')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Add Security' and AddSecurity) or not(@Type='Add Security')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Add Security' should have add security details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Add Security' and AddSecurity) or not(AddSecurity)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Add Security' and AddSecurity) or not(AddSecurity)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with add security details should have type specified as 'Add Security'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Balance Increase' and BalanceIncrease) or not(@Type='Balance Increase')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Balance Increase' and BalanceIncrease) or not(@Type='Balance Increase')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Balance Increase' should have balance increase details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Balance Increase' and BalanceIncrease) or not(BalanceIncrease)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Balance Increase' and BalanceIncrease) or not(BalanceIncrease)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with balance increase details should have type specified as 'Balance Increase'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Loan Term' and ChangeLoanTerm) or not(@Type='Change Loan Term')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Loan Term' and ChangeLoanTerm) or not(@Type='Change Loan Term')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Change Loan Term' should have change loan term details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Loan Term' and ChangeLoanTerm) or not(ChangeLoanTerm)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Loan Term' and ChangeLoanTerm) or not(ChangeLoanTerm)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with change loan term details should have type specified as 'Change Loan Term'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Repayment Amount' and ChangeRepaymentAmount) or not(@Type='Change Repayment Amount')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Repayment Amount' and ChangeRepaymentAmount) or not(@Type='Change Repayment Amount')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Change Repayment Amount' should have change repayment amount details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Repayment Amount' and ChangeRepaymentAmount) or not(ChangeRepaymentAmount)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Repayment Amount' and ChangeRepaymentAmount) or not(ChangeRepaymentAmount)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with change repayment amount details should have type specified as 'Change Repayment Amount'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Repayment Frequency' and ChangeRepaymentFrequency) or not(@Type='Change Repayment Frequency')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Repayment Frequency' and ChangeRepaymentFrequency) or not(@Type='Change Repayment Frequency')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Change Repayment Frequency' should have change repayment frequency details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Repayment Frequency' and ChangeRepaymentFrequency) or not(ChangeRepaymentFrequency)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Repayment Frequency' and ChangeRepaymentFrequency) or not(ChangeRepaymentFrequency)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with change repayment frequency details should have type specified as 'Change Repayment Frequency'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Repayment Type' and ChangeRepaymentType) or not(@Type='Change Repayment Type')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Repayment Type' and ChangeRepaymentType) or not(@Type='Change Repayment Type')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Change Repayment Type' should have change repayment type details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Change Repayment Type' and ChangeRepaymentType) or not(ChangeRepaymentType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Change Repayment Type' and ChangeRepaymentType) or not(ChangeRepaymentType)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with change repayment type details should have type specified as 'Change Repayment Type'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Close Account' and CloseAccount) or not(@Type='Close Account')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Close Account' and CloseAccount) or not(@Type='Close Account')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Close Account' should have close account details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Close Account' and CloseAccount) or not(CloseAccount)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Close Account' and CloseAccount) or not(CloseAccount)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with close account details should have type specified as 'Close Account'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Interest Rate Discount' and InterestRateDiscount) or not(@Type='Interest Rate Discount')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Interest Rate Discount' and InterestRateDiscount) or not(@Type='Interest Rate Discount')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Interest Rate Discount' should have interest rate discount details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Interest Rate Discount' and InterestRateDiscount) or not(InterestRateDiscount)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Interest Rate Discount' and InterestRateDiscount) or not(InterestRateDiscount)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with interest rate discount details should have type specified as 'Interest Rate Discount'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Limit Increase' and LimitIncrease) or not(@Type='Limit Increase')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Limit Increase' and LimitIncrease) or not(@Type='Limit Increase')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Limit Increase' should have limit increase details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Limit Increase' and LimitIncrease) or not(LimitIncrease)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Limit Increase' and LimitIncrease) or not(LimitIncrease)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with limit increase details should have type specified as 'Limit Increase'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Reduce Balance' and ReduceBalance) or not(@Type='Reduce Balance')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Reduce Balance' and ReduceBalance) or not(@Type='Reduce Balance')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Reduce Balance' should have reduce balance details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Reduce Balance' and ReduceBalance) or not(ReduceBalance)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Reduce Balance' and ReduceBalance) or not(ReduceBalance)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with reduce balance details should have type specified as 'Reduce Balance'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Reduce Limit' and ReduceLimit) or not(@Type='Reduce Limit')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Reduce Limit' and ReduceLimit) or not(@Type='Reduce Limit')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Reduce Limit' should have reduce limit details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Reduce Limit' and ReduceLimit) or not(ReduceLimit)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Reduce Limit' and ReduceLimit) or not(ReduceLimit)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with reduce limit details should have type specified as 'Reduce Limit'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Release Guarantor' and ReleaseGuarantor) or not(@Type='Release Guarantor')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Release Guarantor' and ReleaseGuarantor) or not(@Type='Release Guarantor')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Release Guarantor' should have release guarantor details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Release Guarantor' and ReleaseGuarantor) or not(ReleaseGuarantor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Release Guarantor' and ReleaseGuarantor) or not(ReleaseGuarantor)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with release guarantor details should have type specified as 'Release Guarantor'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Release Security' and ReleaseSecurity) or not(@Type='Release Security')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Release Security' and ReleaseSecurity) or not(@Type='Release Security')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Release Security' should have release security details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Release Security' and ReleaseSecurity) or not(ReleaseSecurity)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Release Security' and ReleaseSecurity) or not(ReleaseSecurity)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with release security details should have type specified as 'Release Security'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Remove Borrower' and RemoveBorrower) or not(@Type='Remove Borrower')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Remove Borrower' and RemoveBorrower) or not(@Type='Remove Borrower')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Remove Borrower' should have remove borrower details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Remove Borrower' and RemoveBorrower) or not(RemoveBorrower)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Remove Borrower' and RemoveBorrower) or not(RemoveBorrower)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with remove borrower details should have type specified as 'Remove Borrower'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Split Account' and SplitAccount) or not(@Type='Split Account')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Split Account' and SplitAccount) or not(@Type='Split Account')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Split Account' should have split account details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Split Account' and SplitAccount) or not(SplitAccount)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Split Account' and SplitAccount) or not(SplitAccount)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with split account details should have type specified as 'Split Account'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Switch Product' and SwitchProduct) or not(@Type='Switch Product')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Switch Product' and SwitchProduct) or not(@Type='Switch Product')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Switch Product' should have switch product details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Switch Product' and SwitchProduct) or not(SwitchProduct)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Switch Product' and SwitchProduct) or not(SwitchProduct)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with switch product details should have type specified as 'Switch Product'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Update Party Details' and UpdatePartyDetails) or not(@Type='Update Party Details')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Update Party Details' and UpdatePartyDetails) or not(@Type='Update Party Details')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with type as 'Update Party Details' should have update party details details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Update Party Details' and UpdatePartyDetails) or not(UpdatePartyDetails)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Update Party Details' and UpdatePartyDetails) or not(UpdatePartyDetails)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with update party details details should have type specified as 'Update Party Details'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Type"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Type"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation should have a type specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_AccountToVary) or (@x_AccountToVary = /Package/Content/Application/Liability/@UniqueID) or (@x_AccountToVary = /Package/Content/Application/NonRealEstateAsset/@UniqueID) or (@x_AccountToVary = /Package/Content/Application/DepositAccountDetails/@UniqueID)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_AccountToVary) or (@x_AccountToVary = /Package/Content/Application/Liability/@UniqueID) or (@x_AccountToVary = /Package/Content/Application/NonRealEstateAsset/@UniqueID) or (@x_AccountToVary = /Package/Content/Application/DepositAccountDetails/@UniqueID)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with account to vary should have a cross reference to a liability, a non real estate asset or deposit account details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PostVariationAccount) or @x_PostVariationAccount = /Package/Content/Application/LoanDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PostVariationAccount) or @x_PostVariationAccount = /Package/Content/Application/LoanDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with post variation account to vary should have a cross reference to loan details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/@Type" priority="1290" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/@Type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Change Authority to Operate' and  /Package/Content/Application/LoanDetails[AuthorityToOperate/@MethodOfOperation]/@UniqueID=../@x_PostVariationAccount) or not(.='Change Authority to Operate')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Change Authority to Operate' and /Package/Content/Application/LoanDetails[AuthorityToOperate/@MethodOfOperation]/@UniqueID=../@x_PostVariationAccount) or not(.='Change Authority to Operate')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan details element must have an authority to operate specified to be able to change the authority to operate during account variation.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/AddBorrower" priority="1289" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/AddBorrower"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Borrower) or @x_Borrower = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Borrower) or @x_Borrower = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with add borrower should have a cross reference to a company, person or trust applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/AddGuarantor" priority="1288" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/AddGuarantor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with add guarantor should have a cross reference to a company, person or trust applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/AddSecurity" priority="1287" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/AddSecurity"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with add security should have a cross reference to a non real estate asset or real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/LimitIncrease" priority="1286" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/LimitIncrease"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(/Package/Publisher/@PublishedDateTime and @ActionDate and number(translate(@ActionDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(@ActionDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(/Package/Publisher/@PublishedDateTime and @ActionDate and number(translate(@ActionDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(@ActionDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Account variation to increase the limit should have an action date after the published date time.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="/Package/Content/Application/AccountVariation/@Type='Limit Increase'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="/Package/Content/Application/AccountVariation/@Type='Limit Increase'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation to increase the limit should have the type specified as 'Limit Increase'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/ReduceLimit" priority="1285" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/ReduceLimit"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="/Package/Content/Application/AccountVariation/@Type='Reduce Limit'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="/Package/Content/Application/AccountVariation/@Type='Reduce Limit'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation to reduce the limit should have the type specified as 'Reduce Limit'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/ReleaseGuarantor" priority="1284" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/ReleaseGuarantor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with release guarantor should have a cross reference to a company, person or trust applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/ReleaseSecurity" priority="1283" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/ReleaseSecurity"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with release security should have a cross reference to a non real estate asset or a real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/RemoveBorrower" priority="1282" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/RemoveBorrower"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Borrower) or @x_Borrower = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Borrower) or @x_Borrower = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with remove borrower should have a cross reference to a company, person or trust applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/SplitAccount/Account" priority="1281" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/SplitAccount/Account"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_AccountDetails) or @x_AccountDetails = /Package/Content/Application/LoanDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_AccountDetails) or @x_AccountDetails = /Package/Content/Application/LoanDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with split account should have a cross reference to loan details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/SwitchProduct" priority="1280" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/SwitchProduct"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ProductDetails) or @x_ProductDetails = /Package/Content/Application/LoanDetails/@UniqueID  or @x_ProductDetails = /Package/Content/Application/DepositAccountDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ProductDetails) or @x_ProductDetails = /Package/Content/Application/LoanDetails/@UniqueID or @x_ProductDetails = /Package/Content/Application/DepositAccountDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with switch product should have a cross reference to loan details or deposit account details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/AccountVariation/UpdatePartyDetails" priority="1279" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/AccountVariation/UpdatePartyDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_LoanParty) or @x_LoanParty = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_LoanParty) or @x_LoanParty = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An account variation with update party details should have a cross reference to a company, person or trust applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Address" priority="1278" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Country!='AU' and @OverseasPostCode) or not(@OverseasPostCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Country!='AU' and @OverseasPostCode) or not(@OverseasPostCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with an overseas post code should have a country specified that is not Australia.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Country!='AU' and @OverseasState) or not(@OverseasState)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Country!='AU' and @OverseasState) or not(@OverseasState)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with an overseas state should have a country specified that is not Australia.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Latitude and @Longitude) or not(@Latitude)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Latitude and @Longitude) or not(@Latitude)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with a latitude should have a longitude specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Latitude and @Longitude) or not(@Longitude)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Latitude and @Longitude) or not(@Longitude)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with a longitude should have a latitude specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@TBAAddress='Yes' and @UniqueID and ((count(@*)-count(@TBAAddress)-count(@UniqueID))&lt;=0) and count(child::node())=0 ) or not(@TBAAddress='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@TBAAddress='Yes' and @UniqueID and ((count(@*)-count(@TBAAddress)-count(@UniqueID))&lt;=0) and count(child::node())=0 ) or not(@TBAAddress='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with a flag for TBA Address set as 'Yes' should not have any address details other than a Unique ID.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='DX Box' and DXBox) or not(@Type='DX Box')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='DX Box' and DXBox) or not(@Type='DX Box')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with type as 'DX Box' should have DX Box details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='DX Box' and DXBox) or not(DXBox)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='DX Box' and DXBox) or not(DXBox)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with DX Box details should have type specified as 'DX Box'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Non Standard' and NonStandard) or not(@Type='Non Standard')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Non Standard' and NonStandard) or not(@Type='Non Standard')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with type as 'Non Standard' should have non standard address details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Non Standard' and NonStandard) or not(NonStandard)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Non Standard' and NonStandard) or not(NonStandard)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with non standard address details should have type specified as 'Non Standard'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='PO Box or Bag' and POBox) or not(@Type='PO Box or Bag')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='PO Box or Bag' and POBox) or not(@Type='PO Box or Bag')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with type as 'PO Box or Bag' should have PO Box details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='PO Box or Bag' and POBox) or not(POBox)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='PO Box or Bag' and POBox) or not(POBox)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with PO Box details should have type specified as 'PO Box or Bag'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Standard' and Standard) or not(@Type='Standard')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Standard' and Standard) or not(@Type='Standard')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with type as 'Standard' should have standard address details specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Type='Standard' and Standard) or not(Standard)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Type='Standard' and Standard) or not(Standard)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with standard address details should have type specified as 'Standard'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address should have a Unique ID specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//*[not(name()='Address')]/@*"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//*[not(name()='Address')]/@*"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@City and @Country='AU')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@City and @Country='AU')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address with country as Australia should not have city specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Address/@NewZealandPostCode" priority="1277" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Address/@NewZealandPostCode"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(../@OverseasPostCode) or not (.)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(../@OverseasPostCode) or not (.)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An address in New Zealand can not have both New Zealand Post Code and Oversea Post Code.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Address/DXBox" priority="1276" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Address/DXBox"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Number"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Number"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every DXBox address should have a Number.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Address/DeliveryPoint" priority="1275" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Address/DeliveryPoint"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Identifier"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Identifier"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every delivery point address should have a Identifier.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Address/NonStandard" priority="1274" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Address/NonStandard"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Line1 and @Line2) or not(@Line2)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Line1 and @Line2) or not(@Line2)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non standard address with a line 2 of address should have a line 1 of address specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Address/POBox" priority="1273" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Address/POBox"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Number"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Number"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A POBox address should have a Number.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/BusinessChannel/@CompanyName" priority="1272" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/BusinessChannel/@CompanyName"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=". != /Package/Content/Application/Funder/@CompanyName or not(/Package/Content/Application/Funder/@CompanyName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=". != /Package/Content/Application/Funder/@CompanyName or not(/Package/Content/Application/Funder/@CompanyName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The funder and the business channel should not have the same company name.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/BusinessChannel/Contact" priority="1271" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/BusinessChannel/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An business channel with address details should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/BusinessChannel/Contact/OfficeFax" priority="1270" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/BusinessChannel/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with a country code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with a new zealand dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with a number  for office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with an overseas dialing code for office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with an overseas dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/BusinessChannel/Contact/OfficePhone" priority="1269" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/BusinessChannel/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with a country code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with a new zealand dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with a number  for office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with an overseas dialing code for office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A business channel with an overseas dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant" priority="1268" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@BusinessStructure='Partnership' and Partner/@PercentOwned) or not(@BusinessStructure='Partnership')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@BusinessStructure='Partnership' and Partner/@PercentOwned) or not(@BusinessStructure='Partnership')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with business structure as 'Partnership' should have partner ownership specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@BusinessStructure='Partnership' and Partner/@PercentOwned) or not(Partner/@PercentOwned)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@BusinessStructure='Partnership' and Partner/@PercentOwned) or not(Partner/@PercentOwned)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with partner ownership should have business structure specified as 'Partnership'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CompanyName and @BusinessNameSameAsCompanyName='Yes' and not(@BusinessName)) or not(@BusinessNameSameAsCompanyName='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CompanyName and @BusinessNameSameAsCompanyName='Yes' and not(@BusinessName)) or not(@BusinessNameSameAsCompanyName='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with the business name same as company name should have a company name but not a business name.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(ExistingCustomer and @IsExistingCustomer='Yes') or not (ExistingCustomer)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(ExistingCustomer and @IsExistingCustomer='Yes') or not (ExistingCustomer)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with existing customer details should have the existing customer flag specified as 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Contact"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Contact"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant should provide its contact details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@NZBNVerified='Yes' and not(@NZBN))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@NZBNVerified='Yes' and not(@NZBN))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A New Zealand company applicant loan must have an NZBN populated for it to be verified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@TypeOfIncorporation='LTC')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@TypeOfIncorporation='LTC')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with institution type as 'LTC' uses the deprecated enumeration 'LTC'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an accountant should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_SoleTrader) or @x_SoleTrader = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_SoleTrader) or @x_SoleTrader = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a sole trader should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_TradeReference) or @x_TradeReference = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_TradeReference) or @x_TradeReference = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a trade reference should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExistingCustomer/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExistingCustomer/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(Partner and Shareholder)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(Partner and Shareholder)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant cannot have both partners of the business and shareholders.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="sum(Partner/@PercentOwned) &lt;= 100"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(Partner/@PercentOwned) &lt;= 100"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant should have the sum of the partner ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="sum(Shareholder/@PercentOwned) &lt;= 100"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(Shareholder/@PercentOwned) &lt;= 100"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant should have the sum of the shareholder ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/AuthorisedSignatory" priority="1267" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/AuthorisedSignatory"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Signatory) or @x_Signatory = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Signatory) or @x_Signatory = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an authorized signatory should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/BeneficialOwner" priority="1266" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/BeneficialOwner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_BeneficialOwner) or @x_BeneficialOwner = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_BeneficialOwner) or @x_BeneficialOwner = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a beneficial owner should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact" priority="1265" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="ContactPerson"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="ContactPerson"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant should have details of a contact person employed at the company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a mailing address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PreviousRegisteredAddress) or @x_PreviousRegisteredAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PreviousRegisteredAddress) or @x_PreviousRegisteredAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a previous registered address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PrincipalTradingAddress) or @x_PrincipalTradingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PrincipalTradingAddress) or @x_PrincipalTradingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a principal trading address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_RegisteredAddress) or @x_RegisteredAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_RegisteredAddress) or @x_RegisteredAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a registered address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/ContactPerson" priority="1264" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/ContactPerson"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ContactPerson) or @x_ContactPerson = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ContactPerson) or @x_ContactPerson = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a contact person should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/OfficeFax" priority="1263" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a country code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a new zealand dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a number  for office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an overseas dialing code for office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an overseas dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/OfficeMobile" priority="1262" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/OfficeMobile"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a country code for office mobile should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an overseas dialing code for office mobile should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/OfficePhone" priority="1261" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a country code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a new zealand dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a number  for office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an overseas dialing code for office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an overseas dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/PreviousRegisteredAddressDuration" priority="1260" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/PreviousRegisteredAddressDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a previous registered address duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with previous registered address duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/PrincipalTradingAddressDuration" priority="1259" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/PrincipalTradingAddressDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a principal trading address duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with principal trading address duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Contact/RegisteredAddressDuration" priority="1258" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Contact/RegisteredAddressDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a address registration duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with address registration duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Director" priority="1257" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Director"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Director) or @x_Director = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Director) or @x_Director = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a director should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/ExistingCustomer/AccountNumber" priority="1256" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/ExistingCustomer/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an account name for existing customer should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an account number for existing customer should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an account number for existing customer should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a BSB for existing customer should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/FinancialAnalysis/CompanyFinancials" priority="1255" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/FinancialAnalysis/CompanyFinancials"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/CompanyFinancials/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/CompanyFinancials/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with company financials should have a cross reference to company financials.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Income" priority="1254" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Income"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@ProofSighted='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@ProofSighted='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If a company applicant loan includes income, then the proof of the income must be sighted.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The accountant for a company applicant income must be a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/IncomePrevious" priority="1253" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/IncomePrevious"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an accountant for a previous income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/IncomePrior" priority="1252" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/IncomePrior"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an accountant for a prior income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/IncomeRecent" priority="1251" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/IncomeRecent"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with an accountant for a recent income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Partner" priority="1250" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Partner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Partner) or @x_Partner = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Partner) or @x_Partner = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a partner should have a cross reference to a company, person or trust applicant or a related person or a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyApplicant/Shareholder" priority="1249" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyApplicant/Shareholder"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Shareholder) or @x_Shareholder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Shareholder) or @x_Shareholder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company applicant with a partner should have a cross reference to a company or person applicant or a related person or a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CompanyFinancials" priority="1248" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CompanyFinancials"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//@*[starts-with(name(),'x_')]"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//@*[starts-with(name(),'x_')]"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Company financials must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/ContributionFunds" priority="1247" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/ContributionFunds"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Loan='Yes' and @Type='Unsecured Borrowing' and @x_AssociatedLoanAccount) or not (@Loan='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Loan='Yes' and @Type='Unsecured Borrowing' and @x_AssociatedLoanAccount) or not (@Loan='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Every 'Contribution of Funds' which has a 'Loan' must have a cross reference to an 'Associated Loan Account'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_AssociatedLoanAccount) or @x_AssociatedLoanAccount = /Package/Content/Application/LoanDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_AssociatedLoanAccount) or @x_AssociatedLoanAccount = /Package/Content/Application/LoanDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A contribution fund with an associated loan account should have a cross reference to a loan details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_FundsHeldInAccount) or @x_FundsHeldInAccount = /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_FundsHeldInAccount) or @x_FundsHeldInAccount = /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A contribution fund with funds held in account should have a cross reference to a liability or a non real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/CustomerTransactionAnalysis" priority="1246" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/CustomerTransactionAnalysis"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//@*[starts-with(name(),'x_')]"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//@*[starts-with(name(),'x_')]"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A customer transaction analysis must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Declarations/BrokerDeclarations/@ConflictsOfInterestDescription" priority="1245" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Declarations/BrokerDeclarations/@ConflictsOfInterestDescription"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@DetailsOfConflictsOfInterestProvided='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@DetailsOfConflictsOfInterestProvided='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A broker declaration with a conflicts of interest description must have details of conflicts of interest provided set to "Yes".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Household" priority="1244" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Household"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//@*[starts-with(name(),'x_')]"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//@*[starts-with(name(),'x_')]"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExpenseDetails/LivingExpense/@Category='Education')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExpenseDetails/LivingExpense/@Category='Education')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with living expense category as 'Education' has been deprecated and the amount should be allocated across other categories.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExpenseDetails/LivingExpense/@Category='Insurance')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExpenseDetails/LivingExpense/@Category='Insurance')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with living expense category as 'Insurance' has been deprecated and the amount should be allocated across other categories.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExpenseDetails/LivingExpense/@Category='Owner occupied property utilities, rates and related costs')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExpenseDetails/LivingExpense/@Category='Owner occupied property utilities, rates and related costs')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with living expense category as 'Owner occupied property utilities, rates and related costs' has been deprecated and the amount should be allocated across other categories.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExpenseDetails/OtherCommitment/@Category='Child Maintenance')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExpenseDetails/OtherCommitment/@Category='Child Maintenance')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with other expense category as 'Child Maintenance' uses the deprecated enumeration 'Child Maintenance', it should use 'Child and Spousal Maintenance' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Household/ExpenseDetails/LivingExpense/PercentResponsible" priority="1243" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Household/ExpenseDetails/LivingExpense/PercentResponsible"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with proportions of ownership as 'Specified' for living expenses should have owner percentage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with owner percentage for living expenses should have proportions of ownership as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with living expenses should have the sum of the expenses owner proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Household/ExpenseDetails/LivingExpense/PercentResponsible/Owner" priority="1242" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Household/ExpenseDetails/LivingExpense/PercentResponsible/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with a party for ownership proportion of living expenses should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Household/ExpenseDetails/OtherCommitment/PercentResponsible" priority="1241" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Household/ExpenseDetails/OtherCommitment/PercentResponsible"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with proportions of ownership as 'Specified' for other commitments should have owner percentage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with owner percentage for other commitments should have proportions of ownership as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with expenses for other commitments should have the sum of the expenses owner proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Household/ExpenseDetails/OtherCommitment/PercentResponsible/Owner" priority="1240" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Household/ExpenseDetails/OtherCommitment/PercentResponsible/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A household with a party for ownership proportion of other commitments should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Insurance" priority="1239" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Insurance"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@InsuranceType='Other' and @Description) or not(@Description)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@InsuranceType='Other' and @Description) or not(@Description)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A insurance with description should have the insurance type specified as 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@InsuranceType='Other' and @Description) or not(@InsuranceType='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@InsuranceType='Other' and @Description) or not(@InsuranceType='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An insurance with the insurance type as 'Other' should have description specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Insurer='Other' and @OtherInsurerName) or not(@OtherInsurerName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Insurer='Other' and @OtherInsurerName) or not(@OtherInsurerName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An insurance with insurer specified as 'Other' should have other insurer name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Insurer='Other' and @OtherInsurerName) or not(@OtherInsurerName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Insurer='Other' and @OtherInsurerName) or not(@OtherInsurerName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An insurance with other insurer name should have insurer specified as 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Insurance/AssociatedLoanAccount" priority="1238" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Insurance/AssociatedLoanAccount"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_AssociatedLoanAccount) or @x_AssociatedLoanAccount = /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_AssociatedLoanAccount) or @x_AssociatedLoanAccount = /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An insurance with an associated loan account should have a cross reference to loan details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Insurance/CommissionPayable" priority="1237" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Insurance/CommissionPayable"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Payer) or @x_Payer = /Package/Content/Application/SalesChannel/Company/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Payer) or @x_Payer = /Package/Content/Application/SalesChannel/Company/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An insurance with a commision payer should have a cross reference to a sales channel company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Insurance/InsuredParty" priority="1236" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Insurance/InsuredParty"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_InsuredParty) or @x_InsuredParty = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_InsuredParty) or @x_InsuredParty = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An insurance with a insured party should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LendingGuarantee/AssociatedLoanAccount" priority="1235" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LendingGuarantee/AssociatedLoanAccount"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_AssociatedLoanAccount) or @x_AssociatedLoanAccount = /Package/Content/Application/LoanDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_AssociatedLoanAccount) or @x_AssociatedLoanAccount = /Package/Content/Application/LoanDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A lending guarantee with an associated loan account should have a cross reference to loan details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LendingGuarantee/Guarantor" priority="1234" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LendingGuarantee/Guarantor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(/Package/Content/Application/CompanyApplicant[@ApplicantType='Guarantor' or @ApplicantType='Borrower and Guarantor']/@UniqueID=@x_Guarantor) or (/Package/Content/Application/PersonApplicant[@ApplicantType='Guarantor' or @ApplicantType='Borrower and Guarantor']/@UniqueID=@x_Guarantor) or (/Package/Content/Application/TrustApplicant[@ApplicantType='Guarantor' or @ApplicantType='Borrower and Guarantor']/@UniqueID=@x_Guarantor) or not(@x_Guarantor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(/Package/Content/Application/CompanyApplicant[@ApplicantType='Guarantor' or @ApplicantType='Borrower and Guarantor']/@UniqueID=@x_Guarantor) or (/Package/Content/Application/PersonApplicant[@ApplicantType='Guarantor' or @ApplicantType='Borrower and Guarantor']/@UniqueID=@x_Guarantor) or (/Package/Content/Application/TrustApplicant[@ApplicantType='Guarantor' or @ApplicantType='Borrower and Guarantor']/@UniqueID=@x_Guarantor) or not(@x_Guarantor)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A lending guarantee with a reference to the guarantor should cross reference an applicant with the applicant type specified as 'Guarantor' or 'Borrower and Guarantor'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A lending guarantee with a guarantor should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LendingGuarantee/Security" priority="1233" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LendingGuarantee/Security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A lending guarantee with a security should have a cross reference to a non real estate asset or a real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability" priority="1232" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@ClearingFromThisLoan='No' and Security[@Priority='First Mortgage'] and Security[@x_Security=/Package/Content/Application/LoanDetails/Security[@Priority!='First Mortgage']/@x_Security]) or not (@ClearingFromThisLoan='No' and Security[@Priority='First Mortgage'] )"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@ClearingFromThisLoan='No' and Security[@Priority='First Mortgage'] and Security[@x_Security=/Package/Content/Application/LoanDetails/Security[@Priority!='First Mortgage']/@x_Security]) or not (@ClearingFromThisLoan='No' and Security[@Priority='First Mortgage'] )"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with security priority set to 'First Mortgage' and clearing from this loan set to 'No' should use the same security as a new loan with security priority set to 'Second Mortgage'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@ClearingFromThisLoan='Yes' and Security[@Priority='First Mortgage'] and Security[@x_Security=/Package/Content/Application/LoanDetails/Security[@Priority='First Mortgage']/@x_Security]) or not (@ClearingFromThisLoan='Yes' and Security[@Priority='First Mortgage'])"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@ClearingFromThisLoan='Yes' and Security[@Priority='First Mortgage'] and Security[@x_Security=/Package/Content/Application/LoanDetails/Security[@Priority='First Mortgage']/@x_Security]) or not (@ClearingFromThisLoan='Yes' and Security[@Priority='First Mortgage'])"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with security priority set to 'First Mortgage' and clearing from this loan set to 'Yes' should use the same security as a new loan with security priority set to 'First Mortgage'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@Type='Mortgage Loan')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@Type='Mortgage Loan')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with loan type as 'Mortgage Loan' uses the deprecated enumeration 'Mortgage Loan'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with linked financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should have 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/@RevertInterestRate" priority="1231" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/@RevertInterestRate"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../OriginalTerm/@InterestType='Fixed Rate' or ../OriginalTerm/DistinctLoanPeriod/@InterestType='Fixed Rate'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../OriginalTerm/@InterestType='Fixed Rate' or ../OriginalTerm/DistinctLoanPeriod/@InterestType='Fixed Rate'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If a liability has a revert interest rate specified, the liability should include a fixed rate period.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/AccountNumber" priority="1230" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with an account name should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with an account number should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with an account number should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a BSB should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/DocumentationInstructions" priority="1229" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/DocumentationInstructions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a deliver to address in documentation instructions should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a nominated authority to receive the documentation should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/OriginalTerm/DistinctLoanPeriod" priority="1228" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/OriginalTerm/DistinctLoanPeriod"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_RateComposition) or @x_RateComposition = /Package/Content/Application/Liability/RateComposition/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_RateComposition) or @x_RateComposition = /Package/Content/Application/Liability/RateComposition/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a distinct loan period rate composition should have a cross reference to a liability rate composition.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/OriginalTerm/DistinctLoanPeriod/Duration" priority="1227" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/OriginalTerm/DistinctLoanPeriod/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a distinct loan duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with distinct loan duration units should have duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with distinct loan duration units should have duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/OriginalTerm/DistinctLoanPeriod/Repayment" priority="1226" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/OriginalTerm/DistinctLoanPeriod/Repayment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ContinuingRepayment) or @x_ContinuingRepayment = /Package/Content/Application/Liability/ContinuingRepayment/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ContinuingRepayment) or @x_ContinuingRepayment = /Package/Content/Application/Liability/ContinuingRepayment/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a distinct loan period repayment continuing repayment should have a cross reference to a liability continuing repayment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Repayment) or @x_Repayment = /Package/Content/Application/Liability/Repayment/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Repayment) or @x_Repayment = /Package/Content/Application/Liability/Repayment/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a distinct loan period repayment should have a cross reference to a liability regular payment or a liability structured payment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/PercentOwned" priority="1225" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/PercentOwned"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with the owner proportions specified should have the sum of the owner proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@Proportions='Not Specified' and Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@Proportions='Not Specified' and Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with the percent owned ownership proportions set to 'not specified' should not have the the owner percent specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/PercentOwned/Owner" priority="1224" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID or /Package/Content/Application/PersonApplicant/@UniqueID or /Package/Content/Application/TrustApplicant/@UniqueID or /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID or /Package/Content/Application/PersonApplicant/@UniqueID or /Package/Content/Application/TrustApplicant/@UniqueID or /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a percent ownership party should have a cross reference to a person, trust or a company applicant or a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/Security" priority="1223" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/Security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a security should have a cross reference to a non real estate asset or a real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Liability/Security/MortgagorDetails" priority="1222" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Liability/Security/MortgagorDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Mortgagor) or @x_Mortgagor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Mortgagor) or @x_Mortgagor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A liability with a mortgagor should have a cross reference to a person, trust or a company applicant or a related person or a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails" priority="1221" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(/Package/Publisher/@PublishedDateTime and @EstimatedSettlementDate and number(translate(@EstimatedSettlementDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(@EstimatedSettlementDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(/Package/Publisher/@PublishedDateTime and @EstimatedSettlementDate and number(translate(@EstimatedSettlementDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(@EstimatedSettlementDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan that is part of a package containing submission information and that has an estimated settlement date, should have an estimated settlement date after the published date time.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@LoanType='Term Loan' and @Secured='Yes' and @EstimatedSettlementDate) or not(@LoanType='Term Loan' and @Secured='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@LoanType='Term Loan' and @Secured='Yes' and @EstimatedSettlementDate) or not(@LoanType='Term Loan' and @Secured='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan where the loan type is 'Term Loan' and secured specified as 'Yes' should have the estimated settlement date specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NegativelyGeared='Yes' and @Secured='Yes') or not(@NegativelyGeared='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NegativelyGeared='Yes' and @Secured='Yes') or not(@NegativelyGeared='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan that has negatively geared specified as 'Yes' should have the secured flag specified as 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NegativelyGeared='Yes' and LoanPurpose/@Occupancy='Non Owner') or not(@NegativelyGeared='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NegativelyGeared='Yes' and LoanPurpose/@Occupancy='Non Owner') or not(@NegativelyGeared='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan that has negatively geared specified as 'Yes' should have the loan purpose occupancy specified as 'Non Owner'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@RevertInterestRate and (Term/@PaymentType='Interest Only' or Term/@InterestType='Fixed Rate')) or not(@RevertInterestRate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@RevertInterestRate and (Term/@PaymentType='Interest Only' or Term/@InterestType='Fixed Rate')) or not(@RevertInterestRate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a revert interest rate should have an the interest type specified as 'Fixed Rate' or the payment type specified as 'Interest Only'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(number(translate(BulkReduction/@EstimatedDate, '-', '')) &gt; number(translate(@EstimatedSettlementDate, '-', ''))) or not(BulkReduction/@EstimatedDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(number(translate(BulkReduction/@EstimatedDate, '-', '')) &gt; number(translate(@EstimatedSettlementDate, '-', ''))) or not(BulkReduction/@EstimatedDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an estimated bulk reduction date must have the estimated bulk reduction date after the estimated settlement date.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(number(translate(FundsDisbursement/@DisbursementDate, '-', '')) &gt; number(translate(@EstimatedSettlementDate, '-', ''))) or not(FundsDisbursement/@DisbursementDate) or not(@EstimatedSettlementDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(number(translate(FundsDisbursement/@DisbursementDate, '-', '')) &gt; number(translate(@EstimatedSettlementDate, '-', ''))) or not(FundsDisbursement/@DisbursementDate) or not(@EstimatedSettlementDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a funds disbursement date should specify a date on or after the loan settlement date.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(number(translate(Term/@LoanReviewDate, '-', '')) &gt; number(translate(@EstimatedSettlementDate, '-', ''))) or not(Term/@LoanReviewDate) or not(@EstimatedSettlementDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(number(translate(Term/@LoanReviewDate, '-', '')) &gt; number(translate(@EstimatedSettlementDate, '-', ''))) or not(Term/@LoanReviewDate) or not(@EstimatedSettlementDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a review date must specify a date after the estimated settlement date.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@LVR) or  @Secured='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@LVR) or @Secured='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan that specifies an LVR should have the secured flag specified as 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@LoanType='Mortgage Loan')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@LoanType='Mortgage Loan')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The loan type of 'Mortgage Loan' has been deprecated. Use 'Term Loan' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_MasterAgreement) or @x_MasterAgreement = /Package/Content/Application/MasterAgreement/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_MasterAgreement) or @x_MasterAgreement = /Package/Content/Application/MasterAgreement/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a master agreement should have a cross reference to a master agreement.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(FundsDisbursement/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(FundsDisbursement/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with funds disbursement account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ProposedRepayment/FromAccount/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ProposedRepayment/FromAccount/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a repayment account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/@EstimatedSettlementDate" priority="1220" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/@EstimatedSettlementDate"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((count(/Package/Content/Application/LoanDetails)=1) and translate(., '-', '') = translate(/Package/Content/Application/Overview/@ExpectedSettlementDate, '-', '')) or not(.)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((count(/Package/Content/Application/LoanDetails)=1) and translate(., '-', '') = translate(/Package/Content/Application/Overview/@ExpectedSettlementDate, '-', '')) or not(.)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>For an application with only one loan detail record, the value for estimated settlement date and the expected settlement date must be same.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/@LoanType" priority="1219" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/@LoanType"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Amortising Home Loan' and ../Security/@x_Security = /Package/Content/Application/RealEstateAsset/@UniqueID) or not(.='Amortising Home Loan')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Amortising Home Loan' and ../Security/@x_Security = /Package/Content/Application/RealEstateAsset/@UniqueID) or not(.='Amortising Home Loan')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the loan type is "Amortising Home Loan", there must be at least one security that is a real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/AccountNumber" priority="1218" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account name should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account number should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account number should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a BSB should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Borrowers" priority="1217" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Borrowers"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and round(sum(Owner/@Percent))=100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and round(sum(Owner/@Percent))=100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with the ownership proportions set as 'Specified' should have the sum of all proportions be equal to 100.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Owner/@Percent and @Proportions='Specified') or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Owner/@Percent and @Proportions='Specified') or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with borrowers proportions set as 'Specified' should have the owner percent specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Owner/@Percent and @Proportions='Specified') or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Owner/@Percent and @Proportions='Specified') or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan which has the borrowers owner percent should have the borrowers proportions set as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Borrowers/Owner" priority="1216" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Borrowers/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@x_Party"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@x_Party"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The owner of a loan should have 'x_Party' specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a percent ownership party should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/DocumentationInstructions" priority="1215" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/DocumentationInstructions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a deliver to address in documentation instructions should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a nominated authority to receive the documentation should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/FundsDisbursement" priority="1214" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/FundsDisbursement"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an address of the party receiving the disbursed funds should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/FundsDisbursement/AccountNumber" priority="1213" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/FundsDisbursement/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account name for funds disbursement should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account number for funds disbursement should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account number for funds disbursement should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a BSB for funds disbursement should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Guarantor" priority="1212" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Guarantor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Guarantor) or @x_Guarantor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a guarantor should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/ProposedRepayment/FromAccount" priority="1211" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/ProposedRepayment/FromAccount"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account name for repayment should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account number for repayment should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with an account number for repayment should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a BSB for repayment should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/SupplementaryCardholder" priority="1210" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/SupplementaryCardholder"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_SupplementaryCardholder) or @x_SupplementaryCardholder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_SupplementaryCardholder) or @x_SupplementaryCardholder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a supplementary cardholder should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Term/DistinctLoanPeriod" priority="1209" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Term/DistinctLoanPeriod"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_RateComposition) or @x_RateComposition = /Package/Content/Application/LoanDetails/RateComposition/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_RateComposition) or @x_RateComposition = /Package/Content/Application/LoanDetails/RateComposition/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a distinct loan period rate composition should have a cross reference to a loan rate composition.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Term/DistinctLoanPeriod/Duration" priority="1208" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Term/DistinctLoanPeriod/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with distinct loan duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Term/DistinctLoanPeriod/Repayment" priority="1207" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Term/DistinctLoanPeriod/Repayment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Repayment) or @x_Repayment = /Package/Content/Application/LoanDetails/ProposedRepayment/StructuredPayments/Payment/@UniqueID | /Package/Content/Application/LoanDetails/ProposedRepayment/RegularRepayment/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Repayment) or @x_Repayment = /Package/Content/Application/LoanDetails/ProposedRepayment/StructuredPayments/Payment/@UniqueID | /Package/Content/Application/LoanDetails/ProposedRepayment/RegularRepayment/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan with a distinct loan period repayment should have a cross reference to a structured loan payment or a regular repayment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Term/InterestOnlyReason" priority="1206" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Term/InterestOnlyReason"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@PaymentType='Interest Only' or not(.)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@PaymentType='Interest Only' or not(.)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If an application has an interest only reason, the payment type for the term must be Interest Only.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/LoanDetails/Term/LoanReviewPeriod" priority="1205" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/LoanDetails/Term/LoanReviewPeriod"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan review period with the length of the duration specified should have units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan review period with the units of the duration specified should have the length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/MasterAgreement" priority="1204" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/MasterAgreement"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(Security/PercentOwned)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(Security/PercentOwned)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement with security ownership proportions uses the deprecated element 'PercentOwned'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/MasterAgreement/AccountToIncorporate" priority="1203" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/MasterAgreement/AccountToIncorporate"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ExistingAccount) or @x_ExistingAccount = /Package/Content/Application/Liability/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ExistingAccount) or @x_ExistingAccount = /Package/Content/Application/Liability/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement with a existing account should have a cross reference to a liability.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_NewAccount) or @x_NewAccount = /Package/Content/Application/LoanDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_NewAccount) or @x_NewAccount = /Package/Content/Application/LoanDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement with a new account should have a cross reference to the loan details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/MasterAgreement/PercentOwned" priority="1202" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/MasterAgreement/PercentOwned"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement should have the sum of the ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/MasterAgreement/PercentOwned/Owner" priority="1201" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/MasterAgreement/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement with a party for ownership proportion should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/MasterAgreement/Security" priority="1200" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/MasterAgreement/Security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement with a security should have a cross reference to a non real estate asset or a real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/MasterAgreement/Security/PercentOwned/Owner" priority="1199" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/MasterAgreement/Security/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A master agreement with a party for security ownership proportion should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset" priority="1198" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(ContractDetails/@LuxuryCarTax and @Type='Motor Vehicle and Transport') or not(ContractDetails/@LuxuryCarTax)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(ContractDetails/@LuxuryCarTax and @Type='Motor Vehicle and Transport') or not(ContractDetails/@LuxuryCarTax)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with luxury car tax should specify type as 'Motor Vehicle and Transport'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(ContractDetails/@OnRoadCosts and @Type='Motor Vehicle and Transport') or not(ContractDetails/@OnRoadCosts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(ContractDetails/@OnRoadCosts and @Type='Motor Vehicle and Transport') or not(ContractDetails/@OnRoadCosts)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with on road costs should specify type as 'Motor Vehicle and Transport'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_VendorTaxInvoice) or @x_VendorTaxInvoice = /Package/Content/Application/VendorTaxInvoice/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_VendorTaxInvoice) or @x_VendorTaxInvoice = /Package/Content/Application/VendorTaxInvoice/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with a vendor tax invoice should have a cross reference to a vendor tax invoice.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(FinancialAsset/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(FinancialAsset/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A financial non real estate asset with account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(HospitalityAndLeisure/@Type='Kitchen')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(HospitalityAndLeisure/@Type='Kitchen')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A hospitality and leisure non real estate asset with type as 'Kitchen'uses the deprecated enumeration 'Kitchen', it should use 'Cooking', 'Refrigeration' or 'Other' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ITAndAVEquipment/@Type='Audio Visual')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ITAndAVEquipment/@Type='Audio Visual')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A IT and AV equipment non real estate asset with type as 'Audio Visual' uses the deprecated enumeration 'Audio Visual', it should use 'Portable Audio' or 'Video' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(PPSR/@DescriptionOfProceeds)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(PPSR/@DescriptionOfProceeds)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with PPSR description of proceeds uses the deprecated attribute 'DescriptionOfProceeds'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(PPSR/@PMSI)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(PPSR/@PMSI)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with PPSR uses the deprecated attribute 'PMSI'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(PPSR/@ProceedsToBeClaimed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(PPSR/@ProceedsToBeClaimed)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with PPSR proceeds to be claimed uses the deprecated attribute 'ProceedsToBeClaimed'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(PPSR/@SubjectToControl)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(PPSR/@SubjectToControl)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with PPSR subject to control uses the deprecated attribute 'SubjectToControl'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(PPSR/@SubordinateRegistration)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(PPSR/@SubordinateRegistration)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with PPSR subordinate registration uses the deprecated attribute 'SubordinateRegistration'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(PPSR/@SubordinateToNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(PPSR/@SubordinateToNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with PPSR subordinate to number uses the deprecated attribute 'SubordinateToNumber'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/@PrimarySecurity" priority="1197" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/@PrimarySecurity"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Yes' and ../@ToBeUsedAsSecurity='Yes') or not(.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Yes' and ../@ToBeUsedAsSecurity='Yes') or not(.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the non real estate asset is being used as a primary security, then the to be used as security flag must be set to "Yes".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/@Type" priority="1196" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/@Type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Agricultural' and ../AgriculturalAsset and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Agricultural')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Agricultural' and ../AgriculturalAsset and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Agricultural')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Agricultural, only Agricultural Asset details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Aircraft' and ../Aircraft and not(../AgriculturalAsset) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Aircraft')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Aircraft' and ../Aircraft and not(../AgriculturalAsset) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Aircraft')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Aircraft, only Aircraft details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Business' and ../Business and not(../AgriculturalAsset) and not(../Aircraft) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Business')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Business' and ../Business and not(../AgriculturalAsset) and not(../Aircraft) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Business')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Business, only Business details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Cleaning' and ../CleaningEquipment and not(../Aircraft) and not(../Business) and not(../AgriculturalAsset) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Cleaning')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Cleaning' and ../CleaningEquipment and not(../Aircraft) and not(../Business) and not(../AgriculturalAsset) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Cleaning')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Cleaning, only Cleaning Equipment details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Earth Moving, Mining and Construction' and ../EarthMovingMiningAndConstruction and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../AgriculturalAsset) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Earth Moving, Mining and Construction')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Earth Moving, Mining and Construction' and ../EarthMovingMiningAndConstruction and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../AgriculturalAsset) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Earth Moving, Mining and Construction')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Earth Moving, Mining and Construction, only Earth Moving Mining And Construction details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Financial Asset' and ../FinancialAsset and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../AgriculturalAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Financial Asset')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Financial Asset' and ../FinancialAsset and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../AgriculturalAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Financial Asset')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Financial Asset, only Financial Asset details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Hospitality and Leisure' and ../HospitalityAndLeisure and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../AgriculturalAsset)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Hospitality and Leisure')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Hospitality and Leisure' and ../HospitalityAndLeisure and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../AgriculturalAsset) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Hospitality and Leisure')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Hospitality and Leisure, only Hospitality And Leisure details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='IT and AV Equipment' and ../ITAndAVEquipment and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../AgriculturalAsset)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='IT and AV Equipment')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='IT and AV Equipment' and ../ITAndAVEquipment and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../AgriculturalAsset) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='IT and AV Equipment')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is IT and AV Equipment, only IT And AV Equipment details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Licence' and ../Licence and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../AgriculturalAsset)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Licence')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Licence' and ../Licence and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../AgriculturalAsset) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Licence')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Licence, only Licence details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Materials Handling and Lifting' and ../MaterialsHandlingAndLifting and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../AgriculturalAsset)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Materials Handling and Lifting')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Materials Handling and Lifting' and ../MaterialsHandlingAndLifting and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../AgriculturalAsset) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Materials Handling and Lifting')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Materials Handling and Lifting, only Materials Handling And Lifting details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Mobile Computing' and ../MobileComputing and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../AgriculturalAsset)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Mobile Computing')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Mobile Computing' and ../MobileComputing and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../AgriculturalAsset) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Mobile Computing')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Mobile Computing, only Mobile Computing details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Motor Vehicle and Transport' and ../MotorVehicle and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../AgriculturalAsset)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Motor Vehicle and Transport')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Motor Vehicle and Transport' and ../MotorVehicle and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../AgriculturalAsset) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Motor Vehicle and Transport')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Motor Vehicle and Transport, only Motor Vehicle details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Office Equipment' and ../OfficeEquipment and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../AgriculturalAsset) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Office Equipment')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Office Equipment' and ../OfficeEquipment and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../AgriculturalAsset) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Office Equipment')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Office Equipment, only Office Equipment details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Other' and ../OtherAsset and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../AgriculturalAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Other' and ../OtherAsset and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../AgriculturalAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Other, only Other Asset details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Plant, Equipment and Industrial' and ../PlantEquipmentAndIndustrial and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../AgriculturalAsset) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Plant, Equipment and Industrial')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Plant, Equipment and Industrial' and ../PlantEquipmentAndIndustrial and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../AgriculturalAsset) and not(../ToolsOfTrade) and not(../Watercraft) and not(../WaterRights)) or not(.='Plant, Equipment and Industrial')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Plant, Equipment and Industrial, only Plant Equipment And Industrial details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Tools of Trade' and ../ToolsOfTrade and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../AgriculturalAsset) and not(../Watercraft) and not(../WaterRights)) or not(.='Tools of Trade')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Tools of Trade' and ../ToolsOfTrade and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../AgriculturalAsset) and not(../Watercraft) and not(../WaterRights)) or not(.='Tools of Trade')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Tools of Trade, only Tools Of Trade details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Watercraft' and ../Watercraft and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure)  and not(../ITAndAVEquipment)  and not(../Licence)  and not(../MaterialsHandlingAndLifting)  and not(../MedicalEquipment)  and not(../MobileComputing)  and not(../MotorVehicle)  and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../AgriculturalAsset) and not(../WaterRights)) or not(.='Watercraft')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Watercraft' and ../Watercraft and not(../Aircraft) and not(../Business) and not(../CleaningEquipment) and not(../EarthMovingMiningAndConstruction) and not(../FinancialAsset) and not(../HospitalityAndLeisure) and not(../ITAndAVEquipment) and not(../Licence) and not(../MaterialsHandlingAndLifting) and not(../MedicalEquipment) and not(../MobileComputing) and not(../MotorVehicle) and not(../OfficeEquipment) and not(../OtherAsset) and not(../PlantEquipmentAndIndustrial) and not(../ToolsOfTrade) and not(../AgriculturalAsset) and not(../WaterRights)) or not(.='Watercraft')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of non real estate asset is Watercraft, only Watercraft details must be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/AgriculturalAsset" priority="1195" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/AgriculturalAsset"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AdditionalIDType and @AdditionalIDValue) or not(@AdditionalIDType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AdditionalIDType and @AdditionalIDValue) or not(@AdditionalIDType)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An agricultural asset with an additional ID type should have an additional ID value specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AdditionalIDType and @AdditionalIDValue) or not(@AdditionalIDValue)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AdditionalIDType and @AdditionalIDValue) or not(@AdditionalIDValue)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An agricultural asset with an additional ID value should have an additional ID type specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CropArea and @CropAreaUnits) or not(@CropArea)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CropArea and @CropAreaUnits) or not(@CropArea)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An agricultural asset with a crop area specified should have the crop area units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CropArea and @CropAreaUnits) or not(@CropAreaUnits)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CropArea and @CropAreaUnits) or not(@CropAreaUnits)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An agricultural asset with a crop area units specified should have the crop area specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@ExpectedHarvestYear and @Type='Crops / Hay') or not(@ExpectedHarvestYear)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@ExpectedHarvestYear and @Type='Crops / Hay') or not(@ExpectedHarvestYear)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An agricultural asset with expected harvest year should have the type specified as 'Crops / Hay'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Agricultural'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Agricultural'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Agricultural Asset details have been provided, the type of non real estate asset type should be Agricultural.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An agricultural non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/Aircraft" priority="1194" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/Aircraft"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A Aircraft with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An aircraft with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An Aircraft with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Aircraft'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Aircraft'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Aircraft details have been provided, the type of non real estate asset type should be Aircraft.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An aircraft non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/Business" priority="1193" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/Business"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Business'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Business'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Business details have been provided, the type of non real estate asset type should be Business.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/Business/FinancialAnalysis/CompanyFinancials" priority="1192" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/Business/FinancialAnalysis/CompanyFinancials"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/CompanyFinancials/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/CompanyFinancials/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An business non real estate asset with company financials should have a cross reference to company financials.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/CleaningEquipment" priority="1191" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/CleaningEquipment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A cleaning equipment with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A cleaning equipment with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A cleaning equipment with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Cleaning'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Cleaning'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Cleaning Equipment details have been provided, the type of non real estate asset type should be Cleaning.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A cleaning equipment non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/ContractDetails" priority="1190" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/ContractDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Vendor) or @x_Vendor = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Vendor) or @x_Vendor = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with a vendor should have a cross reference to a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/EarthMovingMiningAndConstruction" priority="1189" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/EarthMovingMiningAndConstruction"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A earth moving mining and construction asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A earth moving mining and construction asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A earth moving mining and construction asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Earth Moving, Mining and Construction'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Earth Moving, Mining and Construction'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Earth Moving Mining And Construction details have been provided, the type of non real estate asset type should be Earth Moving, Mining and Construction.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An earth moving and construction non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/EstimatedValue" priority="1188" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/EstimatedValue"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Value"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Value"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the estimated value of a non real estate asset is provided, it must have a value specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/FinancialAsset" priority="1187" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/FinancialAsset"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Financial Asset'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Financial Asset'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Financial Asset details have been provided, the type of non real estate asset type should be Financial Asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/FinancialAsset/AccountNumber" priority="1186" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/FinancialAsset/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A financial non real estate asset with an account name should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A financial non real estate asset with an account number should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A financial non real estate asset with an account number should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A financial non real estate asset with a BSB should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/HospitalityAndLeisure" priority="1185" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/HospitalityAndLeisure"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A hospitality and leisure asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A hospitality and leisure asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A hospitality and leisure asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Hospitality and Leisure'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Hospitality and Leisure'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Hospitality And Leisure details have been provided, the type of non real estate asset type should be Hospitality and Leisure.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A hospitality and leisure non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/ITAndAVEquipment" priority="1184" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/ITAndAVEquipment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A IT and AV equipment asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>IT and AV equipment asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A IT and AV equipment asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='IT and AV Equipment'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='IT and AV Equipment'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If IT And AV Equipment details have been provided, the type of non real estate asset type should be IT and AV Equipment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An IT and AV equipment non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/Insurance" priority="1183" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/Insurance"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Insurance) or @x_Insurance = /Package/Content/Application/Insurance/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Insurance) or @x_Insurance = /Package/Content/Application/Insurance/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with an insurance should have a cross reference to a insurance.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/Licence" priority="1182" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/Licence"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Licence'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Licence'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Licence details have been provided, the type of non real estate asset type should be Licence.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/MaterialsHandlingAndLifting" priority="1181" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/MaterialsHandlingAndLifting"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A materials handling and lifting asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A materials handling and lifting asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A materials handling and lifting asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Materials Handling and Lifting'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Materials Handling and Lifting'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Materials Handling And Lifting details have been provided, the type of non real estate asset type should be Materials Handling and Lifting.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A materials handling and lifting  non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/MedicalEquipment" priority="1180" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/MedicalEquipment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A medical equipment asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A medical equipment asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A medical equipment asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Medical'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Medical'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Medical Equipment details have been provided, the type of non real estate asset type should be Medical.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/MobileComputing" priority="1179" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/MobileComputing"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A mobile computing asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A mobile computing asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A mobile computing asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Mobile Computing'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Mobile Computing'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Mobile Computing details have been provided, the type of non real estate asset type should be Mobile Computing.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/MotorVehicle" priority="1178" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/MotorVehicle"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A motor vehicle asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A motor vehicle asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A motor vehicle asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Motor Vehicle and Transport'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Motor Vehicle and Transport'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Motor Vehicle details have been provided, the type of non real estate asset type should be Motor Vehicle and Transport.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A motor vehicle non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/OfficeEquipment" priority="1177" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/OfficeEquipment"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A office equipment asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A office equipment asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A office equipment asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Office Equipment'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Office Equipment'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Office Equipment details have been provided, the type of non real estate asset type should be Office Equipment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An office equipment non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/OtherAsset" priority="1176" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/OtherAsset"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Other'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Other'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Other Asset details have been provided, the type of non real estate asset type should be Other.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/PercentOwned" priority="1175" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/PercentOwned"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with proportions of ownership as 'Specified' should have owner percentage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with owner percentage should have proportions of ownership as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset should have the sum of the ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/PercentOwned/Owner" priority="1174" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A non real estate asset with a party for ownership proportion should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/PlantEquipmentAndIndustrial" priority="1173" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/PlantEquipmentAndIndustrial"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A plant equipment and industrial asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A plant equipment and industrial asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A plant equipment and industrial asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Plant, Equipment and Industrial'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Plant, Equipment and Industrial'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Plant Equipment And Industrial details have been provided, the type of non real estate asset type should be Plant, Equipment and Industrial.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_GoodToBeUsedAddress) or @x_GoodToBeUsedAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A plant equipment and industrial non real estate asset with a good to be used address should have a cross reference to a address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/ToolsOfTrade" priority="1172" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/ToolsOfTrade"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A tools of trade asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A tools of trade asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A tools of trade asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Tools of Trade'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Tools of Trade'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Tools Of Trade details have been provided, the type of non real estate asset type should be Tools of Trade.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/NonRealEstateAsset/Watercraft" priority="1171" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/NonRealEstateAsset/Watercraft"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IncludedUsage and @UsageUnitOfMeasurement) or not(@IncludedUsage)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A watercraft asset with included usage should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or (@IncludedUsage and @UsageUnitOfMeasurement) or not(@UsageUnitOfMeasurement)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A watercraft asset with the usage unit of measure should have usage at start or included usage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@UsageAtStart and @UsageUnitOfMeasurement) or not(@UsageAtStart)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A watercraft asset with a usage at start should have its usage unit of measure specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Watercraft'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Watercraft'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If Watercraft details have been provided, the type of non real estate asset type should be Watercraft.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/OtherExpense/PercentOwned" priority="1170" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/OtherExpense/PercentOwned"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other expense with proportions of ownership as 'Specified' should have owner percentage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other expense with owner percentage should have proportions of ownership as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other expense should have the sum of the ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/OtherExpense/PercentOwned/Owner" priority="1169" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/OtherExpense/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A other expense with a party for ownership proportion should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/OtherIncome" priority="1168" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/OtherIncome"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Asset) or @x_Asset = /Package/Content/Application/NonRealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Asset) or @x_Asset = /Package/Content/Application/NonRealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other income with a asset should have a cross reference to a non real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/OtherIncome/PercentOwned" priority="1167" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/OtherIncome/PercentOwned"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other income with proportions of ownership as 'Specified' should have owner percentage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other income with owner percentage should have proportions of ownership as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other income should have the sum of the ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/OtherIncome/PercentOwned/Owner" priority="1166" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/OtherIncome/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An other income with a party for ownership proportion should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview" priority="1165" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(/Package/Publisher/@PublishedDateTime and @ExpectedSettlementDate and number(translate(@ExpectedSettlementDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(@ExpectedSettlementDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(/Package/Publisher/@PublishedDateTime and @ExpectedSettlementDate and number(translate(@ExpectedSettlementDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(@ExpectedSettlementDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan that is part of a package containing submission information and that has an expected settlement date, should have an expected settlement date after the published date time.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="count(/Package/Content/Application/LoanDetails)&gt;=2 or not (@CombinationLoan='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(/Package/Content/Application/LoanDetails)&gt;=2 or not (@CombinationLoan='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An application that is for a combination loan must have at least two loan accounts specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview/@LinkedApplication" priority="1164" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview/@LinkedApplication"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(. and ../LinkedApplicationDetails) or not(.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(. and ../LinkedApplicationDetails) or not(.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the application is a linked application, the linked application details must be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview/BranchDomicile/Contact/OfficeFax" priority="1163" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview/BranchDomicile/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a country code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a new zealand dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a number  for office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview/BranchDomicile/Contact/OfficePhone" priority="1162" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview/BranchDomicile/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a country code for domicile branch office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a new zealand dialing code for domicile branch office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a number  for domicile branch office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for domicile branch office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for domicile branch office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview/BranchSign/Contact/OfficeFax" priority="1161" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview/BranchSign/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a country code for branch office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a new zealand dialing code for branch office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a number  for branch office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for branch office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for branch office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview/BranchSign/Contact/OfficePhone" priority="1160" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview/BranchSign/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a country code for signing branch office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a new zealand dialing code for signing branch office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with a number  for signing branch office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for signing branch office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan overview with an overseas dialing code for signing branch office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Overview/LinkedApplicationDetails" priority="1159" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Overview/LinkedApplicationDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@LinkedApplication='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@LinkedApplication='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the application has linked application details, the linked application flag must be set to 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant" priority="1158" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(ExistingCustomer and @IsExistingCustomer='Yes') or not (ExistingCustomer)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(ExistingCustomer and @IsExistingCustomer='Yes') or not (ExistingCustomer)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with existing customer details should have the existing customer flag specified as 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant should have a unique id specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Contact"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Contact"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant should provide contact details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an accountant should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Household) or @x_Household = /Package/Content/Application/Household/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Household) or @x_Household = /Package/Content/Application/Household/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a household for expenses should have a cross reference to a household.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PersonalReference) or @x_PersonalReference = /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PersonalReference) or @x_PersonalReference = /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a personal reference should have a cross reference to a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Solicitor) or @x_Solicitor = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Solicitor) or @x_Solicitor = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a solicitor should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExistingCustomer/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExistingCustomer/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/@ApplicantType" priority="1157" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/@ApplicantType"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Borrower' and /Package/Content/Application/LoanDetails/Borrowers/Owner/@x_Party=../@UniqueID) or not(.='Borrower')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Borrower' and /Package/Content/Application/LoanDetails/Borrowers/Owner/@x_Party=../@UniqueID) or not(.='Borrower')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant that is a borrower should be specified as an owner in the loan detail record.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/@DateOfCitizenship" priority="1156" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/@DateOfCitizenship"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Citizenship"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Citizenship"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant that has a date of citizenship should also have their citizenship specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/AdditionalCitizenship/@CountryOfCitizenship" priority="1155" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/AdditionalCitizenship/@CountryOfCitizenship"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../../@Citizenship"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../../@Citizenship"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The applicant having an additional citizenship must have a primary citizenship.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/AdditionalForeignResidency/@CountryOfResidence" priority="1154" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/AdditionalForeignResidency/@CountryOfResidence"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../../@PrincipalForeignResidence"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../../@PrincipalForeignResidence"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The applicant having an additional foreign residency must have a principal foreign residence.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact" priority="1153" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="CurrentAddress"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="CurrentAddress"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant should have the current residential address specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/CurrentAddress" priority="1152" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/CurrentAddress"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Landlord) or @x_Landlord = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Landlord) or @x_Landlord = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a landlord contact for the current address should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a current mailing address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a current residential address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/CurrentAddress/@x_ResidentialAddress" priority="1151" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/CurrentAddress/@x_ResidentialAddress"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=". = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=". = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a current residential address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/CurrentAddress/Duration" priority="1150" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/CurrentAddress/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a current address stay duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with current address stay duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/HomePhone" priority="1149" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/HomePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a country code for home phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a new zealand dialing code for home phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a number for home phone should have either a New Zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an overseas dialing code for home phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/Mobile" priority="1148" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/Mobile"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a country code for mobile should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/PostSettlementAddress" priority="1147" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/PostSettlementAddress"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a post settlement mailing address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a post settlement residential address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/PreviousAddress" priority="1146" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/PreviousAddress"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a previous residential address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/PreviousAddress/Duration" priority="1145" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/PreviousAddress/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a previous address stay duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with previous address stay duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/PriorAddress" priority="1144" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/PriorAddress"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ResidentialAddress) or @x_ResidentialAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a prior residential address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/PriorAddress/Duration" priority="1143" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/PriorAddress/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a prior address stay duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with prior address stay duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Contact/WorkPhone" priority="1142" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Contact/WorkPhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a country code for work phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a new zealand dialing code for work phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a number  for work phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an overseas dialing code for work phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an overseas dialing code for work phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/DocumentationInstructions" priority="1141" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/DocumentationInstructions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a nominated authority for receiving the loan documents should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed" priority="1140" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Employer) or @x_Employer = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Employer) or @x_Employer = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A foreign employed person applicant with an employer should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed/Duration" priority="1139" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a foreign employment duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with foreign employment duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed/RelatedEmployer/@Acknowledgement" priority="1138" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed/RelatedEmployer/@Acknowledgement"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Yes' and ../@Details) or not (.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Yes' and ../@Details) or not (.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the person applicant acknowledges the foreign employer as a related entity, details of conflict should be provided by the broker.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed/RelatedEmployer/@Details" priority="1137" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/ForeignEmployed/RelatedEmployer/@Details"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Acknowledgement='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Acknowledgement='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the details of conflict have been provided by the broker, the acknowledgement of the relationship between the person applicant and the foreign employer should be set to 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/NotEmployed/Duration" priority="1136" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/NotEmployed/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a unemployed duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with unemployed duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/PAYE" priority="1135" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/PAYE"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@Status='Previous') or ((@Status='Previous') and ( number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')) &gt; number(translate(@EndDate, '-', ''))))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@Status='Previous') or ((@Status='Previous') and ( number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')) &gt; number(translate(@EndDate, '-', ''))))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an employment status of "Previous" must have an employment end date which is in the past.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@Status='Primary' or @Status='Secondary') or ((@Status='Primary' or @Status='Secondary') and not(@EndDate)) or (@Status='Primary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')))) or (@Status='Secondary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@Status='Primary' or @Status='Secondary') or ((@Status='Primary' or @Status='Secondary') and not(@EndDate)) or (@Status='Primary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')))) or (@Status='Secondary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a PAYE employment status of "Primary" or "Secondary" must have an end date which is empty or in the future.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Employer) or @x_Employer = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Employer) or @x_Employer = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A PAYE person applicant with an employer should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/PAYE/Duration" priority="1134" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/PAYE/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a PAYE employment duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with PAYE employment duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/PAYE/RelatedEmployer/@Acknowledgement" priority="1133" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/PAYE/RelatedEmployer/@Acknowledgement"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Yes' and ../@Details) or not (.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Yes' and ../@Details) or not (.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the person applicant acknowledges the PAYE employer as a related entity, details of conflict should be provided by the broker.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/PAYE/RelatedEmployer/@Details" priority="1132" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/PAYE/RelatedEmployer/@Details"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Acknowledgement='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Acknowledgement='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the details of conflict have been provided by the broker, the acknowledgement of the relationship between the person applicant and the PAYE employer should be set to 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed" priority="1131" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@Status='Previous') or ((@Status='Previous') and ( number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')) &gt; number(translate(@EndDate, '-', ''))))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@Status='Previous') or ((@Status='Previous') and ( number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')) &gt; number(translate(@EndDate, '-', ''))))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with self employed status of Previous must have an end date which is in the past.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@Status='Primary' or @Status='Secondary') or ((@Status='Primary' or @Status='Secondary') and not(@EndDate)) or (@Status='Primary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')))) or (@Status='Secondary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@Status='Primary' or @Status='Secondary') or ((@Status='Primary' or @Status='Secondary') and not(@EndDate)) or (@Status='Primary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', '')))) or (@Status='Secondary' and (number(translate(@EndDate, '-', '')) &gt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a self employed status of Primary or Secondary must have an end date which is empty or in the future.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A self employed person applicant with an accountant should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Employer) or @x_Employer = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Employer) or @x_Employer = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A self employed person applicant with an employer should have a cross reference to a person or a related company or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncome" priority="1130" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncome"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@ProofCode and @ProofSighted='Yes') or not (@ProofSighted='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@ProofCode and @ProofSighted='Yes') or not (@ProofSighted='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the self employment business income proof has been sighted, then a proof code must be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@ProofSighted='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@ProofSighted='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the loan includes self employment business income, then the proof of income must be sighted.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The accountant for a self employed income must be a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncomePrevious" priority="1129" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncomePrevious"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A self employed person applicant with an accountant for previous year income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncomePrior" priority="1128" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncomePrior"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A self employed person applicant with an accountant for prior year income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncomeRecent" priority="1127" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/BusinessIncomeRecent"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A self employed person applicant with an accountant for a recent year income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/Duration" priority="1126" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/Duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a self employment duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with self employment duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/FinancialAnalysis/CompanyFinancials" priority="1125" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Employment/SelfEmployed/FinancialAnalysis/CompanyFinancials"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/CompanyFinancials/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/CompanyFinancials/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A self employed person applicant with company financials should have a cross reference to company financials.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/ExistingCustomer/AccountNumber" priority="1124" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/ExistingCustomer/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an account name for existing customer should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an account number for existing customer should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an account number for existing customer should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a BSB for existing customer should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Insurance" priority="1123" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Insurance"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Insurance) or @x_Insurance = /Package/Content/Application/Insurance/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Insurance) or @x_Insurance = /Package/Content/Application/Insurance/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with an insurance should have a cross reference to an insurance.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/MaritalStatusDetails" priority="1122" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/MaritalStatusDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Spouse) or @x_Spouse = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Spouse) or @x_Spouse = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a spouse should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/MaritalStatusDetails/@SpouseEarnsIncome" priority="1121" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/MaritalStatusDetails/@SpouseEarnsIncome"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Yes' and ../@x_Spouse = /Package/Content/Application/RelatedPerson/@UniqueID) or not(.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Yes' and ../@x_Spouse = /Package/Content/Application/RelatedPerson/@UniqueID) or not(.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the flag for spouse earns income is set to Yes, the spouse should be captured using the related person entity only.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/NextOfKin" priority="1120" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/NextOfKin"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Person) or @x_Person = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Person) or @x_Person = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a next of kin should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/NextOfKin/@KinRelationship" priority="1119" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/NextOfKin/@KinRelationship"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@x_Person=/Package/Content/Application/PersonApplicant/@UniqueID or ../@x_Person=/Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@x_Person=/Package/Content/Application/PersonApplicant/@UniqueID or ../@x_Person=/Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If next of kin relationship exists, the cross reference to a person applicant or a related person must be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/NominatedBorrower" priority="1118" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/NominatedBorrower"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Nominee) or @x_Nominee = /Package/Content/Application/PersonApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Nominee) or @x_Nominee = /Package/Content/Application/PersonApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a nominated borrower should have a cross reference to a person applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/PowerOfAttorney" priority="1117" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/PowerOfAttorney"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_POAHolder) or @x_POAHolder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_POAHolder) or @x_POAHolder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a power of attorney holder should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/ProofOfIdentity" priority="1116" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/ProofOfIdentity"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Australian Drivers Licence' and @CountryOfIssue='AU') or not(@DocumentType='Australian Drivers Licence')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Australian Drivers Licence' and @CountryOfIssue='AU') or not(@DocumentType='Australian Drivers Licence')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If an Australian Drivers Licence is specified as a proof of identity, the country of issue must be specified as Australia.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Australian Passport' and @CountryOfIssue='AU') or not(@DocumentType='Australian Passport')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Australian Passport' and @CountryOfIssue='AU') or not(@DocumentType='Australian Passport')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If an Australian Passport is specified as a proof of identity, the country of issue must be specified as Australia.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and @CountryOfIssue='AU') or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and @CountryOfIssue='AU') or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type specified as 'Medicare Card' should have country of issue specified as Australia.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and @DocumentCategory and @DocumentCategory!='Photographic' ) or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and @DocumentCategory and @DocumentCategory!='Photographic' ) or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type as 'Medicare Card' should not have the document category specified as 'Photographic'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and @ExpiryDate ) or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and @ExpiryDate ) or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type specified as 'Medicare Card' should have expiry date specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and not(@PhotographVerified)) or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and not(@PhotographVerified)) or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type as 'Medicare Card' should not have photographer verified specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and not(@PlaceOfIssue)) or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and not(@PlaceOfIssue)) or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with proof of identity with type as 'Medicare Card' should not have its place of issue specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and not(@ResidentialAddressVerified) ) or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and not(@ResidentialAddressVerified) ) or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type as 'Medicare Card' should not have residential address verified specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Medicare Card' and not(@SignatureVerified)) or not(@DocumentType='Medicare Card')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Medicare Card' and not(@SignatureVerified)) or not(@DocumentType='Medicare Card')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type as 'Medicare Card' should not have signature verified specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@DocumentType='Other' and @OtherDescription) or not(@DocumentType='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@DocumentType='Other' and @OtherDescription) or not(@DocumentType='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity document that has the document type specified as 'Other' should have 'Other Description' specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NameOnDocument and @NameVerified='Yes') or not (@NameVerified='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NameOnDocument and @NameVerified='Yes') or not (@NameVerified='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant loan requires a name on the proof of identity document before the name can be verified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NameOnDocument and @PhotographVerified='Yes') or not (@PhotographVerified='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NameOnDocument and @PhotographVerified='Yes') or not (@PhotographVerified='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person application loan requires a name and photographic document as part of proof of identity before the photograph can be verified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OtherDescription and @DocumentType='Other') or not(@OtherDescription)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OtherDescription and @DocumentType='Other') or not(@OtherDescription)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity document that has 'Other Description' specified should have the document type specified as 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@CertifiedCopy='Yes' and @Original='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@CertifiedCopy='Yes' and @Original='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity document cannot be both a certified copy and an original.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@DocumentType='Medicare Card' and @DOBVerified)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@DocumentType='Medicare Card' and @DOBVerified)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type as 'Medicare Card' should not have date of birth verified specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@DocumentType='Medicare Card' and @IssuingOrganisation)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@DocumentType='Medicare Card' and @IssuingOrganisation)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity with type specified as 'Medicare Card' should not have issuing organisation specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_LocationDocumentVerified) or @x_LocationDocumentVerified = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_LocationDocumentVerified) or @x_LocationDocumentVerified = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a verified location as proof of identitiy should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/ProofOfIdentity/@DateOfIssue" priority="1115" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/ProofOfIdentity/@DateOfIssue"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(../@ExpiryDate and number(translate(., '-', '')) &lt; number(translate(../@ExpiryDate, '-', '')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(../@ExpiryDate and number(translate(., '-', '')) &lt; number(translate(../@ExpiryDate, '-', '')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The date of issue for a proof of identity document should be before the date of expiry.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(/Package/Publisher/@PublishedDateTime and . and number(translate(., '-', '')) &lt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(.)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(/Package/Publisher/@PublishedDateTime and . and number(translate(., '-', '')) &lt; number(translate(substring-before(/Package/Publisher/@PublishedDateTime,'T'), '-', ''))) or not(.)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The date of issue for a proof of identity document should be before the published date time.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/ProofOfIdentity/@ExpiryDate" priority="1114" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/ProofOfIdentity/@ExpiryDate"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(../@ExpiryMonth)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(../@ExpiryMonth)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Proof of Identity document has an expiry date, it should not have an expiry month.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(../@ExpiryYear)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(../@ExpiryYear)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the Proof of Identity document has an expiry date, it should not have an expiry year.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/ProofOfIdentity/@Original" priority="1113" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/ProofOfIdentity/@Original"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(.='Yes' and ../@CertifiedCopy='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(.='Yes' and ../@CertifiedCopy='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A proof of identity document sighted can not be an original as well as a certified copy.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant/Will" priority="1112" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant/Will"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Executor) or @x_Executor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Executor) or @x_Executor = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a will executor should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_WillHeldBy) or @x_WillHeldBy = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_WillHeldBy) or @x_WillHeldBy = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant with a party holing the will should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/PersonApplicant[@UniqueID=/Package/Content/Application/LoanDetails/Borrowers/Owner/@x_Party]" priority="1111" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/PersonApplicant[@UniqueID=/Package/Content/Application/LoanDetails/Borrowers/Owner/@x_Party]"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@ApplicantType"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@ApplicantType"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant that is applying for the loan should have the applicant type specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/ProductSet" priority="1110" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/ProductSet"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PrimaryApplicant) or @x_PrimaryApplicant = /Package/Content/Application/CompanyApplicant/@UniqueID  | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PrimaryApplicant) or @x_PrimaryApplicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A product set with a primary applicant should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/ProductSet/Contact" priority="1109" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/ProductSet/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A product set with a mailing address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/ProductSet/Product" priority="1108" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/ProductSet/Product"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_FinancialProduct) or @x_FinancialProduct = /Package/Content/Application/DepositAccountDetails/@UniqueID | /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_FinancialProduct) or @x_FinancialProduct = /Package/Content/Application/DepositAccountDetails/@UniqueID | /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A product set with a financial product should have a cross reference to a deposit account, liability, loan or a non real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset" priority="1107" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@LegalRepresentation='No' and not(Representation)) or not(@LegalRepresentation='No')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@LegalRepresentation='No' and not(Representation)) or not(@LegalRepresentation='No')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If a real estate asset indicates that the property involves no legal representation, then details for the representation should not be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@PrimaryUsage='Commercial' and not(Rural) and not(Industrial) and not(Residential)) or not(@PrimaryUsage='Commercial')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@PrimaryUsage='Commercial' and not(Rural) and not(Industrial) and not(Residential)) or not(@PrimaryUsage='Commercial')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the primary property usage is 'Commercial' then the property type can only be 'Commercial'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@PrimaryUsage='Industrial' and not(Residential) and not(Rural) and not(Commercial)) or not(@PrimaryUsage='Industrial')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@PrimaryUsage='Industrial' and not(Residential) and not(Rural) and not(Commercial)) or not(@PrimaryUsage='Industrial')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the primary property usage is 'Industrial' then the property type can only be 'Industrial'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@PrimaryUsage='Residential' and not(Rural) and not(Industrial) and not(Commercial)) or not(@PrimaryUsage='Residential')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@PrimaryUsage='Residential' and not(Rural) and not(Industrial) and not(Commercial)) or not(@PrimaryUsage='Residential')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the primary property usage is 'Residential' then the property type can only be 'Residential'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@PrimaryUsage='Rural' and not(Residential) and not(Industrial) and not(Commercial)) or not(@PrimaryUsage='Rural')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@PrimaryUsage='Rural' and not(Residential) and not(Industrial) and not(Commercial)) or not(@PrimaryUsage='Rural')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the primary property usage is 'Rural' then the property type can only be 'Rural'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(Representation and @LegalRepresentation='Yes') or not (@LegalRepresentation='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(Representation and @LegalRepresentation='Yes') or not (@LegalRepresentation='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If a real estate asset indicates that the property involves legal representation, then details for the representation should be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with an address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PropertyAgent) or @x_PropertyAgent = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PropertyAgent) or @x_PropertyAgent = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a property agent should have a cross reference to a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(Residential) or Residential/@Type!=''"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(Residential) or Residential/@Type!=''"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the real estate asset is residential, then the Type of dwelling must be specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/@Holding" priority="1106" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/@Holding"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Joint Tenants' and count(/Package/Content/Application/RealEstateAsset/PercentOwned/Owner)&gt;=2) or not(.='Joint Tenants')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Joint Tenants' and count(/Package/Content/Application/RealEstateAsset/PercentOwned/Owner)&gt;=2) or not(.='Joint Tenants')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the real estate asset holding is specified as "Joint Tenants", then there should be multiple owners for the real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Commercial" priority="1105" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Commercial"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@PrimaryUsage='Commercial'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@PrimaryUsage='Commercial'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the property type is 'Commercial' then the primary property usage can only be 'Commercial'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Commercial/@OtherCommercialDetails" priority="1104" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Commercial/@OtherCommercialDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Other'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Other'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the commercial property has other commercial details specified, the type of commercial property should be set to 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Commercial/@Type" priority="1103" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Commercial/@Type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Other' and ../@OtherCommercialDetails) or not(.='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Other' and ../@OtherCommercialDetails) or not(.='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of commercial property is set to "Other", the other commercial details must be specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/ConstructionDetails" priority="1102" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/ConstructionDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Builder) or @x_Builder = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Builder) or @x_Builder = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a builder should have a cross reference to a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/ContractDetails" priority="1101" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/ContractDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Vendor) or @x_Vendor = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Vendor) or @x_Vendor = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a settlement vendor should have a cross reference to a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/EstimatedValue" priority="1100" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/EstimatedValue"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Valuer) or @x_Valuer = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Valuer) or @x_Valuer = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a valuer should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Industrial" priority="1099" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Industrial"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@PrimaryUsage='Industrial'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@PrimaryUsage='Industrial'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the property type is 'Industrial' then the primary property usage can only be 'Industrial'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Industrial/@OtherIndustrialDetails" priority="1098" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Industrial/@OtherIndustrialDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Other'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Other'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the industrial property has other industrial details specified, the type of industrial property should be set to 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Industrial/@Type" priority="1097" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Industrial/@Type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Other' and ../@OtherIndustrialDetails) or not(.='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Other' and ../@OtherIndustrialDetails) or not(.='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of industrial property is set to 'Other', other industrial details must be specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Insurance" priority="1096" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Insurance"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Insurance) or @x_Insurance = /Package/Content/Application/Insurance/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Insurance) or @x_Insurance = /Package/Content/Application/Insurance/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with an insurance should have a cross reference to an insurance.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/PercentOwned" priority="1095" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/PercentOwned"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with proportions of ownership as 'Specified' should have owner percentage specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and Owner/@Percent) or not(Owner/@Percent)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with owner percentage should have proportions of ownership as 'Specified'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Proportions='Specified' and sum(Owner/@Percent) &lt;= 100) or not(@Proportions='Specified')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset should have the sum of the ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/PercentOwned/Owner" priority="1094" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/PercentOwned/Owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a party for ownership should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/RentalIncome" priority="1093" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/RentalIncome"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NetRentalAmount and @NetRentalAmountFrequency) or not (@NetRentalAmount)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NetRentalAmount and @NetRentalAmountFrequency) or not (@NetRentalAmount)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Rental income with a net rental amount specified should also have a net rental amount frequency specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NetRentalAmount and @NetRentalAmountFrequency) or not (@NetRentalAmountFrequency)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NetRentalAmount and @NetRentalAmountFrequency) or not (@NetRentalAmountFrequency)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Rental income with a net rental amount frequency specified should also have a net rental amount specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@RentalAmount and @Frequency) or not (@Frequency)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@RentalAmount and @Frequency) or not (@Frequency)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Rental income with a frequency specified should also have an amount specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@RentalAmount and @Frequency) or not (@RentalAmount)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@RentalAmount and @Frequency) or not (@RentalAmount)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Rental income with an amount specified should also have a frequency specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Owner) or @x_Owner = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Owner) or @x_Owner = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a rental income owner should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="number(translate(@EndDate, '-', '')) &gt; number(translate(@StartDate, '-', '')) or not(@StartDate) or not(@EndDate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(translate(@EndDate, '-', '')) &gt; number(translate(@StartDate, '-', '')) or not(@StartDate) or not(@EndDate)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The end date for the rental income of a real estate asset should be after the start date.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Representation" priority="1092" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Representation"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Conveyancer) or @x_Conveyancer = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Conveyancer) or @x_Conveyancer = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a conveyancer should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_VendorConveyancer) or @x_VendorConveyancer = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_VendorConveyancer) or @x_VendorConveyancer = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a vendor conveyancer should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Residential" priority="1091" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Residential"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@PrimaryUsage='Residential'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@PrimaryUsage='Residential'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the property type is 'Residential' then the primary property usage can only be 'Residential'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Residential/@OtherResidentialDetails" priority="1090" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Residential/@OtherResidentialDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Type='Other'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Type='Other'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the residential property has other residential details specified, the type of residential property should be set the 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Residential/@Type" priority="1089" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Residential/@Type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Other' and ../@OtherResidentialDetails) or not(.='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Other' and ../@OtherResidentialDetails) or not(.='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the type of residential property is set to "Other", the other residential details must be specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Rural" priority="1088" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Rural"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@PrimaryUsage='Rural'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@PrimaryUsage='Rural'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the property type is 'Rural' then the primary property usage can only be 'Rural'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Rural/@OtherRuralDetails" priority="1087" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Rural/@OtherRuralDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Usage='Other'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Usage='Other'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the rural property has other rural details specified, the usage of rural property should be set the 'Other'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Rural/@Usage" priority="1086" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Rural/@Usage"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Other' and ../@OtherRuralDetails) or not(.='Other')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Other' and ../@OtherRuralDetails) or not(.='Other')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the usage of the rural property is set to "Other", the other rural details must be specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/Title/@PlanType" priority="1085" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/Title/@PlanType"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(.='Group Title Plan of Amalgamation')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(.='Group Title Plan of Amalgamation')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset title with a plan type 'Group Title Plan of Amalgamation' uses the deprecated enumeration 'Group Title Plan of Amalgamation', it should have 'Group Titles Plan of Amalgamation' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(.='Group Title Plan of Resubdivision')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(.='Group Title Plan of Resubdivision')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset title with a plan type 'Group Title Plan of Resubdivision' uses the deprecated enumeration 'Group Title Plan of Resubdivision', it should have 'Group Titles Plan of Resubdivision' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(.='Group Title Plan')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(.='Group Title Plan')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset title with a plan type 'Group Title Plan' uses the deprecated enumeration 'Group Title Plan', it should have 'Group Titles Plan' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RealEstateAsset/VisitContact" priority="1084" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RealEstateAsset/VisitContact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ContactParty) or @x_ContactParty = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ContactParty) or @x_ContactParty = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A real estate asset with a visit contact should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany" priority="1083" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//@*[starts-with(name(),'x_')]"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//@*[starts-with(name(),'x_')]"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@NZBNVerified='Yes' and not(@NZBN))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@NZBNVerified='Yes' and not(@NZBN))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A New Zealand company related to the loan application must have an NZBN populated for it to be verified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="sum(Partner/@PercentOwned) &lt;= 100"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(Partner/@PercentOwned) &lt;= 100"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company should have the sum of the partner ownership proportions less than or equal to 100 percent.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/BeneficialOwner" priority="1082" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/BeneficialOwner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_BeneficialOwner) or @x_BeneficialOwner = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_BeneficialOwner) or @x_BeneficialOwner = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a beneficial owner should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Contact" priority="1081" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a contact address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Contact/ContactPerson" priority="1080" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Contact/ContactPerson"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ContactPerson) or @x_ContactPerson = /Package/Content/Application/RelatedPerson/@UniqueID  or @x_ContactPerson = /Package/Content/Application/PersonApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ContactPerson) or @x_ContactPerson = /Package/Content/Application/RelatedPerson/@UniqueID or @x_ContactPerson = /Package/Content/Application/PersonApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a contact person should have a cross reference to a related person or a person applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Contact/OfficeFax" priority="1079" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a country code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a new zealand dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a number  for office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with an overseas dialing code for office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with an overseas dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Contact/OfficeMobile" priority="1078" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Contact/OfficeMobile"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a country code for office mobile should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with an overseas dialing code for office mobile should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Contact/OfficePhone" priority="1077" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a country code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a new zealand dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a number  for office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with an overseas dialing code for office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with an overseas dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Director" priority="1076" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Director"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Director) or @x_Director = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Director) or @x_Director = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a director should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Partner" priority="1075" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Partner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Partner) or @x_Partner = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Partner) or @x_Partner = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a partner should have a cross reference to a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedCompany/Shareholder" priority="1074" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedCompany/Shareholder"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Shareholder) or @x_Shareholder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Shareholder) or @x_Shareholder = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related company with a shareholder should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedPerson" priority="1073" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedPerson"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//@*[starts-with(name(),'x_')]"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//@*[starts-with(name(),'x_')]"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedPerson/@DateOfBirth" priority="1072" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedPerson/@DateOfBirth"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../PersonName/@FirstName and ../PersonName/@Surname"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../PersonName/@FirstName and ../PersonName/@Surname"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a date of birth specified must have first name and surname.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedPerson/Contact" priority="1071" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedPerson/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a contact address should have an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedPerson/Contact/HomePhone" priority="1070" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedPerson/Contact/HomePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a country code for home phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a new zealand dialing code for home phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a number  for home phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with an overseas dialing code for home phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with an overseas dialing code for home phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedPerson/Contact/Mobile" priority="1069" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedPerson/Contact/Mobile"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a country code for mobile should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with an overseas dialing code for mobile should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/RelatedPerson/Contact/WorkPhone" priority="1068" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/RelatedPerson/Contact/WorkPhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a country code for work phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a new zealand dialing code for work phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with a number for work phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with an overseas dialing code for work phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A related person with an overseas dialing code for work phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/Aggregator/Contact" priority="1067" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/Aggregator/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An aggregator in the sales channel with a contact address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/Aggregator/Contact/OfficeFax" priority="1066" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/Aggregator/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for aggregator office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a new zealand dialing code for aggregator office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a number  for aggregator office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for aggregator office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for aggregator office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/Aggregator/Contact/OfficePhone" priority="1065" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/Aggregator/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for aggregator office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a new zealand dialing code for aggregator office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a number  for aggregator office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for aggregator office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for aggregator office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/Company/Contact" priority="1064" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/Company/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan writer in the sales channel with a contact address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Address) or @x_Address = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A company or bank branch in the sales channel with a contact address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/Company/Contact/OfficeFax" priority="1063" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/Company/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for company office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a new zealand dialing code for company office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a number  for company office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for company office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for company office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/Company/Contact/OfficePhone" priority="1062" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/Company/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for company office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a new zealand dialing code for company office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a number  for company office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for company office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for company office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/LoanWriter/Contact/Fax" priority="1061" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/LoanWriter/Contact/Fax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for loan writer fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a new zealand dialing code for loan writer fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a number  for loan writer fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for loan writer fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for loan writer fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/LoanWriter/Contact/Mobile" priority="1060" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/LoanWriter/Contact/Mobile"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for loan writer mobile should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialling code for loan writer mobile should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/SalesChannel/LoanWriter/Contact/OfficePhone" priority="1059" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/SalesChannel/LoanWriter/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a country code for loan writer office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a new zealand dialing code for loan writer office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with a number  for loan writer office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialling code for loan writer office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A sales channel with an overseas dialing code for loan writer office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary" priority="1058" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(Fee/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(Fee/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(Fee/PayableToAccount/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(Fee/PayableToAccount/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee payable account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/DocumentationInstructions" priority="1057" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/DocumentationInstructions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a deliver to address in documentation instructions should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_NominatedAuthority) or @x_NominatedAuthority = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a nominated authority to receive the documentation should have a cross reference to a person, trust or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/Fee" priority="1056" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/Fee"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Account) or @x_Account = /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Account) or @x_Account = /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee details for an account should have a cross reference to a libility, loan or a non real estate asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_FinancialProduct) or @x_FinancialProduct = /Package/Content/Application/LoanDetails/@UniqueID or @x_FinancialProduct = /Package/Content/Application/DepositAccountDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_FinancialProduct) or @x_FinancialProduct = /Package/Content/Application/LoanDetails/@UniqueID or @x_FinancialProduct = /Package/Content/Application/DepositAccountDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee details for a financial product should have a cross reference to a loan or deposit account details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ProductSet) or @x_ProductSet = /Package/Content/Application/ProductSet/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ProductSet) or @x_ProductSet = /Package/Content/Application/ProductSet/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee details for a product set should have a cross reference to a product set.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID | /Package/Content/Application/GeneralSecurityAgreement/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Security) or @x_Security = /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/RealEstateAsset/@UniqueID | /Package/Content/Application/GeneralSecurityAgreement/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee details incurred for a security should have a cross reference to a non real estate asset, a real estate asset, or a general security agreement.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/Fee/AccountNumber" priority="1055" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/Fee/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable from account name for fee should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable from account number for fee should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable from account number for fee should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable from BSB for fee should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/Fee/ApplicableDuration" priority="1054" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/Fee/ApplicableDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee applicable duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with fee applicable duration units should have duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/Fee/CreditCard/@x_CardHolder" priority="1053" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/Fee/CreditCard/@x_CardHolder"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=". = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=". = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A credit card with a card holder should have a cross reference to a person applicant, trust applicant, company applicant, or related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/Fee/PayableToAccount" priority="1052" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/Fee/PayableToAccount"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable to account name for fee should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable to account number for fee should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable to account number for fee should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a payable to BSB for fee should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/Summary/ServiceabilityResults/Applicant" priority="1051" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/Summary/ServiceabilityResults/Applicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan summary with a party for serviceability result should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant" priority="1050" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(ExistingCustomer and @IsExistingCustomer='Yes') or not (ExistingCustomer)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(ExistingCustomer and @IsExistingCustomer='Yes') or not (ExistingCustomer)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with existing customer details should have the existing customer flag specified as 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(IncomeRecent/@ProofCode and IncomeRecent/@ProofSighted='Yes') or not (IncomeRecent/@ProofSighted='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(IncomeRecent/@ProofCode and IncomeRecent/@ProofSighted='Yes') or not (IncomeRecent/@ProofSighted='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant loan which indicates recent income proof has been sighted it must also have a proof code.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Contact"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Contact"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant should provide its contact details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@SettlorName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@SettlorName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with settlor name uses the deprecated attribute 'SettlorName', it should use settlor details instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an accountant should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(ExistingCustomer/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(ExistingCustomer/AccountNumber/@FinancialInstitution='Defence Force Credit Union Limited')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with account financial institution as 'Defence Force Credit Union Limited' uses the deprecated enumeration 'Defence Force Credit Union Limited', it should use 'Defence Bank' instead.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/BeneficialOwner" priority="1049" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/BeneficialOwner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_BeneficialOwner) or @x_BeneficialOwner = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_BeneficialOwner) or @x_BeneficialOwner = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a beneficial owner should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Beneficiary" priority="1048" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Beneficiary"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Beneficiary) or @x_Beneficiary = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Beneficiary) or @x_Beneficiary = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a beneficiary should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact" priority="1047" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="ContactPerson"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="ContactPerson"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant should have the details of a contact person employed at the company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_MailingAddress) or @x_MailingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a mailing address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_PrincipalTradingAddress) or @x_PrincipalTradingAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_PrincipalTradingAddress) or @x_PrincipalTradingAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a principal trading address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_RegisteredAddress) or @x_RegisteredAddress = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_RegisteredAddress) or @x_RegisteredAddress = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a registered address should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact/ContactPerson" priority="1046" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact/ContactPerson"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_ContactPerson) or @x_ContactPerson = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_ContactPerson) or @x_ContactPerson = /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a contact person should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact/OfficeFax" priority="1045" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact/OfficeFax"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a country code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a new zealand dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a number  for office fax should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an overseas dialing code for office fax should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an overseas dialing code for office fax should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact/OfficeMobile" priority="1044" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact/OfficeMobile"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a country code for office mobile should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an overseas dialing code  for office mobile should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact/OfficePhone" priority="1043" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact/OfficePhone"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a country code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a new zealand dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a number  for office phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an overseas dialing code for office phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an overseas dialing code for office phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact/PrincipalTradingAddressDuration" priority="1042" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact/PrincipalTradingAddressDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a principal trading address duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with principal trading address duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Contact/RegisteredAddressDuration" priority="1041" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Contact/RegisteredAddressDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a address registration duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with address registration duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/ExistingCustomer/AccountNumber" priority="1040" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/ExistingCustomer/AccountNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountName)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountName)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an account name for existing customer should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @AccountName) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @AccountName) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an account number for existing customer should have an account name specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@AccountNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@AccountNumber)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an account number for existing customer should have a BSB specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@AccountNumber and @BSB) or not(@BSB)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@AccountNumber and @BSB) or not(@BSB)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a BSB for existing customer should have an account number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/FinancialAnalysis/CompanyFinancials" priority="1039" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/FinancialAnalysis/CompanyFinancials"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/PersonApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_CompanyFinancials) or @x_CompanyFinancials = /Package/Content/Application/PersonApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with company financials should have a cross reference to person applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Income" priority="1038" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Income"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@ProofCode and @ProofSighted='Yes') or not (@ProofSighted='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@ProofCode and @ProofSighted='Yes') or not (@ProofSighted='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the trust applicant's income proof has been sighted, then a proof code must be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@ProofSighted='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@ProofSighted='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If a trust applicant loan includes income, then the proof of the income must be sighted.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The accountant for a trust applicant income must be a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/IncomePrevious" priority="1037" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/IncomePrevious"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an accountant for previous income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/IncomePrior" priority="1036" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/IncomePrior"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an accountant for prior income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/IncomeRecent" priority="1035" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/IncomeRecent"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Accountant) or @x_Accountant = /Package/Content/Application/RelatedCompany/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with an accountant for a recent income should have a cross reference to a related company.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/TrustApplicant/Trustee" priority="1034" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/TrustApplicant/Trustee"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Trustee) or @x_Trustee = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Trustee) or @x_Trustee = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A trust applicant with a trustee should have a cross reference to a person or a company applicant or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/Application/VendorTaxInvoice" priority="1033" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/Application/VendorTaxInvoice"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=//@*[starts-with(name(),'x_')]"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=//@*[starts-with(name(),'x_')]"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A vendor tax invoice must be cross referenced from another entity.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@UniqueID=/Package/Content/Application/NonRealEstateAsset/@x_VendorTaxInvoice"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@UniqueID=/Package/Content/Application/NonRealEstateAsset/@x_VendorTaxInvoice"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A Vendor Tax Invoice must be cross referenced from a Non Real Estate Asset.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_DeliverTo) or @x_DeliverTo = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A vendor tax invoice with an address for delivery should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Purchaser) or @x_Purchaser = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Purchaser) or @x_Purchaser = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A vendor tax invoice with a purchaser should have a cross reference to a person, trust or a address or a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Vendor) or @x_Vendor = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Vendor) or @x_Vendor = /Package/Content/Application/RelatedCompany/@UniqueID | /Package/Content/Application/RelatedPerson/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A vendor tax invoice with a vendor should have a cross reference to a related company or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/@ClientMandate" priority="1032" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/@ClientMandate"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Yes' and ../ClientMandateDetails) or not(.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Yes' and ../ClientMandateDetails) or not(.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the client mandate is set to "Yes", the client mandate details must be provided.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/ClientMandateDetails" priority="1031" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/ClientMandateDetails"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@ClientMandate='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@ClientMandate='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the client mandate details are provided, the client mandate must be set to "Yes".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/CoApplicantInterview/Applicant" priority="1030" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/CoApplicantInterview/Applicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a applicant mentioned in the co-applicant interview should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/FutureCircumstances/Applicant" priority="1029" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/FutureCircumstances/Applicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a applicant mentioned in future circumstances remarks should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/Interview" priority="1028" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/Interview"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Location) or @x_Location = /Package/Content/Application/Address/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Location) or @x_Location = /Package/Content/Application/Address/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a location for the interview should have a cross reference to an address.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/Interview/@InterpreterRecommended" priority="1027" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/Interview/@InterpreterRecommended"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(.='Yes' and ../@InterpreterLanguage) or not (.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(.='Yes' and ../@InterpreterLanguage) or not (.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The need analysis interview with interpreter recommended should have an interpreter language.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/Interview/Attendee" priority="1026" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/Interview/Attendee"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Party) or @x_Party = /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Party) or @x_Party = /Package/Content/Application/RelatedPerson/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a party mentioned in the interview should have a cross reference to a person applicant or a related person.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/LoanTermSought" priority="1025" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/LoanTermSought"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a loan term sought duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with loan term sought duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/Preferences/InterestRateTypeDetails/FixedAndVariableRate/FixedPeriodDuration" priority="1024" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/Preferences/InterestRateTypeDetails/FixedAndVariableRate/FixedPeriodDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a split loan fixed rate duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with split loan fixed rate duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/Preferences/InterestRateTypeDetails/FixedRate/FixedPeriodDuration" priority="1023" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/Preferences/InterestRateTypeDetails/FixedRate/FixedPeriodDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a fixed rate duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with fixed rate duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/Preferences/RepaymentTypeDetails/InterestOnly/InterestOnlyDuration" priority="1022" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/Preferences/RepaymentTypeDetails/InterestOnly/InterestOnlyDuration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Length)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Length)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a interest only duration length should have duration units specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Length and @Units) or not(@Units)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Length and @Units) or not(@Units)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with interest only duration units should have a duration length specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/RetirementDetails/Applicant" priority="1021" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/RetirementDetails/Applicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a applicant mentioned in retirement remarks should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A needs analysis with a applicant mentioned in future circumstances remarks should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/RetirementDetails/Applicant/RepaymentOptions/@Refinance" priority="1020" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/RetirementDetails/Applicant/RepaymentOptions/@Refinance"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".='Yes' and ../RefinanceDetails/@Description or not(.='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".='Yes' and ../RefinanceDetails/@Description or not(.='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If refinance has been set to "Yes", then the refinance details under the repayment options must have a description specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/NeedsAnalysis/RetirementDetails/Applicant/RepaymentOptions/RefinanceDetails/@Description" priority="1019" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/NeedsAnalysis/RetirementDetails/Applicant/RepaymentOptions/RefinanceDetails/@Description"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../../@Refinance='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../../@Refinance='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>If the refinance details under the repayment options have a description specified, then refinance must be set to 'Yes'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Content/StatementOfPosition/Applicant" priority="1018" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Content/StatementOfPosition/Applicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_Applicant) or @x_Applicant = /Package/Content/Application/CompanyApplicant/@UniqueID | /Package/Content/Application/PersonApplicant/@UniqueID | /Package/Content/Application/TrustApplicant/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A statement of financial position with an applicant should have a cross reference to a person, trust or a company applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions" priority="1017" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="count(Submit)+count(Update)=1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(Submit)+count(Update)=1"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Each Application Instruction must be populated with one of either Submit or Update.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Submit" priority="1016" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Submit"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@IsAccountVariation='Yes' and /Package/Content/Application/AccountVariation/@Type) or not(@IsAccountVariation='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@IsAccountVariation='Yes' and /Package/Content/Application/AccountVariation/@Type) or not(@IsAccountVariation='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Loan application instructions indicating an account variation require an account variation type to be populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="count(@AssessmentType)=1 or @IsAccountVariation='Yes' or @IsSupportingDocuments='Yes'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(@AssessmentType)=1 or @IsAccountVariation='Yes' or @IsSupportingDocuments='Yes'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The application instructions must contain either an assessment type or indicate an account variation.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="count(@IsAccountVariation)=1 or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(@IsAccountVariation)=1 or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan where application instructions have been submitted must indicate if it is an account variation or not.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="count(@IsResubmission)=1 or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(@IsResubmission)=1 or (/Package/Instructions/ApplicationInstructions/Submit/@IsSupportingDocuments='Yes')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A loan where application instructions have been submitted must indicate if it is a resubmission or not.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Submit/Condition" priority="1015" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Submit/Condition"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_SupportingDocument) or @x_SupportingDocument = /Package/Attachment/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_SupportingDocument) or @x_SupportingDocument = /Package/Attachment/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A application instructions submit with supporting document should have a cross reference to an attachment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Update/Event" priority="1014" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Update/Event"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Name"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Name"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An application update event should have a name.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Update/Status/Condition" priority="1013" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Update/Status/Condition"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Name='Conditionally Approved'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Name='Conditionally Approved'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An application instructions' update status with condition details provided should have its status name set to 'Conditionally Approved'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_SupportingDocument) or @x_SupportingDocument= /Package/Attachment/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_SupportingDocument) or @x_SupportingDocument= /Package/Attachment/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A application instructions update with supporting document should have a cross reference to an attachment.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Update/Status/Condition/Product" priority="1012" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Update/Status/Condition/Product"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@x_FinancialProduct) or @x_FinancialProduct= /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/DepositAccountDetails/@UniqueID"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@x_FinancialProduct) or @x_FinancialProduct= /Package/Content/Application/Liability/@UniqueID | /Package/Content/Application/LoanDetails/@UniqueID | /Package/Content/Application/NonRealEstateAsset/@UniqueID | /Package/Content/Application/DepositAccountDetails/@UniqueID"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A application instructions update with product condition should have a cross reference to a liability, a loan, non real estate or deposit account details.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Update/Status/Declined" priority="1011" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Update/Status/Declined"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Name='Declined'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Name='Declined'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An application instructions' update status with declined details provided should have its status name set to 'Declined'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ApplicationInstructions/Update/Status/PreApproved" priority="1010" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ApplicationInstructions/Update/Status/PreApproved"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="../@Name='PreApproved'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="../@Name='PreApproved'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>An application instructions' update status with preapproved details provided should have its status name set to 'PreApproved'.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Instructions/ErrorInstructions" priority="1009" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Instructions/ErrorInstructions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Annotation/@Details"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Annotation/@Details"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Error instructions should have details of the error.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Publisher" priority="1008" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Publisher"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="Software"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="Software"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The Publisher's software should be included.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Publisher/@LIXICode" priority="1007" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Publisher/@LIXICode"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The Publisher's LIXI code is not a valid LIXI code.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Publisher/PhoneNumber" priority="1006" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Publisher/PhoneNumber"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@CountryCode and @Number) or not(@CountryCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@CountryCode and @Number) or not(@CountryCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A publisher with a country code for publisher phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@NewZealandDialingCode and @Number) or not(@NewZealandDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A publisher with a new zealand dialing code for publisher phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@Number and @NewZealandDialingCode) or (@Number and @OverseasDialingCode) or not(@Number)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A publisher with a number for publisher phone should have either a new zealand dialing code or an overseas dialing code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @CountryCode) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A publisher with an overseas dialing code for publisher phone should have a country code specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(@OverseasDialingCode and @Number) or not(@OverseasDialingCode)"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A publisher with an overseas dialing code for publisher phone should have a number specified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Publisher/RelatedSoftware" priority="1005" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Publisher/RelatedSoftware"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Environment"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Environment"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The message publisher's RelatedSoftware should name the environment used by the publisher.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Name"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Name"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The message publisher's RelatedSoftware should have a name for it to be fully identified.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@TechnicalEmail"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@TechnicalEmail"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The message publisher's RelatedSoftware should have a technical email address to advise the sender's technical support contact of any technical problems.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@Version"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@Version"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The message publisher's RelatedSoftware should have a software version populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Publisher/RelatedSoftware/@LIXICode" priority="1004" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Publisher/RelatedSoftware/@LIXICode"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The LIXI code for the Publisher's related software is not a valid LIXI code.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Publisher/Software/@LIXICode" priority="1003" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Publisher/Software/@LIXICode"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The LIXI code for the Publisher's software is not a valid LIXI code.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/Recipient/@LIXICode" priority="1002" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/Recipient/@LIXICode"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".= '247M00' or .= 'AAMMC1' or .= 'ABALO3' or .= 'ABLMC1' or .= 'ACGMC2' or .= 'ACTLV1' or .= 'ACTM00' or .= 'ADPMOO' or .= 'AFGMO1' or .= 'AFMLC2' or .= 'AHLMO1' or .= 'AJAMOO' or .= 'AMPMC1' or .= 'ANZMC1' or .= 'APCM00' or .= 'APRMOO' or .= 'ASAMOO' or .= 'ASFMOO' or .= 'ASHLDV' or .= 'ASTLC1' or .= 'AVTM00' or .= 'BAULC3' or .= 'BBALO3' or .= 'BBHLO3' or .= 'BLMPO1' or .= 'BMCM03' or .= 'BOQMOO' or .= 'BRPMDV' or .= 'BSEMOO' or .= 'BTMMOO' or .= 'BWAMC1' or .= 'CAFMOO' or .= 'CAPSIMOO' or .= 'CBAMC1' or .= 'CBRLV1' or .= 'CCSLDV' or .= 'CDOMOO' or .= 'CFSMC1' or .= 'CITMC1' or .= 'CJALV3' or .= 'CPAV3' or .= 'CSLMC2' or .= 'CSNM00' or .= 'CSOM00' or .= 'CSWMOO' or .= 'CUALDV' or .= 'CWVLV3' or .= 'DALMC2' or .= 'DELMOO' or .= 'DHALDV' or .= 'DIMOO' or .= 'EDSMC1' or .= 'ESKM00' or .= 'EVLMV1' or .= 'FATMI3' or .= 'FBAAMOO' or .= 'FFIM00' or .= 'FINMOO' or .= 'FLOLDV' or .= 'FMCMO1' or .= 'FMSMS1' or .= 'GALMS1' or .= 'GCULC3' or .= 'GHLMO2' or .= 'GLXM00' or .= 'GWFMC1' or .= 'HBSMC2' or .= 'HLCM00' or .= 'HLLMC2' or .= 'HMAMV1' or .= 'HSBMC1' or .= 'HSFMO2' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HSLMC1' or .= 'HTWMV1' or .= 'IDSCAL2D' or .= 'IDSMOO' or .= 'IMBMC2' or .= 'INGMC1' or .= 'INSMOO' or .= 'IWML01' or .= 'JLALV3' or .= 'KNAMOO' or .= 'LANM00' or .= 'LCOMOO' or .= 'LDPM00' or .= 'LFLMC2' or .= 'LLLM00' or .= 'LMKLO1' or .= 'LOAVO3' or .= 'LSGM00' or .= 'LTFMOO' or .= 'LTOM00' or .= 'LTXMC2' or .= 'LWLMV1' or .= 'LWTMOO' or .= 'MCAMO1' or .= 'MEBLO2' or .= 'MEMS3V3' or .= 'MFAM00' or .= 'MGSMS3' or .= 'MHLC3' or .= 'MLELC1' or .= 'MSAM00' or .= 'MSFMOO' or .= 'MSLMC1' or .= 'NFSMOO' or .= 'NGNMC1' or .= 'NMCMC3' or .= 'NPBMI2' or .= 'NSAAMOO' or .= 'NSEMOO' or .= 'ORIJMOO' or .= 'OSNLO2' or .= 'OVLMV1' or .= 'PCPMC2' or .= 'PDSMOO' or .= 'PHLMC2' or .= 'PINM00' or .= 'PLNMO1' or .= 'PMIMI1' or .= 'PNCMC2' or .= 'PNVMV3' or .= 'PONM00' or .= 'PPVMV2' or .= 'PRCMO1' or .= 'QCULO1' or .= 'QDLM00' or .= 'QTMLC1' or .= 'RMCLC3' or .= 'RMLMC2' or .= 'ROKM00' or .= 'RPDMV1' or .= 'RPDMV1' or .= 'RSAL2D' or .= 'SARM00' or .= 'SBFM00' or .= 'SFSM00' or .= 'SGBMC1' or .= 'SGTMOO' or .= 'SHLMO1' or .= 'SMLMC1' or .= 'SPLMO1' or .= 'SPSMOO' or .= 'SSCM00' or .= 'STLMC2' or .= 'TBELV3' or .= 'TCSMOO' or .= 'TDPM00' or .= 'TMBLO2' or .= 'TSWGMOO' or .= 'TTCOP3' or .= 'UCSLO2' or .= 'ULSMOO' or .= 'VPSMV1' or .= 'VSEM00' or .= 'WBALO3' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBCMC1' or .= 'WBPMV1' or .= 'WLMOO' or .= 'WNZMC2' or .= 'KIGZMU1' or .= 'NCXXXE9' or .= 'YJPTEE2' or .= 'RZTFBA7' or .= 'ACQILA9' or .= 'BQIYBH6' or .= 'YEVGLG5' or .= 'QCXYNO5' or .= 'LIXILIXI' or .= 'ORTJTD6' or .= 'BNZMO1' or .= 'LXHDMZ7' or .= 'MSFRVS4' or .= 'AOXGDX1' or .= 'BRQQFU1' or .= 'FLGDOO7' or .= 'AYZAZY2' or .= 'QPYYPW9' or .= 'KVSAFX9' or .= 'ZKTENS4' or .= 'TGGYFE4' or .= 'UOCRVM5' or .= 'FJLQNG8' or .= 'HLKBYC6' or .= 'XEZARF8' or .= 'LKWMSK3' or .= 'XKMTZX8' or .= 'CSCPIK1' or .= 'RVREQT1' or .= 'WOWOAU4' or .= 'ZBOLIV1' or .= 'DVMVTR9' or .= 'OTJIUL1' or .= 'DCZPJF8' or .= 'RJOZTS5' or .= 'REETTU5' or .= 'AQAREG2' or .= 'PSGSGU4' or .= 'ABVABV5' or .= 'CWLULH4' or .= 'IVLUAZ8' or .= 'HMNMEO9' or .= 'PMTQIM5' or .= 'OPLXHI1' or .= 'AXGFPD2' or .= 'YQQQAZ4' or .= 'OLVPVA9' or .= 'DBLVZJ7' or .= 'SJKLFM7' or .= 'JFTDSX6' or .= 'BCWQNO4' or .= 'QKBPIT1' or .= 'JJHHVG2' or .= 'ADEHAX5' or .= 'ADCGWD7' or .= 'QETYIN7' or .= 'FOYNSC3' or .= 'AMILBT1' or .= 'LOQWQK2' or .= 'ZYCANU1' or .= 'MGRRCQ4' or .= 'UWSGIF5' or .= 'KZYLFJ2' or .= 'SCABHV8' or .= 'DUCSBL6' or .= 'XPYWFK8' or .= 'KXRJNI9' or .= 'BSJBEO1' or .= 'FCPCRP5' or .= 'YNSKFH8' or .= 'MPKDCW2' or .= 'HTSMZD3' or .= 'TIWWIV5' or .= 'VNJXGF3' or .= 'GIZLAV6' or .= 'VAIXZT3' or .= 'XIAYZZ8' or .= 'QPWCWB5' or .= 'CMYUNC1' or .= 'CYABRE8' or .= 'GEDFBX4' or .= 'DYNUYF7' or .= 'ELTYIB2' or .= 'WAALJQ8' or .= 'XTWUTR5' or .= 'GTEPTO4' or .= 'VXFAYV6' or .= 'HNXFTY7' or .= 'TAVAZS8' or .= 'KMLIQC6' or .= 'NQDFSY2' or .= 'HYQGIR4' or .= 'MMGKSR2' or .= 'GZSMIG8' or .= 'BPLBTV5' or .= 'AGDOFC8' or .= 'UBSIKB2' or .= 'NHNVKK7' or .= 'BBGNSE9' or .= 'HQVAKT7' or .= 'DZEAGZ7' or .= 'IFQBTQ6' or .= 'WJPQWS4' or .= 'LIXIBANK' or .= 'LIXIBRKR' or .= 'LIXIVALU' or .= 'SRKVDR2' or .= 'OWJKQF7' or .= 'UQWDVN6' or .= 'DQVUMT3' or .= 'VJEOHS8' or .= 'GWAUUO7' or .= 'GCKBDE2'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The Recipient's LIXI code is not a valid LIXI code.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="/Package/SchemaVersion" priority="1001" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/Package/SchemaVersion"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@LIXITransactionType"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@LIXITransactionType"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A package must have a schema version with the LIXI transaction type populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@LIXIVersion"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@LIXIVersion"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A package must have a schema version with the LIXI Version populated.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template>

	<!--RULE -->
<axsl:template match="Package/Content/Application/PersonApplicant" priority="1000" mode="M0"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="Package/Content/Application/PersonApplicant"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@PrimaryApplicant"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@PrimaryApplicant"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A person applicant should have a flag to indicate its a primary applicant.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template><axsl:template match="text()" priority="-1" mode="M0"/><axsl:template match="@*|node()" priority="-2" mode="M0"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M0"/></axsl:template></axsl:stylesheet>
`;

XML_to_JSON = `<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:foo="http://whatever">
	<xsl:output method="text" encoding="utf-8"/>

	<xsl:template match="/*[node()]">
		<xsl:text>{</xsl:text>
		<xsl:apply-templates select="." mode="detect"/>
		<xsl:text>}</xsl:text>
	</xsl:template>

	 <xsl:template name="getXpath">
       <xsl:for-each select="ancestor-or-self::*">
           	<xsl:if test="position()=1">
				<xsl:value-of select="local-name()"/>
			</xsl:if>
			<xsl:if test="position()!=1">
				<xsl:value-of select="concat('.',local-name())"/>
			</xsl:if>
       </xsl:for-each>
   	</xsl:template>

	 <xsl:template name="getAttrXpath">
       <xsl:for-each select="ancestor-or-self::*">
			<xsl:if test="position()=1">
				<xsl:value-of select="local-name()"/>
			</xsl:if>
			<xsl:if test="position()!=1">
				<xsl:value-of select="concat('.',local-name())"/>
			</xsl:if>
       </xsl:for-each>
	   <xsl:value-of select="concat('.',name())"/>
   	</xsl:template>

	<xsl:template match="*" mode="detect">

		<xsl:variable name="xpath">
			<xsl:call-template name="getXpath"/>            
		</xsl:variable> 

		<xsl:choose>
            <!-- Check if the preceding element has a different name to the current node, and -->
            <!-- Check if the following element has a different name to the current node, and -->
            <!-- Check if the current element is repeatable -->
            <xsl:when test="(name(preceding-sibling::*[1]) != name(current())) and 
							(name(following-sibling::*[1]) != name(current())) and 
							(
$xpath = 'Package.Attachment' or
$xpath = 'Package.Attachment.Content' or
$xpath = 'Package.Content.Application.AccountVariation' or
$xpath = 'Package.Content.Application.AccountVariation.SplitAccount.Account' or
$xpath = 'Package.Content.Application.Address' or
$xpath = 'Package.Content.Application.CompanyApplicant' or
$xpath = 'Package.Content.Application.CompanyApplicant.AuthorisedSignatory' or
$xpath = 'Package.Content.Application.CompanyApplicant.BeneficialOwner' or
$xpath = 'Package.Content.Application.CompanyApplicant.CreditHistory' or
$xpath = 'Package.Content.Application.CompanyApplicant.Director' or
$xpath = 'Package.Content.Application.CompanyApplicant.ExistingCustomer.AccountNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.FinancialAnalysis.CompanyFinancials' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income' or
$xpath = 'Package.Content.Application.CompanyApplicant.Partner' or
$xpath = 'Package.Content.Application.CompanyApplicant.ResponsibleLending.Mitigant' or
$xpath = 'Package.Content.Application.CompanyApplicant.ResponsibleLending.SignificantChange' or
$xpath = 'Package.Content.Application.CompanyApplicant.Shareholder' or
$xpath = 'Package.Content.Application.CompanyFinancials' or
$xpath = 'Package.Content.Application.ContributionFunds' or
$xpath = 'Package.Content.Application.CustomerTransactionAnalysis' or
$xpath = 'Package.Content.Application.DepositAccountDetails' or
$xpath = 'Package.Content.Application.DepositAccountDetails.AccountOwners.Owner' or
$xpath = 'Package.Content.Application.DepositAccountDetails.FeaturesSelected' or
$xpath = 'Package.Content.Application.DepositAccountDetails.FeaturesSelected.ExtraFeature' or
$xpath = 'Package.Content.Application.DepositAccountDetails.ForeignCurrencyWallet' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Term.DistinctAccountPeriod' or
$xpath = 'Package.Content.Application.DetailedComment' or
$xpath = 'Package.Content.Application.Funder' or
$xpath = 'Package.Content.Application.Household' or
$xpath = 'Package.Content.Application.Household.Dependant' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.LivingExpense' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.LivingExpense.PercentResponsible.Owner' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.OtherCommitment' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.OtherCommitment.PercentResponsible.Owner' or
$xpath = 'Package.Content.Application.Insurance' or
$xpath = 'Package.Content.Application.Insurance.AssociatedLoanAccount' or
$xpath = 'Package.Content.Application.Insurance.InsuredParty' or
$xpath = 'Package.Content.Application.LendingGuarantee' or
$xpath = 'Package.Content.Application.LendingGuarantee.AssociatedLoanAccount' or
$xpath = 'Package.Content.Application.LendingGuarantee.Guarantor' or
$xpath = 'Package.Content.Application.LendingGuarantee.Security' or
$xpath = 'Package.Content.Application.LendingGuarantee.Security.SecurityAgreement.TermsAndConditions' or
$xpath = 'Package.Content.Application.Liability' or
$xpath = 'Package.Content.Application.Liability.ContinuingRepayment' or
$xpath = 'Package.Content.Application.Liability.DiscountMargin' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment' or
$xpath = 'Package.Content.Application.Liability.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.Liability.RateComposition' or
$xpath = 'Package.Content.Application.Liability.Repayment' or
$xpath = 'Package.Content.Application.Liability.Security' or
$xpath = 'Package.Content.Application.Liability.Security.MortgagorDetails' or
$xpath = 'Package.Content.Application.Liability.Security.SecurityAgreement.TermsAndConditions' or
$xpath = 'Package.Content.Application.LoanDetails' or
$xpath = 'Package.Content.Application.LoanDetails.Borrowers.Owner' or
$xpath = 'Package.Content.Application.LoanDetails.Commission' or
$xpath = 'Package.Content.Application.LoanDetails.DiscountMargin' or
$xpath = 'Package.Content.Application.LoanDetails.FeaturesSelected.ExtraFeature' or
$xpath = 'Package.Content.Application.LoanDetails.FeaturesSelected.OffsetAccount' or
$xpath = 'Package.Content.Application.LoanDetails.FundsDisbursement' or
$xpath = 'Package.Content.Application.LoanDetails.Guarantor' or
$xpath = 'Package.Content.Application.LoanDetails.LendingPurpose' or
$xpath = 'Package.Content.Application.LoanDetails.Package' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition' or
$xpath = 'Package.Content.Application.LoanDetails.Security' or
$xpath = 'Package.Content.Application.LoanDetails.Security.SecurityAgreement.TermsAndConditions' or
$xpath = 'Package.Content.Application.LoanDetails.SupplementaryCardholder' or
$xpath = 'Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod' or
$xpath = 'Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod.Repayment' or
$xpath = 'Package.Content.Application.LoanDetails.Term.InterestOnlyReason' or
$xpath = 'Package.Content.Application.MasterAgreement' or
$xpath = 'Package.Content.Application.MasterAgreement.AccountToIncorporate' or
$xpath = 'Package.Content.Application.MasterAgreement.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.MasterAgreement.Security' or
$xpath = 'Package.Content.Application.MasterAgreement.Security.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.MasterAgreement.Security.SecurityAgreement.TermsAndConditions' or
$xpath = 'Package.Content.Application.NonRealEstateAsset' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis.CompanyFinancials' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Encumbrance' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Insurance' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Watercraft.OutboardMotor' or
$xpath = 'Package.Content.Application.OtherExpense' or
$xpath = 'Package.Content.Application.OtherExpense.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.OtherIncome' or
$xpath = 'Package.Content.Application.OtherIncome.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.Overview.LinkedApplicationDetails' or
$xpath = 'Package.Content.Application.PersonApplicant' or
$xpath = 'Package.Content.Application.PersonApplicant.AdditionalCitizenship' or
$xpath = 'Package.Content.Application.PersonApplicant.AdditionalForeignResidency' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.EmailAddress' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.PriorAddress' or
$xpath = 'Package.Content.Application.PersonApplicant.CreditHistory' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis.CompanyFinancials' or
$xpath = 'Package.Content.Application.PersonApplicant.ExistingCustomer.AccountNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Insurance' or
$xpath = 'Package.Content.Application.PersonApplicant.PowerOfAttorney.DealingNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.PreviousName' or
$xpath = 'Package.Content.Application.PersonApplicant.ProofOfIdentity' or
$xpath = 'Package.Content.Application.PersonApplicant.ProofOfIdentity.Attachment' or
$xpath = 'Package.Content.Application.PersonApplicant.ResponsibleLending.Mitigant' or
$xpath = 'Package.Content.Application.PersonApplicant.ResponsibleLending.SignificantChange' or
$xpath = 'Package.Content.Application.ProductSet' or
$xpath = 'Package.Content.Application.ProductSet.Product' or
$xpath = 'Package.Content.Application.RealEstateAsset' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.ConstructionStage' or
$xpath = 'Package.Content.Application.RealEstateAsset.Encumbrance' or
$xpath = 'Package.Content.Application.RealEstateAsset.Insurance' or
$xpath = 'Package.Content.Application.RealEstateAsset.PercentOwned.Owner' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyExpense' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures' or
$xpath = 'Package.Content.Application.RealEstateAsset.RentalIncome' or
$xpath = 'Package.Content.Application.RealEstateAsset.Title' or
$xpath = 'Package.Content.Application.RelatedCompany' or
$xpath = 'Package.Content.Application.RelatedCompany.BeneficialOwner' or
$xpath = 'Package.Content.Application.RelatedCompany.Contact.TradingAddress' or
$xpath = 'Package.Content.Application.RelatedCompany.Director' or
$xpath = 'Package.Content.Application.RelatedCompany.Partner' or
$xpath = 'Package.Content.Application.RelatedCompany.Shareholder' or
$xpath = 'Package.Content.Application.RelatedPerson' or
$xpath = 'Package.Content.Application.SalesChannel.Commission' or
$xpath = 'Package.Content.Application.SalesChannel.LoanWriter.DelegatedRecipient' or
$xpath = 'Package.Content.Application.Summary.Fee' or
$xpath = 'Package.Content.Application.Summary.LoanToValuationRatio.ContributingValuation' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.Applicant' or
$xpath = 'Package.Content.Application.TrustApplicant' or
$xpath = 'Package.Content.Application.TrustApplicant.BeneficialOwner' or
$xpath = 'Package.Content.Application.TrustApplicant.Beneficiary' or
$xpath = 'Package.Content.Application.TrustApplicant.DealingNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.ExistingCustomer.AccountNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.FinancialAnalysis.CompanyFinancials' or
$xpath = 'Package.Content.Application.TrustApplicant.Income' or
$xpath = 'Package.Content.Application.TrustApplicant.TrustDeedVariation' or
$xpath = 'Package.Content.Application.TrustApplicant.Trustee' or
$xpath = 'Package.Content.Application.VendorTaxInvoice' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset' or
$xpath = 'Package.Content.NeedsAnalysis.CoApplicantInterview.Applicant' or
$xpath = 'Package.Content.NeedsAnalysis.CoApplicantInterview.Witness' or
$xpath = 'Package.Content.NeedsAnalysis.FutureCircumstances.Applicant' or
$xpath = 'Package.Content.NeedsAnalysis.FutureCircumstances.ResponsibleLending.Mitigant' or
$xpath = 'Package.Content.NeedsAnalysis.FutureCircumstances.ResponsibleLending.SignificantChange' or
$xpath = 'Package.Content.NeedsAnalysis.Interview.Attendee' or
$xpath = 'Package.Content.NeedsAnalysis.PurposeOfApplication' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.CoApplicantIncomeDetails.CoApplicant' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.AcceptableAsset' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.PropertyToSell' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.LenderAcceptableAssetsDetails.Asset' or
$xpath = 'Package.Content.StatementOfPosition' or
$xpath = 'Package.Content.StatementOfPosition.Applicant' or
$xpath = 'Package.Instructions.ApplicationInstructions.Submit.Condition' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Event' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.Condition' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.Condition.Product' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.Declined' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.PreApproved' or
$xpath = 'Package.Instructions.ErrorInstructions' or
$xpath = 'Package.Instructions.ErrorInstructions.Annotation' or
$xpath = 'Package.Publisher.RelatedSoftware' or
$xpath = 'Package.Recipient' or
$xpath = 'Package.TransformMetadata.Identifier' 
)">
				<xsl:text>"</xsl:text>
				<xsl:value-of select="name()"/>
				<xsl:text>" : [</xsl:text>
				<xsl:apply-templates select="." mode="obj-content"/>
				<xsl:text>] </xsl:text>
				<xsl:if test="count(following-sibling::*[name() != name(current())]) &gt; 0">, </xsl:if>
			</xsl:when>
			<!-- Check if the preceeding sibling has the same name as the current item, and the name of the following sibling is different, in which case we close the array -->
			<!-- Is there a way to extend this to check if the item in the schema is repeatable? In which case open the array if not already?  -->
			<!-- /Package/Content/Application/LoanDetails/LendingPurpose -->
			<xsl:when test="name(preceding-sibling::*[1]) = name(current()) and name(following-sibling::*[1]) != name(current())">
				<xsl:apply-templates select="." mode="obj-content"/>
				<xsl:text>]</xsl:text>
				<xsl:if test="count(following-sibling::*[name() != name(current())]) &gt; 0">, </xsl:if>
			</xsl:when>
			<!-- This checks if the preceeding sibling has the same name as the current item, and if so, separates them with a comma -->
			<xsl:when test="name(preceding-sibling::*[1]) = name(current())">
				<xsl:apply-templates select="." mode="obj-content"/>
				<xsl:if test="name(following-sibling::*) = name(current())">, </xsl:if>
			</xsl:when>
			<!-- This checks if the following sibling has the same name as the current item, in which case it needs to go into an array, so open an array -->
			<!-- Is there a way to extend this to check if the item in the schema is repeatable? In which case open an array if not already? -->
			<xsl:when test="following-sibling::*[1][name() = name(current())]">
				<xsl:text>"</xsl:text>
				<xsl:value-of select="name()"/>
				<xsl:text>" : [</xsl:text>
				<xsl:apply-templates select="." mode="obj-content"/>
				<xsl:text>, </xsl:text>
			</xsl:when>
			<xsl:when test="count(./child::*) > 0 or count(@*) > 0">
				<xsl:text>"</xsl:text>
				<xsl:value-of select="name()"/>" : <xsl:apply-templates select="." mode="obj-content"/>
				<xsl:if test="count(following-sibling::*) &gt; 0">, </xsl:if>
			</xsl:when>
			<!-- check that the element has no children -->
			<!-- check that the element has TEXT content -->
			<xsl:when test="count(./child::*) = 0 and ./text()">
				<xsl:text>"</xsl:text>
				<xsl:value-of select="name()"/>
				<xsl:text>" : { "$": "</xsl:text>
				<xsl:apply-templates select="."/>
				<xsl:text>" }</xsl:text>
				<xsl:if test="count(following-sibling::*) &gt; 0">, </xsl:if>
			</xsl:when>
			<xsl:when test="count(./child::*) = 0">
				<xsl:text>"</xsl:text>
				<xsl:value-of select="name()"/>" : {<xsl:apply-templates select="."/>
				<xsl:text>}</xsl:text>
				<xsl:if test="count(following-sibling::*) &gt; 0">, </xsl:if>
			</xsl:when>
		</xsl:choose>
	</xsl:template>

	<xsl:template match="*" mode="obj-content">
		<xsl:text>{</xsl:text>
		<xsl:apply-templates select="@*" mode="attr">
		<xsl:sort select ="name()" order="ascending" data-type="text" />
		</xsl:apply-templates>
		<xsl:if test="count(@*) &gt; 0 and (count(child::*) &gt; 0 or text())">, </xsl:if>
		<xsl:apply-templates select="./*" mode="detect"/>
		<xsl:if test="count(child::*) = 0 and text() and not(@*)">
			<xsl:text>"</xsl:text>
			<xsl:value-of select="name()"/>" : "<xsl:value-of select="text()"/>
			<xsl:text>"</xsl:text>
		</xsl:if>
		<xsl:if test="count(child::*) = 0 and text() and @*">
			<xsl:text>"text" : "</xsl:text>
			<xsl:value-of select="text()"/>
			<xsl:text>"</xsl:text>
		</xsl:if>
		<xsl:text>}</xsl:text>
		<xsl:if test="position() &lt; last()">, </xsl:if>
	</xsl:template>

	<!-- Main template for escaping strings; used by above template and for object-properties
		   Responsibilities: placed quotes around string, and chain up to next filter, escape-bs-string -->
	<xsl:template name="escape-string">
		<xsl:param name="s"/>
		<xsl:text>"</xsl:text>
		<xsl:call-template name="escape-bs-string">
			<xsl:with-param name="s" select="$s"/>
		</xsl:call-template>
		<xsl:text>"</xsl:text>
	</xsl:template>


	<!-- Escape the backslash (\\) before everything else. -->
	<xsl:template name="escape-bs-string">
		<xsl:param name="s"/>
		<xsl:choose>
			<xsl:when test="contains($s,'\\')">
				<xsl:call-template name="escape-quot-string">
					<xsl:with-param name="s" select="concat(substring-before($s,'\\'),'\\\\')"/>
				</xsl:call-template>
				<xsl:call-template name="escape-bs-string">
					<xsl:with-param name="s" select="substring-after($s,'\\')"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="escape-quot-string">
					<xsl:with-param name="s" select="$s"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>


	<!-- Escape the double quote ("). -->
	<xsl:template name="escape-quot-string">
		<xsl:param name="s"/>
		<xsl:choose>
			<xsl:when test="contains($s,'&quot;')">
				<xsl:call-template name="encode-string">
					<xsl:with-param name="s" select="concat(substring-before($s,'&quot;'),'\\&quot;')"/>
				</xsl:call-template>
				<xsl:call-template name="escape-quot-string">
					<xsl:with-param name="s" select="substring-after($s,'&quot;')"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="encode-string">
					<xsl:with-param name="s" select="$s"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>


	<!-- Replace tab, line feed and/or carriage return by its matching escape code. Can't escape backslash
		   or double quote here, because they don't replace characters (&#x0; becomes 	), but they prefix
		   characters (\\ becomes \\). Besides, backslash should be seperate anyway, because it should be
		   processed first. This function can't do that. -->
	<xsl:template name="encode-string">
		<xsl:param name="s"/>
		<xsl:choose>
			<!-- tab -->
			<xsl:when test="contains($s,'&#x9;')">
				<xsl:call-template name="encode-string">
					<xsl:with-param name="s" select="concat(substring-before($s,'&#x9;'),'\\t',substring-after($s,'&#x9;'))"/>
				</xsl:call-template>
			</xsl:when>
			<!-- line feed -->
			<xsl:when test="contains($s,'&#xA;')">
				<xsl:call-template name="encode-string">
					<xsl:with-param name="s" select="concat(substring-before($s,'&#xA;'),'\\n',substring-after($s,'&#xA;'))"/>
				</xsl:call-template>
			</xsl:when>
			<!-- carriage return -->
			<xsl:when test="contains($s,'&#xD;')">
				<xsl:call-template name="encode-string">
					<xsl:with-param name="s" select="concat(substring-before($s,'&#xD;'),'\\r',substring-after($s,'&#xD;'))"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise><xsl:value-of select="$s"/></xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<!-- string -->
	<xsl:template match="text()" mode="xml-to-json" >
		<xsl:choose>
			<xsl:when test=". = 'null'">null</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="escape-string">
					<xsl:with-param name="s" select="."/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template match="@*" mode="attr">

		<xsl:variable name="xpath">
			<xsl:call-template name="getAttrXpath"/>            
		</xsl:variable> 

		<xsl:choose>
            <xsl:when test="
$xpath = 'Package.Attachment.Content.SequenceNumber' or
$xpath = 'Package.Attachment.SequenceNumber' or
$xpath = 'Package.Content.Application.AccountVariation.BalanceIncrease.IncreaseAmount' or
$xpath = 'Package.Content.Application.AccountVariation.BalanceIncrease.NewBalance' or
$xpath = 'Package.Content.Application.AccountVariation.ChangeLoanTerm.NewFixedLoanTerm' or
$xpath = 'Package.Content.Application.AccountVariation.ChangeLoanTerm.NewTotalLoanTerm' or
$xpath = 'Package.Content.Application.AccountVariation.ChangeRepaymentAmount.RepaymentAmount' or
$xpath = 'Package.Content.Application.AccountVariation.CloseAccount.PayoutAmount' or
$xpath = 'Package.Content.Application.AccountVariation.InterestRateDiscount.DiscountRate' or
$xpath = 'Package.Content.Application.AccountVariation.LimitIncrease.IncreaseAmount' or
$xpath = 'Package.Content.Application.AccountVariation.LimitIncrease.NewLimit' or
$xpath = 'Package.Content.Application.AccountVariation.ReduceBalance.NewBalance' or
$xpath = 'Package.Content.Application.AccountVariation.ReduceBalance.ReductionAmount' or
$xpath = 'Package.Content.Application.AccountVariation.ReduceLimit.LimitReduction' or
$xpath = 'Package.Content.Application.AccountVariation.ReduceLimit.NewLimit' or
$xpath = 'Package.Content.Application.AccountVariation.SplitAccount.Account.SequenceNumber' or
$xpath = 'Package.Content.Application.AccountVariation.SequenceNumber' or
$xpath = 'Package.Content.Application.Address.Latitude' or
$xpath = 'Package.Content.Application.Address.Longitude' or
$xpath = 'Package.Content.Application.Address.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.AuthorisedSignatory.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.BeneficialOwner.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.Business.NumberOfEmployees' or
$xpath = 'Package.Content.Application.CompanyApplicant.Business.NumberOfLocations' or
$xpath = 'Package.Content.Application.CompanyApplicant.Contact.PreviousRegisteredAddressDuration.Length' or
$xpath = 'Package.Content.Application.CompanyApplicant.Contact.PrincipalTradingAddressDuration.Length' or
$xpath = 'Package.Content.Application.CompanyApplicant.Contact.RegisteredAddressDuration.Length' or
$xpath = 'Package.Content.Application.CompanyApplicant.CreditHistory.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.DeclaredIncome.IncomeAmount' or
$xpath = 'Package.Content.Application.CompanyApplicant.DeclaredIncome.NetIncomeAmount' or
$xpath = 'Package.Content.Application.CompanyApplicant.Director.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.ExistingCustomer.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.FinancialAnalysis.CompanyFinancials.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.FinancialAnalysis.AnnualPaymentOnCommitments' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.Allowances' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.Bonus' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.CarExpense' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.Depreciation' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.Interest' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.Lease' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.PaymentToDirector' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.Salary' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.CompanyProfitAfterTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.CompanyProfitBeforeTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.Income.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.Allowances' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.Bonus' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.CarExpense' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.Depreciation' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.Interest' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.Lease' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.PaymentToDirector' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.Salary' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.CompanyProfitAfterTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrevious.CompanyProfitBeforeTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.Allowances' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.Bonus' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.CarExpense' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.Depreciation' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.Interest' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.Lease' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.PaymentToDirector' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.Salary' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.CompanyProfitAfterTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomePrior.CompanyProfitBeforeTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.Allowances' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.Bonus' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.CarExpense' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.Depreciation' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.Interest' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.Lease' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.PaymentToDirector' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.Salary' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.CompanyProfitAfterTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeRecent.CompanyProfitBeforeTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.Allowances' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.Bonus' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.CarExpense' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.Depreciation' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.Interest' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.Lease' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.PaymentToDirector' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.Salary' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.CompanyProfitAfterTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.IncomeYearToDate.CompanyProfitBeforeTax' or
$xpath = 'Package.Content.Application.CompanyApplicant.Partner.PercentOwned' or
$xpath = 'Package.Content.Application.CompanyApplicant.Partner.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.ResponsibleLending.Mitigant.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.ResponsibleLending.SignificantChange.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.Shareholder.PercentOwned' or
$xpath = 'Package.Content.Application.CompanyApplicant.Shareholder.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyApplicant.NumberOfDirectors' or
$xpath = 'Package.Content.Application.CompanyApplicant.NumberOfPartners' or
$xpath = 'Package.Content.Application.CompanyApplicant.NumberOfShareholders' or
$xpath = 'Package.Content.Application.CompanyApplicant.SequenceNumber' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.Cash' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.CashAndCashEquivalents' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.Intangibles' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.Inventory' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.TangibleAssets' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.TotalAssets' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.TotalCurrentAssets' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Assets.TradeDebtors' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Liabilities.DebtAtNominalValue' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Liabilities.TotalCurrentLiabilities' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Liabilities.TotalLiabilities' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Liabilities.TradeCreditors' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.Equity' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.NetAssets' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.PaidUpCapital' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.RetainedEarnings' or
$xpath = 'Package.Content.Application.CompanyFinancials.BalanceSheet.ShareholderFunds' or
$xpath = 'Package.Content.Application.CompanyFinancials.CurrentMarketData.ValueOfCommonEquity' or
$xpath = 'Package.Content.Application.CompanyFinancials.CurrentMarketData.ValueOfMinorityInterests' or
$xpath = 'Package.Content.Application.CompanyFinancials.CurrentMarketData.ValueOfPreferredEquity' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.AmortisationExpense' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.CostOfGoodsSold' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.DepreciationExpense' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.EBIT' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.EBITDA' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.GrossProfit' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.IncomeTax' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.InterestExpense' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.NetProfitBeforeTax' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.OperatingExpenses' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.PaymentsToDirectors' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.Sales' or
$xpath = 'Package.Content.Application.CompanyFinancials.ProfitAndLoss.TotalExpenses' or
$xpath = 'Package.Content.Application.CompanyFinancials.SequenceNumber' or
$xpath = 'Package.Content.Application.ContributionFunds.Amount' or
$xpath = 'Package.Content.Application.ContributionFunds.SequenceNumber' or
$xpath = 'Package.Content.Application.CustomerTransactionAnalysis.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.AccountOwners.Owner.Percent' or
$xpath = 'Package.Content.Application.DepositAccountDetails.AccountOwners.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Commission.CommissionAmount' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Commission.Trail' or
$xpath = 'Package.Content.Application.DepositAccountDetails.FeaturesSelected.ExtraFeature.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.FeaturesSelected.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.ForeignCurrencyWallet.InitialForeignCurrencyDepositAmount' or
$xpath = 'Package.Content.Application.DepositAccountDetails.ForeignCurrencyWallet.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Interest.PayableTo.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Interest.FrequencyInterval' or
$xpath = 'Package.Content.Application.DepositAccountDetails.MaturityInstructions.GracePeriod.Length' or
$xpath = 'Package.Content.Application.DepositAccountDetails.MaturityInstructions.PayableTo.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.MaturityInstructions.PayOutAmount' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.BaseRate.Rate' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.IntroductoryMargin' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.PaymentTypeMargin' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.ProductMargin' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.TermPremium' or
$xpath = 'Package.Content.Application.DepositAccountDetails.RateComposition.TotalInterestRate' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Term.DistinctAccountPeriod.Duration.Length' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Term.DistinctAccountPeriod.SequenceNumber' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Term.FundingWindow.Length' or
$xpath = 'Package.Content.Application.DepositAccountDetails.Term.TotalTermDuration' or
$xpath = 'Package.Content.Application.DepositAccountDetails.ProposedAnnualInterestRate' or
$xpath = 'Package.Content.Application.DepositAccountDetails.SequenceNumber' or
$xpath = 'Package.Content.Application.DetailedComment.SequenceNumber' or
$xpath = 'Package.Content.Application.Funder.Amount' or
$xpath = 'Package.Content.Application.Funder.SequenceNumber' or
$xpath = 'Package.Content.Application.Household.Dependant.Age' or
$xpath = 'Package.Content.Application.Household.Dependant.SequenceNumber' or
$xpath = 'Package.Content.Application.Household.EducationExpenses.NumberOfAdultsInFullTimeStudy' or
$xpath = 'Package.Content.Application.Household.EducationExpenses.NumberOfAdultsInPartTimeStudy' or
$xpath = 'Package.Content.Application.Household.EducationExpenses.NumberOfChildrenInPrivateSchool' or
$xpath = 'Package.Content.Application.Household.EducationExpenses.NumberOfChildrenInPublicSchool' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.LivingExpense.PercentResponsible.Owner.Percent' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.LivingExpense.PercentResponsible.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.LivingExpense.Amount' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.LivingExpense.SequenceNumber' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.OtherCommitment.PercentResponsible.Owner.Percent' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.OtherCommitment.PercentResponsible.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.OtherCommitment.Amount' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.OtherCommitment.SequenceNumber' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.TotalSystemCalculatedLivingExpenses.Amount' or
$xpath = 'Package.Content.Application.Household.ExpenseDetails.TotalUserStatedLivingExpenses.Amount' or
$xpath = 'Package.Content.Application.Household.NumberOfAdults' or
$xpath = 'Package.Content.Application.Household.NumberOfDependants' or
$xpath = 'Package.Content.Application.Household.SequenceNumber' or
$xpath = 'Package.Content.Application.Insurance.AssociatedLoanAccount.SequenceNumber' or
$xpath = 'Package.Content.Application.Insurance.CommissionPayable.Amount' or
$xpath = 'Package.Content.Application.Insurance.CommissionPayable.Percentage' or
$xpath = 'Package.Content.Application.Insurance.InsuredParty.SequenceNumber' or
$xpath = 'Package.Content.Application.Insurance.Premium.Amount' or
$xpath = 'Package.Content.Application.Insurance.InsuredAmount' or
$xpath = 'Package.Content.Application.Insurance.SequenceNumber' or
$xpath = 'Package.Content.Application.LendingGuarantee.AssociatedLoanAccount.SequenceNumber' or
$xpath = 'Package.Content.Application.LendingGuarantee.Guarantor.SequenceNumber' or
$xpath = 'Package.Content.Application.LendingGuarantee.Security.SecurityAgreement.TermsAndConditions.SequenceNumber' or
$xpath = 'Package.Content.Application.LendingGuarantee.Security.SequenceNumber' or
$xpath = 'Package.Content.Application.LendingGuarantee.IncomeLimitAmount' or
$xpath = 'Package.Content.Application.LendingGuarantee.Limit' or
$xpath = 'Package.Content.Application.LendingGuarantee.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.Arrears.Amount' or
$xpath = 'Package.Content.Application.Liability.Arrears.NumberOfMissedPayments' or
$xpath = 'Package.Content.Application.Liability.ContinuingRepayment.RemainingRepayments' or
$xpath = 'Package.Content.Application.Liability.ContinuingRepayment.RepaymentAmount' or
$xpath = 'Package.Content.Application.Liability.ContinuingRepayment.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.DiscountMargin.DiscountedAmount' or
$xpath = 'Package.Content.Application.Liability.DiscountMargin.DiscountRate' or
$xpath = 'Package.Content.Application.Liability.DiscountMargin.Duration' or
$xpath = 'Package.Content.Application.Liability.DiscountMargin.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Duration.Length' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.InterestTypeDuration' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.PaymentTypeDuration' or
$xpath = 'Package.Content.Application.Liability.OriginalTerm.TotalTermDuration' or
$xpath = 'Package.Content.Application.Liability.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.Liability.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.RateComposition.BaseRate.Rate' or
$xpath = 'Package.Content.Application.Liability.RateComposition.CustomerRiskMargin' or
$xpath = 'Package.Content.Application.Liability.RateComposition.IntroductoryMargin' or
$xpath = 'Package.Content.Application.Liability.RateComposition.PaymentTypeMargin' or
$xpath = 'Package.Content.Application.Liability.RateComposition.ProductMargin' or
$xpath = 'Package.Content.Application.Liability.RateComposition.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.RateComposition.TermPremium' or
$xpath = 'Package.Content.Application.Liability.RateComposition.TotalInterestRate' or
$xpath = 'Package.Content.Application.Liability.RemainingTerm.Duration' or
$xpath = 'Package.Content.Application.Liability.Repayment.RemainingRepayments' or
$xpath = 'Package.Content.Application.Liability.Repayment.RepaymentAmount' or
$xpath = 'Package.Content.Application.Liability.Repayment.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.Security.MortgagorDetails.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.Security.SecurityAgreement.TermsAndConditions.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.Security.PriorityAmount' or
$xpath = 'Package.Content.Application.Liability.Security.SequenceNumber' or
$xpath = 'Package.Content.Application.Liability.AnnualInterestRate' or
$xpath = 'Package.Content.Application.Liability.ClearingFromOtherSourceAmount' or
$xpath = 'Package.Content.Application.Liability.ClearingFromThisLoanAmount' or
$xpath = 'Package.Content.Application.Liability.CreditLimit' or
$xpath = 'Package.Content.Application.Liability.LVR' or
$xpath = 'Package.Content.Application.Liability.NegativelyGearedPercentage' or
$xpath = 'Package.Content.Application.Liability.NewLimit' or
$xpath = 'Package.Content.Application.Liability.OriginalAmount' or
$xpath = 'Package.Content.Application.Liability.OutstandingBalance' or
$xpath = 'Package.Content.Application.Liability.RefinanceAmount' or
$xpath = 'Package.Content.Application.Liability.RefinanceCosts' or
$xpath = 'Package.Content.Application.Liability.RevertInterestRate' or
$xpath = 'Package.Content.Application.Liability.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Borrowers.Owner.Percent' or
$xpath = 'Package.Content.Application.LoanDetails.Borrowers.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.BulkReduction.Amount' or
$xpath = 'Package.Content.Application.LoanDetails.Commission.CommissionAmount' or
$xpath = 'Package.Content.Application.LoanDetails.Commission.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Commission.Trail' or
$xpath = 'Package.Content.Application.LoanDetails.Commission.UpfrontPayment' or
$xpath = 'Package.Content.Application.LoanDetails.DiscountMargin.DiscountedAmount' or
$xpath = 'Package.Content.Application.LoanDetails.DiscountMargin.DiscountRate' or
$xpath = 'Package.Content.Application.LoanDetails.DiscountMargin.Duration' or
$xpath = 'Package.Content.Application.LoanDetails.DiscountMargin.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Amount.CalculateAsPercentage' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Amount.CashReserve' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Amount.InstalmentsAmount' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Amount.LumpSum' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Instalments.AmountPerInstalment' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Instalments.IndexRate' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.Instalments.NumberOfInstalments' or
$xpath = 'Package.Content.Application.LoanDetails.EquityRelease.ProtectedEquityPercentage' or
$xpath = 'Package.Content.Application.LoanDetails.FeaturesSelected.ExtraFeature.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.FeaturesSelected.OffsetAccount.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.FeaturesSelected.OffsetAccount.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.FeaturesSelected.OffsetPercentage' or
$xpath = 'Package.Content.Application.LoanDetails.FundsDisbursement.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.FundsDisbursement.Amount' or
$xpath = 'Package.Content.Application.LoanDetails.FundsDisbursement.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Guarantor.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.LendingPurpose.PurposeAmount' or
$xpath = 'Package.Content.Application.LoanDetails.LendingPurpose.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Package.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.FromAccount.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment.Amount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment.FrequencyInterval' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment.GSTAmount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment.StampDutyAmount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment.TotalRepayments' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment.Amount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment.GSTAmount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment.StampDutyAmount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.PerDiemPaymentAmount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.PerDiemPaymentGSTAmount' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedRepayment.PerDiemPaymentStampDutyAmount' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.IntroducerMargin' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.IntroductoryMargin' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.OriginatorMargin' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.SubsidyBaseAmount' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.SubsidyBasePercent' or
$xpath = 'Package.Content.Application.LoanDetails.RateComposition.SubsidyRateSacrifice' or
$xpath = 'Package.Content.Application.LoanDetails.Security.SecurityAgreement.TermsAndConditions.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Security.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.SupplementaryCardholder.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod.Duration.Length' or
$xpath = 'Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod.Repayment.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Term.DistinctLoanPeriod.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Term.InterestOnlyReason.SequenceNumber' or
$xpath = 'Package.Content.Application.LoanDetails.Term.LoanReviewPeriod.Length' or
$xpath = 'Package.Content.Application.LoanDetails.Term.InterestTypeDuration' or
$xpath = 'Package.Content.Application.LoanDetails.Term.PaymentTypeDuration' or
$xpath = 'Package.Content.Application.LoanDetails.Term.TotalTermDuration' or
$xpath = 'Package.Content.Application.LoanDetails.AmountRequested' or
$xpath = 'Package.Content.Application.LoanDetails.BalloonRepaymentAmount' or
$xpath = 'Package.Content.Application.LoanDetails.LVR' or
$xpath = 'Package.Content.Application.LoanDetails.ProposedAnnualInterestRate' or
$xpath = 'Package.Content.Application.LoanDetails.RevertInterestRate' or
$xpath = 'Package.Content.Application.LoanDetails.SequenceNumber' or
$xpath = 'Package.Content.Application.MasterAgreement.AccountToIncorporate.SequenceNumber' or
$xpath = 'Package.Content.Application.MasterAgreement.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.MasterAgreement.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.MasterAgreement.Security.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.MasterAgreement.Security.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.MasterAgreement.Security.SecurityAgreement.TermsAndConditions.SequenceNumber' or
$xpath = 'Package.Content.Application.MasterAgreement.Security.SequenceNumber' or
$xpath = 'Package.Content.Application.MasterAgreement.ApprovedLimit' or
$xpath = 'Package.Content.Application.MasterAgreement.MasterFacilityLimit' or
$xpath = 'Package.Content.Application.MasterAgreement.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.CropArea' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.EngineHoursTotal' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.AgriculturalAsset.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.AirFrameHours' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.EngineHoursTotal' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.EngineHoursTTR' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Aircraft.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis.CompanyFinancials.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis.AnnualPaymentOnCommitments' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.CleaningEquipment.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.CleaningEquipment.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.CleaningEquipment.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.CleaningEquipment.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.CleaningEquipment.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.ContractPriceAmount' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.DepositAmount' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.DepositPaid' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.GSTAmount' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.InputTaxCredit' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.InsurancePremium' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.LuxuryCarTax' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.NetTradeIn' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.NonClaimableGST' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.OnRoadCosts' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.OtherCost' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.RegistrationCost' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.StampDuty' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.TotalCost' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.TradeInAmount' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ContractDetails.TradeInExistingFinance' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Encumbrance.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVAmount' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EstimatedValue.BalloonRVPercent' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EstimatedValue.EstimatedCGTLiability' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EstimatedValue.MinimumResidualValue' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EstimatedValue.TaxDepreciationRate' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.EstimatedValue.Value' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.FinancialAsset.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.FinancialAsset.Shares.QuantityOfShares' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.HospitalityAndLeisure.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Insurance.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ITAndAVEquipment.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MedicalEquipment.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MedicalEquipment.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MobileComputing.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MobileComputing.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.Cylinders' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.Doors' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineCapacity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.EngineHoursTotal' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.Kilometres' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.MotorVehicle.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.OfficeEquipment.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.OfficeEquipment.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.OfficeEquipment.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.OfficeEquipment.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.OfficeEquipment.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial.Age' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial.EffectiveLife' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial.EngineHoursTotal' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial.Quantity' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ToolsOfTrade.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.ToolsOfTrade.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Watercraft.OutboardMotor.SequenceNumber' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Watercraft.IncludedUsage' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.Watercraft.UsageAtStart' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.WaterRights.AccessRights' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.WaterRights.NumberOfShares' or
$xpath = 'Package.Content.Application.NonRealEstateAsset.SequenceNumber' or
$xpath = 'Package.Content.Application.OtherExpense.Arrears.Amount' or
$xpath = 'Package.Content.Application.OtherExpense.Arrears.NumberOfMissedPayments' or
$xpath = 'Package.Content.Application.OtherExpense.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.OtherExpense.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.OtherExpense.Amount' or
$xpath = 'Package.Content.Application.OtherExpense.SequenceNumber' or
$xpath = 'Package.Content.Application.OtherIncome.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.OtherIncome.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.OtherIncome.Amount' or
$xpath = 'Package.Content.Application.OtherIncome.GSTAmount' or
$xpath = 'Package.Content.Application.OtherIncome.NetAmount' or
$xpath = 'Package.Content.Application.OtherIncome.NumberOfBoarders' or
$xpath = 'Package.Content.Application.OtherIncome.NumberOfRepeats' or
$xpath = 'Package.Content.Application.OtherIncome.PreviousYearAmount' or
$xpath = 'Package.Content.Application.OtherIncome.SequenceNumber' or
$xpath = 'Package.Content.Application.Overview.BridgingFinance.BridgingTerm' or
$xpath = 'Package.Content.Application.Overview.BridgingFinance.EndDebt' or
$xpath = 'Package.Content.Application.Overview.BridgingFinance.EstimatedSellingCosts' or
$xpath = 'Package.Content.Application.Overview.LinkedApplicationDetails.SequenceNumber' or
$xpath = 'Package.Content.Application.Overview.BrokerApplicationSequenceNumber' or
$xpath = 'Package.Content.Application.Overview.LodgementSequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.AdditionalCitizenship.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.AdditionalForeignResidency.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.CurrentAddress.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.EmailAddress.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.PreviousAddress.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.PriorAddress.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Contact.PriorAddress.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.CreditHistory.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.BonusAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.CarAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.CommissionAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.GrossRegularOvertimeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.GrossSalaryAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetBonusAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetCarAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetCommissionAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetRegularOvertimeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetSalaryAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetWorkAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.NetWorkersCompensationAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.WorkAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income.WorkersCompensationAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.AverageHoursPerWeek' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.ForeignEmployed.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.GovernmentBenefitsAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.JobseekerSupportAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetGovernmentBenefitsAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetJobseekerSupportAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetOtherIncomeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetPrivatePensionAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.NetSuperannuationAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.OtherIncomeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.PrivatePensionAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.Income.SuperannuationAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.NotEmployed.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.BonusAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.CarAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.CommissionAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossRegularOvertimeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.GrossSalaryAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetBonusAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCarAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetCommissionAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetRegularOvertimeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetSalaryAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.NetWorkersCompensationAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkAllowanceAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.Income.WorkersCompensationAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.AverageHoursPerWeek' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.KiwiSaverPercentage' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.PAYE.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Business.NumberOfEmployees' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Business.NumberOfLocations' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.Allowances' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.Bonus' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.CarExpense' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.Depreciation' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.Interest' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.Lease' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.Salary' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.ForeignSourcedIncome.NZDAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.ProfitAfterTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncome.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.Allowances' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.Bonus' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.CarExpense' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.Depreciation' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.Interest' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.Lease' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.Salary' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ForeignSourcedIncome.NZDAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ProfitAfterTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.Allowances' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.Bonus' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.CarExpense' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.Depreciation' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.Interest' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.Lease' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.Salary' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ForeignSourcedIncome.NZDAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ProfitAfterTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Allowances' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Bonus' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.CarExpense' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Depreciation' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Interest' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Lease' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.Salary' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ForeignSourcedIncome.NZDAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProfitAfterTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Allowances' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Bonus' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.CarExpense' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Depreciation' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Interest' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Lease' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.Salary' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ForeignSourcedIncome.NZDAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ProfitAfterTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.DeclaredIncome.IncomeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.DeclaredIncome.NetIncomeAmount' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.Duration.Length' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis.CompanyFinancials.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis.AnnualPaymentOnCommitments' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.AverageHoursPerWeek' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SelfEmployed.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Employment.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.ExistingCustomer.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.Insurance.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.MaritalStatusDetails.SpouseGrossIncome' or
$xpath = 'Package.Content.Application.PersonApplicant.PowerOfAttorney.DealingNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.PreviousName.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.ProofOfIdentity.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.ResponsibleLending.Mitigant.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.ResponsibleLending.SignificantChange.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.MonthsInCurrentProfession' or
$xpath = 'Package.Content.Application.PersonApplicant.SequenceNumber' or
$xpath = 'Package.Content.Application.PersonApplicant.YearsInCurrentProfession' or
$xpath = 'Package.Content.Application.ProductSet.Product.SequenceNumber' or
$xpath = 'Package.Content.Application.ProductSet.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.ConstructionStage.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.ConstructionStage.StageAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.BuildPriceAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.InitialAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.LandValue' or
$xpath = 'Package.Content.Application.RealEstateAsset.ConstructionDetails.TotalAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.ContractDetails.ContractPriceAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.ContractDetails.DepositAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.ContractDetails.DepositPaid' or
$xpath = 'Package.Content.Application.RealEstateAsset.ContractDetails.DepositPercentageRequested' or
$xpath = 'Package.Content.Application.RealEstateAsset.ContractDetails.TransferOfLandAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.Encumbrance.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.EstimatedValue.EstimatedCGTLiability' or
$xpath = 'Package.Content.Application.RealEstateAsset.EstimatedValue.Value' or
$xpath = 'Package.Content.Application.RealEstateAsset.Insurance.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.PercentOwned.Owner.Percent' or
$xpath = 'Package.Content.Application.RealEstateAsset.PercentOwned.Owner.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyExpense.Amount' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyExpense.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.FloorArea' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.LandArea' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfBathrooms' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfBedrooms' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfCarSpaces' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfDwellings' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.NumberOfFloors' or
$xpath = 'Package.Content.Application.RealEstateAsset.PropertyFeatures.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.RentalIncome.NetRentalAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.RentalIncome.RentalAmount' or
$xpath = 'Package.Content.Application.RealEstateAsset.RentalIncome.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.Rural.NumberOfBuildings' or
$xpath = 'Package.Content.Application.RealEstateAsset.Title.SequenceNumber' or
$xpath = 'Package.Content.Application.RealEstateAsset.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedCompany.BeneficialOwner.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedCompany.Contact.TradingAddress.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedCompany.Director.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedCompany.Partner.PercentOwned' or
$xpath = 'Package.Content.Application.RelatedCompany.Partner.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedCompany.Shareholder.PercentOwned' or
$xpath = 'Package.Content.Application.RelatedCompany.Shareholder.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedCompany.NumberOfDirectors' or
$xpath = 'Package.Content.Application.RelatedCompany.NumberOfPartners' or
$xpath = 'Package.Content.Application.RelatedCompany.NumberOfShareholders' or
$xpath = 'Package.Content.Application.RelatedCompany.SequenceNumber' or
$xpath = 'Package.Content.Application.RelatedPerson.SequenceNumber' or
$xpath = 'Package.Content.Application.SalesChannel.Commission.CommissionAmount' or
$xpath = 'Package.Content.Application.SalesChannel.Commission.SequenceNumber' or
$xpath = 'Package.Content.Application.SalesChannel.Commission.Trail' or
$xpath = 'Package.Content.Application.SalesChannel.Commission.UpfrontPayment' or
$xpath = 'Package.Content.Application.SalesChannel.LoanWriter.DelegatedRecipient.SequenceNumber' or
$xpath = 'Package.Content.Application.Summary.Fee.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.Summary.Fee.ApplicableDuration.Length' or
$xpath = 'Package.Content.Application.Summary.Fee.PayableToAccount.SequenceNumber' or
$xpath = 'Package.Content.Application.Summary.Fee.Percentage.Rate' or
$xpath = 'Package.Content.Application.Summary.Fee.Amount' or
$xpath = 'Package.Content.Application.Summary.Fee.NumberOfRepeats' or
$xpath = 'Package.Content.Application.Summary.Fee.SequenceNumber' or
$xpath = 'Package.Content.Application.Summary.LoanToValuationRatio.ContributingValuation.SequenceNumber' or
$xpath = 'Package.Content.Application.Summary.LoanToValuationRatio.ApplicationLVR' or
$xpath = 'Package.Content.Application.Summary.LoanToValuationRatio.PeakDebtLVR' or
$xpath = 'Package.Content.Application.Summary.RolledUpAmounts.TotalCreditLimitAmount' or
$xpath = 'Package.Content.Application.Summary.RolledUpAmounts.TotalSecurityAmount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.Applicant.SequenceNumber' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.NetDisposableIncome.Amount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.TotalGrossIncome.Amount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.TotalNetIncome.Amount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.TotalSystemCalculatedExpenses.Amount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.TotalSystemCalculatedLivingExpenses.Amount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.TotalUserStatedLivingExpenses.Amount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.DSR' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.DTI' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.LTI' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.MaximumLoanAmount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.MaximumRepaymentAmount' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.MRIM' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.NSR' or
$xpath = 'Package.Content.Application.Summary.ServiceabilityResults.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.BeneficialOwner.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.Beneficiary.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.Contact.PrincipalTradingAddressDuration.Length' or
$xpath = 'Package.Content.Application.TrustApplicant.Contact.RegisteredAddressDuration.Length' or
$xpath = 'Package.Content.Application.TrustApplicant.DealingNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.DeclaredIncome.IncomeAmount' or
$xpath = 'Package.Content.Application.TrustApplicant.DeclaredIncome.NetIncomeAmount' or
$xpath = 'Package.Content.Application.TrustApplicant.ExistingCustomer.AccountNumber.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.FinancialAnalysis.CompanyFinancials.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.FinancialAnalysis.AnnualPaymentOnCommitments' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.Allowances' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.Bonus' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.Depreciation' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.Interest' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.Lease' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.PaymentToTrustee' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.Salary' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.ProfitAfterTax' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.TrustApplicant.Income.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.Allowances' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.Bonus' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.Depreciation' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.Interest' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.Lease' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.PaymentToTrustee' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.Salary' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.ProfitAfterTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrevious.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.Allowances' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.Bonus' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.Depreciation' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.Interest' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.Lease' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.PaymentToTrustee' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.Salary' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.ProfitAfterTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomePrior.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.Allowances' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.Bonus' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.Depreciation' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.Interest' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.Lease' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.PaymentToTrustee' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.Salary' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.ProfitAfterTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeRecent.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.Allowances' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.AmortisationOfGoodwill' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.Bonus' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.CarryForwardLosses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.Depreciation' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.HomeOffice' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.Interest' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.Lease' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.NonCashBenefits' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.NonRecurringExpenses' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.PaymentToTrustee' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.Salary' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.Addback.SuperannuationExcess' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.ProfitAfterTax' or
$xpath = 'Package.Content.Application.TrustApplicant.IncomeYearToDate.ProfitBeforeTax' or
$xpath = 'Package.Content.Application.TrustApplicant.TrustDeedVariation.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.Trustee.SequenceNumber' or
$xpath = 'Package.Content.Application.TrustApplicant.NumberOfBeneficiaries' or
$xpath = 'Package.Content.Application.TrustApplicant.NumberOfTrustees' or
$xpath = 'Package.Content.Application.TrustApplicant.SequenceNumber' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.DepositPaid' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.FinalPosition' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.GSTComponent' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.NonTaxableAmount' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.OnCosts' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.Payout' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.Refund' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.SequenceNumber' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.TaxableAmountOfAsset' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.TotalCostOfAsset' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.Asset.TradeIn' or
$xpath = 'Package.Content.Application.VendorTaxInvoice.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.ClientMandateDetails.InterestRateRange.HigherInterestRate' or
$xpath = 'Package.Content.NeedsAnalysis.ClientMandateDetails.InterestRateRange.LowerInterestRate' or
$xpath = 'Package.Content.NeedsAnalysis.ClientMandateDetails.LVRTarget' or
$xpath = 'Package.Content.NeedsAnalysis.CoApplicantInterview.Applicant.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.CoApplicantInterview.Witness.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.FutureCircumstances.Applicant.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.FutureCircumstances.ResponsibleLending.Mitigant.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.FutureCircumstances.ResponsibleLending.SignificantChange.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.Interview.Attendee.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.LoanTermSought.Length' or
$xpath = 'Package.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.FixedAndVariableRate.FixedPeriodDuration.Length' or
$xpath = 'Package.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.FixedRate.FixedPeriodDuration.Length' or
$xpath = 'Package.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.InterestOnly.InterestOnlyDuration.Length' or
$xpath = 'Package.Content.NeedsAnalysis.PurposeOfApplication.Amount' or
$xpath = 'Package.Content.NeedsAnalysis.PurposeOfApplication.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.CoApplicantIncomeDetails.CoApplicant.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.AcceptableAsset.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.PropertyToSell.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.AcceptableAssetTotalValue' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.AssetsToEquityShortfallRatio' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.AvailableEquity' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.DownsizeToPropertyValue' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.EquityShortfallAmount' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.DownsizingHomeDetails.PropertyToSellTotalValue' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.LenderAcceptableAssetsDetails.Asset.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.LenderAcceptableAssetsDetails.TotalLenderAcceptableAssetsAmount' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.LenderAcceptableAssetsDetails.TotalLenderAcceptableAssetsAmountToTotalLiabilityRatio' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.TotalLiability' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.AgeAtEndOfLoan' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.IntendedRetirementAge' or
$xpath = 'Package.Content.NeedsAnalysis.RetirementDetails.Applicant.SequenceNumber' or
$xpath = 'Package.Content.NeedsAnalysis.LoanAmountSought' or
$xpath = 'Package.Content.StatementOfPosition.Applicant.SequenceNumber' or
$xpath = 'Package.Content.StatementOfPosition.SequenceNumber' or
$xpath = 'Package.Instructions.ApplicationInstructions.Submit.Condition.SequenceNumber' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Event.SequenceNumber' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.Condition.Product.SequenceNumber' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.Condition.SequenceNumber' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.Declined.SequenceNumber' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.PreApproved.EstablishmentAndGovernmentFees' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.PreApproved.EstimatedBorrowingPower' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.PreApproved.EstimatedRepaymentAmount' or
$xpath = 'Package.Instructions.ApplicationInstructions.Update.Status.PreApproved.SequenceNumber' or
$xpath = 'Package.Instructions.ErrorInstructions.Annotation.SequenceNumber' or
$xpath = 'Package.Instructions.ErrorInstructions.SequenceNumber' or
$xpath = 'Package.Publisher.RelatedSoftware.SequenceNumber' or
$xpath = 'Package.Recipient.SequenceNumber' or
$xpath = 'Package.TransformMetadata.Identifier.SequenceNumber' 
">
				<xsl:text>"</xsl:text>
				<xsl:value-of select="concat('@', name())"/>" : <xsl:value-of select="."/>
				<xsl:if test="position() &lt; last()">,</xsl:if>
			</xsl:when>
			
			<xsl:otherwise>
				<xsl:text>"</xsl:text>
				<xsl:value-of select="concat('@', name())"/>" : <xsl:call-template name="escape-string"><xsl:with-param name="s" select="."/></xsl:call-template>
				<xsl:if test="position() &lt; last()">,</xsl:if>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template match="node/@TEXT | text()" name="removeBreaks">
		<xsl:param name="pText" select="normalize-space(.)"/>
		<xsl:choose>
			<xsl:when test="not(contains($pText, '&#xA;'))">
				<xsl:copy-of select="$pText"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring-before($pText, '&#xD;&#xA;'), ' ')"/>
				<xsl:call-template name="removeBreaks">
					<xsl:with-param name="pText" select="substring-after($pText, '&#xD;&#xA;')"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

</xsl:stylesheet>
`;

